{"version":3,"sources":["components/minitaskPage/play-button.svg","components/profilePage/content/icons/hoanthanh.svg","components/profilePage/content/icons/user.svg","components/profilePage/content/icons/chuahoanthanh.svg","components/profilePage/content/icons/padlock-unlock.svg","components/coursePage/body/CourseItem.js","components/coursePage/body/CourseBody1.js","js/utils/setAuthToken.js","js/actions/authActions.js","js/actions/types.js","js/actions/userAction.js","components/coursePage/header/CourseHeader.js","components/coursePage/CoursePage.js","components/taskPage/body/TaskItem.js","components/taskPage/body/TaskBody.js","components/taskPage/header/TaskHeader.js","components/taskPage/TaskPage.js","components/minitaskPage/body/MiniTaskDesc.js","components/minitaskPage/header/UserMenu.js","components/minitaskPage/header/MiniTaskHeader.js","components/minitaskPage/body/ResultPanel.js","components/minitaskPage/body/TestsPanel.js","components/roomPractice/Notfoundpage.jsx","websocket/index.jsx","components/minitaskPage/MiniTaskPage.js","components/minitaskPage/body/CodeEditor.js","components/minitaskPage/MiniTaskPageNoSplit.js","components/minitaskPage/MinitaskPageResponsive.js","components/homePage/HomePage.js","common/regex.js","components/signUpPage1/SignUpPage.js","components/searchCertPage/SearchCertPage.js","components/minitaskPage/ReactMde.js","components/createMinitaskPage/body/CodeEditor.js","components/createMinitaskPage/body/CreateMiniTaskBody.js","components/createMinitaskPage/CreateMiniTaskPage.js","components/adminPage/hocode/auth/authProvider.js","components/adminPage/hocode/catchAll.js","components/adminPage/hocode/customRoutes.js","components/adminPage/hocode/dataProvider.js","components/adminPage/hocode/Menu.js","components/adminPage/hocode/utils.js","components/adminPage/hocode/MyLayout.js","components/adminPage/hocode/theme.js","components/adminPage/hocode/customActions/ModelBookEditToolbar.js","components/adminPage/hocode/filters/ModelBookFilter.js","components/adminPage/hocode/resources/ModelBook.js","components/adminPage/hocode/customActions/ModelCourseEditToolbar.js","components/adminPage/hocode/filters/ModelCourseFilter.js","components/adminPage/hocode/resources/ModelCourse.js","components/adminPage/hocode/customActions/ModelEventEditToolbar.js","components/adminPage/hocode/filters/ModelEventFilter.js","components/adminPage/hocode/resources/ModelEvent.js","components/profilePage/content/minitask/ReactMde.js","components/profilePage/content/minitask/CodeEditor.js","components/profilePage/content/minitask/ShowUnitTest.js","components/profilePage/content/minitask/CreateMiniTaskBody.js","components/profilePage/content/minitask/MinitaskEdit.js","components/adminPage/hocode/filters/ModelMinitaskFilter.js","components/adminPage/hocode/resources/ModelMinitask.js","components/adminPage/hocode/customActions/ModelTaskEditToolbar.js","components/adminPage/hocode/filters/ModelTaskFilter.js","components/adminPage/hocode/resources/ModelTask.js","components/adminPage/hocode/customActions/ModelCertEditToolbar.js","components/adminPage/hocode/filters/ModelCertFilter.js","components/adminPage/hocode/fields/ReviewField.js","components/adminPage/hocode/resources/ModelCert.js","components/adminPage/hocode/customActions/ModelUserEditToolbar.js","components/adminPage/hocode/filters/ModelUserFilter.js","components/adminPage/hocode/resources/ModelUser.js","components/adminPage/hocode/customActions/ModelFightEditToolbar.js","components/adminPage/hocode/filters/ModelFightFilter.js","components/adminPage/hocode/resources/ModelFight.js","js/reducers/authReducer.js","js/reducers/errorReducer.js","js/reducers/userReducer.js","js/reducers/index.js","js/store/store.js","components/adminPage/hocode/ReactAdmin.js","components/profilePage/content/account/Account.js","components/profilePage/content/course/CourseItem.js","components/profilePage/content/course/CourseBody1.js","components/profilePage/content/overview/CardUser.jsx","components/profilePage/content/overview/UserInfo.jsx","components/profilePage/content/overview/Minitask.jsx","components/profilePage/content/overview/Fight.jsx","components/profilePage/content/overview/Overview.js","components/profilePage/content/print/Certificate.js","components/profilePage/content/print/Course.jsx","components/profilePage/content/print/Minitask.jsx","components/profilePage/content/print/Practice.jsx","components/profilePage/content/print/PrintBody.js","components/profilePage/content/task/TaskItem.js","components/profilePage/content/courseLeaderBoard/UserRank.jsx","components/profilePage/content/courseLeaderBoard/CourseLeaderBoard.jsx","components/profilePage/content/task/TaskBody.js","components/profilePage/header/UserMenu.js","components/profilePage/header/AppBarContent.js","components/profilePage/navRight/NavRight.js","components/practicePage/Minitask.jsx","components/practicePage/HeaderPracticePage.jsx","components/practicePage/PracticePage.jsx","components/roomPractice/Room.jsx","components/roomPractice/RoomPracticePage.jsx","components/roomPractice/CreateRoomPage.jsx","components/roomPractice/UpdateFightPage.jsx","components/roomPractice/Minitask.jsx","components/roomPractice/UserRank.jsx","components/roomPractice/RoomDetail.jsx","components/roomPractice/MinitaskBoard.jsx","components/roomPractice/MinitaskBoardInfo.jsx","components/leaderboard/TopUser.jsx","components/roomPractice/MainLeaderBoard.jsx","components/profilePage/ProfilePage.js","components/loginPage1/LoginPage.js","private-route/PrivateRoute.js","components/leaderboard/User.jsx","components/leaderboard/LeaderboardPage.jsx","App.js","serviceWorker.js","index.js","components/minitaskPage/giphy.gif","components/coursePage/header/logo.png","components/taskPage/icons/hoanthanh.svg","components/taskPage/icons/user.svg","components/taskPage/icons/chuahoanthanh.svg","components/taskPage/icons/padlock-unlock.svg","components/taskPage/header/logo.png"],"names":["module","exports","CourseItem","this","props","classes","course","console","log","Grid","container","direction","style","height","display","justifyContent","alignItems","className","courseItem","item","width","overflow","src","background_image","objectFit","borderRadius","marginTop","alt","justify","padding","margin","textAlign","textTransform","color","fontWeight","fontFamily","course_name","task_solved","tasks_complete","task_count","Component","withStyles","boxShadow","background","cursor","CourseBody","state","courses","axios","get","then","res","data","setState","CourseContainer","xs","sm","map","key","id","textDecoration","to","paddingTop","minHeight","setAuthToken","token","defaults","headers","common","registerUser","userData","history","dispatch","post","push","catch","err","type","payload","response","setCurrentUser","user","logoutUser","localStorage","removeItem","submitUpdateMinitask","minitask_id","task_id","course_id","courseStatus","course_status","getUser","setUndefinedNextMinitask","undefined","CourseHeader","onLogout","e","preventDefault","bind","htmlFor","href","require","codepoint","firstname","onClick","connect","auth","rootReducer","errors","CoursePage","Fragment","TaskItem","minitask","status","flexGrow","mini_task_name","vitri","backgroundColor","point_unlock","task","md","marginBottom","zIndex","textOverflow","whiteSpace","task_name","minitasks","MiniTaskItem","renderMiniItem","TaskBody","tasks","courseId","TasksContainer","TaskHeader","TaskPage","params","match","MiniTaskDesc","DescContainer","Slide","in","timeout","Box","my","Typography","variant","minitaskName","marginRight","level","code_point","escapeHtml","source","mini_task_desc","renderers","linkReference","reference","$ref","children","heading","inlineCode","position","StyledMenu","paper","border","paddingLeft","paddingRight","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","palette","white","MenuItem","React","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","keepMounted","open","Boolean","onClose","fontSize","marginLeft","MiniTaskHeader","onBack","goBack","UserMenu","TabPanel","value","index","other","component","role","hidden","aria-labelledby","a11yProps","LinkTab","Tab","minWidth","useStyles","makeStyles","ResultPanel","setValue","unit_tests","result","flexDirection","Tabs","onChange","newValue","aria-label","label","overflowY","overflowX","unit_test","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","inputs","input","expected_output","stdout","errorRuntime","error","info","varian","substring","length","WASSUCCESSFUL","COMPLETEDIN","RUNCOUNT","GETFAILURECOUNT","GETALLFAILURE","testfail","DETAIL","renderResultPanel","TestsPanel","isLoading","sizeUnit","size","loading","renderTestsPanel","Notfoundpage","spacing","p","CardMedia","title","socket","WebSocket","connectWebSocket","cb","onopen","onmessage","msg","onclose","onerror","sendMsg","send","MiniTaskPage","JSON","stringify","fight_id","user_id","point","request","handleClickSnack","handleCloseSnack","handleChangeTheme","target","handleChangeAutoComplete","isAutocomplete","renderCodingTime","isUserCompleteFight","dayComplete","hourComplete","minuteComplete","secondComplete","days","hour","minute","second","userCode","isLoadingComponent","isUserStudy","isUserFight","numbers_doing","completedMinitask","user_minitask_practice","isLoadingCode","minitaskListId","minitaskUser","userFight","fightminitaskdone","startTime","contestStatus","isUserJoinFight","executeCode","submitCode","submitCodePractice","submitCodeFight","updateUserCode","resetCode","createFileTest","pathname","location","startsWith","fightId","miliSecComplete","Date","end_time","start_time","Math","floor","miliSec","seconds","minutes","hours","date","getTime","dt","IdMinitask","i","isUserJoin","code","fight","time_start","time_end","IdMinitaskDone","minitaskId","document","numbers","user_code","template_code","completed","setInterval","prevProps","formatCode","js_beautify","max_preserve_newlines","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","dismiss","DismissReason","cancel","junit4","output_type_func","includes","forEach","inputsFormat","name_func","test","stderr","taskId","backdrop","toast","containerId","listID","indexOf","newNumbers","put","today","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","tried","newFightUser","newStatus","btnSubmit","Button","startIcon","disabled","Snackbar","ContentProps","autoHideDuration","message","Divider","ButtonGroup","object","obj","Link","float","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","bgcolor","ml","InputLabel","Select","labelId","Checkbox","checked","inputProps","flexShrink","mt","mode","showPrintMargin","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","alignContent","renderPassedTestCount","next_minitask","enableMultiContainer","POSITION","TOP_RIGHT","CodeEditor","options","lineNumbers","highlightSelectionMatches","indentUnit","lineWrapping","dragDrop","autoCloseBrackets","spellcheck","autocorrect","extraKeys","MarkText","from","line","ch","css","onBeforeChange","editor","bottom","right","beautifyCode","MinitaskPageResponsive","minDeviceWidth","maxDeviceWidth","MiniTaskPageNoSplit","Copyright","align","isAuthenticated","nextProps","backgroundPosition","backgroundRepeat","backgroundSize","gutterBottom","paragraph","cardGrid","paddingBottom","card","regexEmail","regexPassword","CssTextField","borderBottomColor","borderColor","TextField","SignUpPage","isError","errorFormNew","errorForm","email","password","password2","onSubmit","messageError","trim","String","toLowerCase","firstName","lastName","newUser","socialAccount","val","Container","maxWidth","CssBaseline","borderBottom","form","noValidate","autoComplete","name","required","fullWidth","autoFocus","helperText","submit","body","avatar","SearchCertPage","onSubmitSearch","rows","Axios","searchID","handleChange","Paper","rootSearch","InputBase","placeholder","IconButton","iconButton","Table","table","TableHead","TableRow","TableCell","TableBody","row","scope","search_id","timestamp","toLocaleString","CircularProgress","viewBox","xmlns","fill","fillRule","transform","fillOpacity","cx","cy","rx","ry","d","searchIcon","pointerEvents","inputRoot","inputInput","search","flex","withTheme","ReactMde","handleMarkdownChange","spellChecker","inputList","input_type","input_name","join","readOnly","updateTemplateCode","selectStyles","menu","styles","CreateMiniTaskBody","coursesOption","tasksOption","createRef","courses_ref","tasks_ref","handleSimpleInputChange","onSelectChange","onCoursesSelectChange","onTasksSelectChange","handleSubmit","coursesFilter","filter","coursesoption","newMiniTask","select_value","current","find","inputListLength","arrayInput","index0","index1","CreateMiniTaskBodyContainer","ref","defaultValue","addInput","maxHeight","handleListInputNameChange","handleListInputTypeChange","addTest","handleInputTestChange","handleOutputTestChange","AUTH_LOGIN","username","Request","method","Headers","fetch","Error","statusText","json","decodedToken","decodeJwt","setItem","AUTH_LOGOUT","Promise","resolve","AUTH_ERROR","reject","AUTH_CHECK","getItem","AUTH_GET_PERMISSIONS","catchAll","Redirect","COMPOSITE_KEY_RESOURSES","PK_MAPPING","FILTER_LENGTHS","GET_MANY_FILTER","convertRESTRequestToHTTP","apiUrl","resource","url","query","pagination","page","perPage","sort","field","order","filterLengths","Object","keys","minLength","min","maxLength","max","slice","filterName","ids","convertHTTPResponseToREST","pk","has","hasOwnProperty","total","parseInt","dataProvider","httpClient","fetchUtils","fetchJson","a","Accept","id_token","set","ICONS","books","events","profile","certs","users","fights","changeIDToName","resources","getResources","onMenuClick","logout","hasList","MenuItemLink","primaryText","string","split","word","charAt","toUpperCase","leftIcon","Responsive","small","medium","MyLayout","Layout","Menu","createMuiTheme","primary","indigo","secondary","main","red","ModelBookEditToolbar","Toolbar","SaveButton","submitOnEnter","redirect","DeleteButton","ModelBookFilter","Filter","ModelBookList","List","filters","bulkActionButtons","Datagrid","sortable","ImageField","EditButton","ModelBookCreate","Create","SimpleForm","TextInput","resettable","multiline","ModelBookEdit","Edit","toolbar","ModelCourseEditToolbar","ModelCourseFilter","ModelCourseList","ChipField","DateField","validateCourseCreate","values","ModelCourseCreate","courseTypes","choicesCourse","rObj","course_type","validate","SelectInput","choices","utils","MomentUtils","format","clearable","ampm","disablePast","ModelCourseCreateForMod","endDateValidation","allValues","startDateValidation","ModelCourseEdit","ModelEventEditToolbar","ModelEventFilter","ModelEventList","ModelEventCreate","ModelEventEdit","jBeautify","js","template_code_format","indent_size","ShowUnitTest","optionsLevel","handleModalVariableOpen","isImportVariableOpen","renderTitle","handleShowError","isShowError","errContent","level_ref","handleRemoveInput","handleRemoveUnitTest","onLevelSelectChange","input_list","window","reload","splice","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","button","mx","level_ref_select","output_type_func_select","mr","MinitaskEdit","courses_option_select","task_option_select","minitasksId","found","element","found2","ModelMinitaskFilter","ModelMinitaskList","NumberField","ModelMinitaskCreate","ModelMinitaskEdit","ModelTaskEditToolbar","ModelTaskFilter","ModelTaskList","ModelTaskCreate","Skeleton","ModelTaskEdit","getMinitaskDesc","minitaskDesc","checkDuplicateMinitask","task_list","j","onChangeSearch","keyword","minitaskBank","tempMinitaskList","checkFilterCondition","sortByLevel","code_point_Range","sliderValue","onChangeSort","filterList","onChangeSlider","saveMinitaskList","task_minitask","isNew","isLoadingImportTask","temp_task_minitask","errorMessage","openErr","minitaskListFromBank","isOpenMessage","importedMinitask","getMinitaskFromBank","removeMinitask","isDuplicateMinitask","tasks_reverse","reverse","delete","Chip","Card","tableLayout","Tooltip","placement","renderLevelMinitaskChip","orientation","FormControl","Slider","valueLabelDisplay","visible","effect","onClickAway","closeModal","closeModalError","ModelCertEditToolbar","ModelCertFilter","ReviewField","record","reviewStatus","setReviewStatus","recordNew","agree","ModelCertList","xName","onChangeImage","fileReader","FileReader","readAsDataURL","files","onload","electronic_signature","dataUpdate","name_site","review_point","accept","Avatar","ModelCertCreate","ModelCertEdit","ModelUserList","ModelUserFilter","ModelUserCreate","NumberInput","ModelUserEdit","ModelUserEditToolbar","ModelFightEditToolbar","ModelFightFilter","ModelFightList","validateFightCreate","fight_name","backgroud_img","numbers_std","ModelFightCreate","DateTimeInput","ModelFightEdit","MinitaskListID","isEmpty","initialState","lastname","isUserLoading","combineReducers","action","createBrowserHistory","basename","store","authProvider","i18nProvider","defaultI18nProvider","locale","reducer","admin","adminReducer","formReducer","router","routerReducer","i18n","i18nReducer","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","createStore","USER_LOGOUT","compose","applyMiddleware","formMiddleware","routerMiddleware","thunk","run","createAdminStore","vietnameseMessages","ReactAdmin","Admin","appLayout","customRoutes","_","permissionslocal","Resource","list","create","edit","Account","getApi","image","changeUserInfo","setTimeout","urlPreview","handleChangeImage","toBase64","ImgToBase64","urlimage","URL","createObjectURL","image1","file","reader","mb","InputLabelProps","visibility","userId","randomColor","listColor","deepOrange","deepPurple","green","pink","random","renderPraceticeProgress","coursePassInfo","total_minitask","round","minitask_solved","isLoadingCourseInfo","LinearProgress","isCodePass","user_code_point","totalMinitask","sec","liked","stop","interval","calculateCountdown","endDate","diff","parse","timeLeft","years","millisec","clearInterval","newcourse","prevState","numbers_like","chip","timer","addLeadingZeros","toISOString","replace","Rating","rating_value","read-only","precision","wordBreak","course_desc","light","boxSizing","handleCountLiked","FacebookShareButton","smallAvatar","lap_trinh_co_so_id","lap_trinh_nang_cao_id","giai_quyet_van_de_id","courseIsActived","coursesTemp","courseActived","lap_trinh_co_so_list","lap_trinh_nang_cao_list","giai_quyet_van_de_list","handleChangeSelect","courseFilter","renderCourseTypeTitle","onHandleSearch","CourseContainer1","InputProps","startAdornment","InputAdornment","img","CardUser","avt","BorderLinearProgress","lighten","bar","UserInfo","totalCourse","userCourse","minitaskInfo","fightInfo","solved","total_easy","total_hard","total_medium","total_private_joined_fight","total_public_joined_fight","total_private_fight","total_public_fight","Minitask","renderLevel","zeroMinWidth","noWrap","Fight","fight_desc","handleJoinFight","Overview","handleChangeTab","tab","daily_minitasks","chartInfo","newestCourse","threeRandomMinitask","user_fight_info","twoNewestFights","daily_minitask","isLoadingCoursePassInfo","newestCourseList","studiedCourseList","threeRandomMinitaskList","twoNewestFightsList","AppBar","easy","hard","flexWrap","media","Certificate","top","cert","left","toLocaleDateString","config","Course","rating","backgroundImage","desc","CardContent","renderStatus","ListItem","Practice","nums","renderMinitaskInfo","user_minitask","user_minitask_favourite","allTask","todo","attempted","user_practice_info","chartData","minitaskList","user_minitask_favourite_list","centered","valueField","argumentField","innerRadius","PrintBody","user_codepoint","certificate","certificateViewStart","user_course","getCertificate","isLoadingCert","openDialogCertificate","handleDialogCertificateOpen","handleDialogCertificateCheck","handleDialogCertificateClose","renderDialog","DialogContent","dividers","el","CertificateRef","DialogTitle","trigger","content","courseList","renderButtonCertificate","Dialog","verticalAlign","lineHeight","UserRank","rank","isCurrentUser","user_info","user_point","CourseLeaderBoard","courseLeaderBoard","currentUser","leaderBoard","getParams","matchPath","path","handleChangeValue","showFormReasons","borderTopLeftRadius","resize","reason","PointerEvent","handleCancel","coursPassInfo","showForm","currentParams","msg_deny","handleSendEmail","alert","isFound","course_info","tasks1","average","str","utf8","unescape","encodeURIComponent","charCodeAt","to_mail","user_create","Message","string2Bin","mail","msg_accept","courseLoop","year","month","day","handleBtnAccepted","showAlert","handleBtnDeny","onClickRating","indicatorColor","reduce","prev","curr","AppBarContent","Fab","mobileHide","searchComponent","inputSearchComponent","iconButtonSearchComponent","breakpoints","down","NavRight","handleClickDialogReadmoreOpen","bookcontent","bookImage","booktitlet","openDialogReadmore","handleDialogReadmoreClose","limitNum","newText","itemCard","listitem","time","indicators","book","CardActionArea","link","limitText","DialogContentText","details","cover","controls","componentDidMount","isUserLikeMinitask","handleUserLikeMinitask","HeaderPracticePage","isLoadingFilterData","tempData","totalPage","isLoadingData","handleChangePage","handleChangeStatus","searchKeyWord","handleChangeLevel","handleChangeKeyword","chartAllTask","srcset","Pagination","count","PracticePage","Room","renderJoinContestButton","is_user_register","enqueueSnackbar","renderContestStatus","getDay","renderUserFightButton","isUserRoom","maxSnack","withSnackbar","RoomPracticePage","publicFightPages","currentPublicFightPage","privateFightPages","currentPrivateFightPage","publicFights","privateFights","fight_user","fight_user_joined","publicFightsList","privateFightsList","fight_user_list","fight_user_joined_list","CreateRoomPage","onChangeFightName","isFightNameError","fight_name_error","onChangeFightDesc","isFightDescError","fight_desc_error","onChangeFightBackgroundImg","isFightBackGroundImgError","fight_backgroundImg_error","onChangeNumStd","isFightNumStdError","fight_numStd_error","handleStartTimeChange","_d","isStartTimeValid","start_time_error_message","isEndTimeValid","end_time_error_message","handleEndTimeChange","fight_minitask_temp","fight_minitask","isMinitaskExist","saveFight","isOpenError","x","DateTimePicker","inputVariant","showTodayButton","UpdateFightPage","isUpdating","renderChinhPhucButton","wrap","RoomDetail","handleSearchUser","isLoadingSearch","headerLeaderBoard","handleOpenSearchUserModal","isOpenSearchFriend","checkUserInInvitedList","invitedUsers","handleInviteUser","users_fight","handleDeleteUserFromInvitedList","deleted_user","renderInviteFriendButton","user_created","inviteFriendByMail","host","renderRegisterButton","renderFighType","fight_type","handleClickStartButton","isLoadingStartBtn","firstIdMinitask","renderStartButton","handleClickViewLeaderBoard","userList","invitedUserList","onDelete","fight_minitask_list","disable","withRouter","MinitaskBoard","MinitaskBoardInfo","TopUser","renderTopUser","leader_board_type","coding_time","widthAvt","heightAvt","medal","MainLeaderBoard","renderRank","renderFightUserMinitask","fight_minitasks","leader_board","fight_user_minitask","fontStyle","TableContainer","ProfilePage","mobileOpen","handleDrawerToggle","drawer","MenuList","selected","onClickMenuItem","dense","appBar","edge","menuButton","drawerMain","Hidden","smUp","implementation","Drawer","anchor","drawerPaper","ModalProps","xsDown","navRight","exact","up","mixins","LoginPage","onSubmitTest","remember","loginUser","responseFacebook","picture","responseGoogle","profileObj","accessToken","imageUrl","googleId","givenName","familyName","FormControlLabel","control","isDisabled","appId","fields","textButton","returnScopes","icon","version","cssClass","callback","clientId","buttonText","onSuccess","onFailure","rel","decoded","jwt_decode","rest","render","User","leaderboardPage","generalLeaderBoard","topUser","fixed","AuthToken","currentTime","now","exp","App","HomePage","LeaderBoard","CreateMiniTask","hostname","process","Sentry","dsn","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f441504f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-button.8b3ac6fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport './hover.css';\r\nconst styles = {\r\n courseItem:{\r\n     borderRadius:'4px',\r\n     boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n     overflow:'hidden',\r\n     background: '#EEEEEE',\r\n     cursor:'pointer',\r\n     \r\n },\r\n};\r\nclass CourseItem extends Component {\r\n  render() {\r\n    const { classes,course } = this.props;\r\n    console.log(course)\r\n    return (\r\n      <Grid\r\n      container\r\n      direction=\"column\"\r\n      style={{height:\"100%\",display:'flex',justifyContent:'center',alignItems:'center'}}\r\n      className={`${classes.courseItem} hvr-bounce-in`}\r\n    >\r\n      <Grid\r\n        item\r\n        style={{  width: \"100%\", overflow: \"hidden\",display:'flex',justifyContent:'center',alignItems:'center' }}\r\n      >\r\n        <img\r\n          src={course.background_image}\r\n          style={{ width: \"50px\",objectFit:\"cover\", height:'50px',borderRadius:'50%',marginTop:\"10px\"}}\r\n          alt=\"\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justify=\"center\"\r\n        style={{ padding: \"10px 0\" }}\r\n      >\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              textTransform: \"uppercase\",\r\n              color: \"#595959\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            {course.course_name}\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              color: \"#909090\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            Task đã làm: {course.task_solved.tasks_complete}/{course.task_solved.task_count}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\"\r\nconst styles = {\r\n  CourseContainer: {\r\n    paddingTop: \"100px\",\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem:{\r\n    borderRadius:'4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow:'hidden',\r\n    background: '#EEEEEE',\r\n    cursor:'pointer',\r\n    \r\n},\r\n};\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n      const courses = res.data;\r\n      this.setState({ courses });\r\n    });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {courses} = this.state\r\n    return (\r\n      <Grid container className={classes.CourseContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={12} style={{ padding: \"0px 60px\" }}>\r\n          <div className = \"gallery\" >\r\n          {courses.map((course)=><Link className = \"item\"key={course.id} style={{textDecoration:'none'}}to={`/courses/${course.id}/tasks`}><CourseItem course={course}/></Link>)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseBody);\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    console.log(\"SET TOKEN\");\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] =`Bearer ${token}`;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  return axios\r\n    .post(\"http://localhost:8081/api/v1/login\", userData)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n\r\n      const decoded = jwt_decode(token);\r\n      console.log('Decode: ',decoded);\r\n      console.log('token: ',token);\r\n      console.log(userData);\r\n      if (userData.remember) {\r\n        localStorage.setItem(\"AuthToken\", token);\r\n\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"permissions\", decoded.data.role);\r\n        setAuthToken(token); // set token ở header\r\n\r\n        // get user\r\n      }\r\n      console.log(decoded);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"AuthToken\");\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"permissions\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_CODEPOINT = \"ADD_CODEPOINT\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\";\r\nexport const SET_UNDEFINED_NEXT_MINITASK = \"SET_UNDEFINED_NEXT_MINITASK\";\r\n\r\nexport const CHANGE_LOADING = \"CHANGE_LOADING\";\r\nexport const UPDATE_LOCATION = \"UPDATE_LOCATION\";\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const submitUpdateMinitask = (minitask_id, task_id, course_id, courseStatus) => dispatch => {\r\n  console.log({minitask_id: minitask_id,\r\n    task_id: task_id,\r\n    course_id: course_id,\r\n    course_status: courseStatus})\r\n  axios\r\n    .post(`http://localhost:8081/api/v1/auth/updateusercourse/${course_id}`, {\r\n      minitask_id: minitask_id,\r\n      task_id: task_id,\r\n      course_id: course_id\r\n    })\r\n    .then(res => {\r\n      console.log(res.data)\r\n      dispatch({\r\n        type: ADD_CODEPOINT,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const changeUserInfo = (newUser, userId) => dispatch => {\r\n  console.log(newUser);\r\n  dispatch({\r\n    type: CHANGE_LOADING,\r\n    payload: true\r\n  });\r\n  axios\r\n    .post(\"http://localhost:8081/auth/userinfoupdate\", {\r\n      id: userId,\r\n      avatar: newUser.avatar,\r\n      password: newUser.password,\r\n      firstname: newUser.firstName,\r\n      lastname: newUser.lastName,\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: CHANGE_USER_INFO,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUser = () => dispatch => {\r\n  axios\r\n    .get(\"http://localhost:8081/auth/userinfo\")\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setUndefinedNextMinitask = () => dispatch => {\r\n  dispatch({\r\n    type: SET_UNDEFINED_NEXT_MINITASK,\r\n    payload: undefined\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport \"./courseHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass CourseHeader extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.onLogout = this.onLogout.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className=\"course-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"/\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(CourseHeader) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport CourseBody from './body/CourseBody1';\r\nimport CourseHeader from './header/CourseHeader';\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CourseHeader history={this.props.history}/>\r\n                <CourseBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {  Link } from \"react-router-dom\";\r\nimport \"./taskItem.css\";\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    marginBottom:'50px'\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"5px\",\r\n    backgroundColor: \"white\",\r\n    padding: \"5px 10px\",\r\n    paddingTop:'10px',\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\nclass TaskItem extends Component {\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n   \r\n    if (minitask.status === \"hoanthanh\" ) {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/hoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/user.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </a>\r\n      );\r\n    }\r\n    else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===false) {\r\n      return (\r\n        <Link\r\n        to={`/tasks/${minitask.id}`}\r\n        style={{\r\n          display: \"flex\",\r\n          textDecoration: \"none\",\r\n          color: \"#595959\",\r\n          fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n        }}\r\n      >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%',backgroundColor:'#F5F5F5',borderRadius:'50%'}} src={require('../icons/chuahoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          </Link>\r\n      );\r\n    }\r\n    else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n         \r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display:'flex'}}>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/padlock-unlock.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          <div className=\"hidden\" style={{display:'none'}}>{minitask.point_unlock}</div> \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes,task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`,\r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width:'200px',\r\n                fontFamily:`'Yanone Kaffeesatz', sans-serif`,\r\n                boxShadow:\"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              {task.task_name}{/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          > {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{ height: \"100%\", width: \"100%\",borderRadius: \"4px 4px 0 0\" }}\r\n              alt=\"\"\r\n            />\r\n          </Grid> \r\n          <Grid item container direction=\"column\" style={{ padding: \"10px 0\",background:'#EEEEEE',   boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\" }}> {/* danh sách mini task */}\r\n          {task.minitasks.map((minitask)=><Grid item className={`${classes.MiniTaskItem}`} key={minitask.id} > {this.renderMiniItem(minitask)}</Grid>)}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport axios from \"axios\";\r\nconst styles = {\r\n  TasksContainer: {\r\n    paddingTop: 100,\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  }\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/courses/${this.props.courseId}/tasks`)\r\n      .then(res => {\r\n        const tasks = res.data;\r\n        this.setState({ tasks });\r\n      });\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks } = this.state;\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={6} style={{ padding: \"0px 10px\" }}>\r\n          {tasks.map(task => (\r\n            <TaskItem key={task.id} task={task} courseId={this.props.courseId}/>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskBody);\r\n","import React, { Component } from \"react\";\r\nimport \"./taskHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass TaskHeader extends Component {\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"task-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"giang\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(TaskHeader) ;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TaskBody from './body/TaskBody';\r\nimport TaskHeader from './header/TaskHeader';\r\nclass TaskPage extends Component {\r\n   \r\n    render() {\r\n        const { match: { params } } = this.props;\r\n        //console.log(params);\r\n        return (\r\n            <React.Fragment>\r\n                <TaskHeader history={this.props.history} />\r\n                <TaskBody courseId={params.courseId}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskPage;","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"./minitaskdesc.css\";\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  DescContainer: {\r\n    background: \"#ffffff\",\r\n    position: \"relative\",\r\n    //overflowY: \"scroll\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    //overflowX: \"hidden\",\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    padding: \"10px 10px\"\r\n  }\r\n};\r\nclass MiniTaskDesc extends Component {\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.DescContainer}>\r\n        <Slide in={true} direction=\"right\" {...(true ? { timeout: 800 } : {})}>\r\n          <Box my={1}>\r\n            <Typography variant=\"h6\">{this.props.minitaskName}</Typography>\r\n          </Box>\r\n        </Slide>\r\n        <div style={{ fontFamily: ` \"Share Tech Mono\", monospace `, display: 'flex', color: '#44BFA3' }}>\r\n          <div style={{ flexGrow: 1, marginRight: 10 }}>Độ khó: {this.props.level}</div>\r\n          <div style={{ marginRight: '10px' }}>{this.props.code_point}</div>\r\n        </div>\r\n        <div className=\"md_desc\" style={{ padding: \"16px\" }}> {/* minitask description */}\r\n          <ReactMarkdown\r\n            escapeHtml={false}\r\n            source={this.props.mini_task_desc}\r\n            renderers={{\r\n              linkReference: reference => {\r\n                if (!reference.href) {\r\n\r\n                  return `[${reference.children[0].props.children}]`;\r\n                }\r\n                return <a href={reference.$ref}>{reference.children}</a>;\r\n              },\r\n              heading: props => {\r\n                return <p className=\"md_heading\">{props.children}</p>;\r\n              },\r\n              inlineCode: props => {\r\n                return <code className=\"md_code\">{props.children}</code>;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MiniTaskDesc);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{paddingLeft:'5px',paddingRight:\"5px\"}}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight:\"unset\",\r\n    \"&:focus\": {\r\n     // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\n\r\n function CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{color:\"#282828\"}}\r\n      />\r\n\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n            <AccountBoxIcon style={{fontSize:16}}/> \r\n            <Link to=\"/profile/account\" style={{textDecoration: \"none\"}}>\r\n            <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n            <ExitToAppIcon style={{fontSize:16}}/> \r\n            <p style={{fontSize:12,marginLeft:\"3px\"}}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(CustomizedMenus) ;","import ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport \"./minitaskHeader.css\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Slide from '@material-ui/core/Slide';\r\n// import Slide from '@material-ui/core/Slide';\r\n\r\nclass MiniTaskHeader extends Component {\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  onBack = e => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.history);\r\n    this.props.getUser();\r\n    console.log(this.props.user);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"minitask-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n        <Typography className=\"minitaskName_mobi\">{this.props.minitaskName}</Typography>{\" \"}\r\n        {/*minitask name */}\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"desktop-hide1\">\r\n            <div className=\"logo1\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"40px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"left-menu\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div\r\n              onClick={this.onBack}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              <KeyboardBackspaceIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Back</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div\r\n              className=\"code-point\"\r\n              style={{ fontSize: 14, margin: \"0px 4px\", color: \"#4978cc\" }}\r\n            >\r\n              Số Đậu: {this.props.user.codepoint}\r\n            </div>\r\n            <div className=\"nav-name\" style={{ fontSize: 14 }}>\r\n              {this.props.user.firstname}\r\n            </div>\r\n\r\n            <div className=\"nav_usermenu \">\r\n              <UserMenu />\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <PersonIcon style={{ fontSize: 16 }} />\r\n                <Link to=\"/profile\" style={{ fontSize: 14, marginLeft: \"3px\", textDecoration: \"none\", fontFamily: ' Nunito Sans, sans-serif' }} >Trang cá nhân</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                onClick={this.onBack}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <ExitToAppIcon style={{ fontSize: 16 }} />\r\n                <p\r\n                  style={{ fontSize: 14, marginLeft: \"3px\" }}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  Đăng xuất\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, getUser })(\r\n  MiniTaskHeader\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n    \r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n      component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function ResultPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(1);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n  const result = props.result;\r\n  console.log(result)\r\n  function renderResultPanel(result) {\r\n    if (result.stdout !== undefined ) {\r\n      if (result.error !== \"\") {\r\n        console.info(\"error\");\r\n        console.info(result.error);\r\n        return (\r\n          <React.Fragment>\r\n            <div\r\n              style={{\r\n                color: \"#ff1a1a\",\r\n                fontFamily: ` 'Share Tech Mono', monospace`,\r\n                fontSize: 14\r\n              }}\r\n            >\r\n              <Typography varian=\"caption\">{result.error.substring(0, result.error.length/2)}</Typography>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        if (result.stdout.WASSUCCESSFUL === \"true\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#19b280\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div> Thời gian test: {result.stdout.COMPLETEDIN}</div>\r\n                <div>Kết quả: Passed</div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        } else if (result.stdout.WASSUCCESSFUL === \"false\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#ff1a1a\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div>\r\n                  Số lượng test đúng:{\" \"}\r\n                  {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                  {result.stdout.RUNCOUNT}\r\n                </div>\r\n                <div>Kết quả: Failed</div>\r\n                {result.stdout.GETALLFAILURE.map((testfail, index) => {\r\n                  return <div key={index}>{testfail.DETAIL}</div>;\r\n                })}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    else if (result.errorRuntime !== undefined) {\r\n      return (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              color: \"#ff1a1a\",\r\n              fontFamily: ` 'Share Tech Mono', monospace`,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n           Code chạy quá lâu, vui lòng thử lại. \r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n     else {\r\n      return <div>chưa thực thi</div>;\r\n    }\r\n  }\r\n  function renderTestsPanel(result) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  /*function renderTestsPanel1(result){ // cái này chưa sửa, tạm thời cứ render ra kết quả ở result panel, test panel cứ hiển thị danh sách test\r\n     if (result.stdout !== undefined) { // if result is not {},  in test panel show description of tests after run code\r\n      return (\r\n        <React.Fragment>\r\n          <div>1/2 sample tests passed.</div>\r\n          {unit_tests.map((unit_test, index) => {\r\n            // unit_tests\r\n            return (\r\n              <ExpansionPanel key={index}>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                    <div style={{ flexGrow: 1 }}>Test {index + 1}</div>\r\n                    <div style={{ width: \"1em\" }}>\r\n                      <img\r\n                        style={{ width: \"100%\" }}\r\n                        src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                        alt=\"Kiwi standing on oval\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                  <div>\r\n                    <Grid container>\r\n                      <Grid item>Input: </Grid>\r\n                      <Grid item style={{ marginLeft: 10 }}>\r\n                        {unit_test.inputs.map((input, index) => (\r\n                          <div key={index}>\r\n                            param{index + 1}: {input.value}\r\n                          </div>\r\n                        ))}{\" \"}\r\n                        {//dùng key ở đây nguy hiểm \r\n                        }\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>Output: </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>\r\n                        Output mong đợi: {unit_test.expected_output}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      );\r\n    } \r\n  } */\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <Tabs\r\n        style={{ minHeight: \"30px\" }}\r\n        // variant=\"fullWidth\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"nav tabs example\"\r\n      >\r\n        <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)}  />\r\n        <LinkTab label=\"Kết quả\" href=\"/trash\" {...a11yProps(1)} />\r\n      </Tabs>\r\n      <div\r\n        className=\"scroll_test\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          overflowY: \"auto\",\r\n          overflowX: \"hidden\",\r\n          background: \"#f5f5f5\"\r\n        }}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          {renderTestsPanel(result)}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          {renderResultPanel(result)}\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n    style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n    component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function TestsPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0); // if have result, direct to result panel tab\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n\r\n  function renderTestsPanel(unit_tests) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          > param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {props.isLoading === true ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <div>\r\n            <div className=\"sweet-loading\">\r\n              <HashLoader\r\n              \r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={props.isLoading}\r\n              />\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Tabs\r\n            style={{ minHeight: \"60px\" }}\r\n            variant=\"fullWidth\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"nav tabs example\"\r\n          >\r\n            <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)} />\r\n          </Tabs>\r\n          <div\r\n            className=\"scroll_test\"\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n              background: \"#f5f5f5\"\r\n            }}\r\n          >\r\n            <TabPanel value={value} index={0}>\r\n              {renderTestsPanel(unit_tests)}\r\n            </TabPanel>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    CardMedia, Box,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nclass Notfoundpage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Box my={5}>\r\n                    <Grid xs={12} sm={12} md={12} container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                        <Grid xs={12} sm={6} md={6} container justify=\"flex-end\" alignItems=\"center\">\r\n                            <Box p={2}>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Contemplative Reptile\"\r\n                                    // height=\"50\"\r\n                                    // width=\"50\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    src={\"https://assets.leetcode.com/static_assets/public/images/404_face.png\"}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6} md={6} container justify=\"flex-start\" alignItems=\"center\">\r\n                            <Box p={2}>\r\n                                <Typography style={{ fontSize: 30, fontWeight: 100 }}>Không thấy nội dung này</Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notfoundpage;","// api/index.js\r\nvar socket = new WebSocket(\"ws://localhost:8081/ws\");\r\n\r\nlet connectWebSocket = cb => {\r\n  console.log(\"connecting\");\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"Successfully Connected\");\r\n  };\r\n\r\n  socket.onmessage = msg => {\r\n    console.log(msg);\r\n    cb(msg);\r\n  };\r\n\r\n  socket.onclose = event => {\r\n    console.log(\"Socket Closed Connection: \", event);\r\n  };\r\n\r\n  socket.onerror = error => {\r\n    console.log(\"Socket Error: \", error);\r\n  };\r\n};\r\n\r\nlet sendMsg = msg => {\r\n  socket.send(msg);\r\n};\r\n\r\nexport { connectWebSocket, sendMsg };","import React, { Component } from \"react\";\r\nimport Split from \"react-split\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\n// import CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport \"./minitask.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport js_beautify from \"js-beautify\";\r\n\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n//Code editor\r\nimport AceEditor from \"react-ace\";\r\n// import brace from 'brace';\r\nimport 'brace/theme/github';\r\nimport 'brace/theme/twilight';\r\nimport 'brace/theme/monokai';\r\n\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/snippets/java\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notfoundpage from '../roomPractice/Notfoundpage';\r\n// import Fade from '@material-ui/core/Fade';\r\n// import { getUser } from \"../../js/actions/userAction\";\r\n\r\nimport { sendMsg } from \"../../websocket\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true,\r\n      open: false,\r\n      isUserStudy: false,\r\n      isUserFight: false,\r\n      // variable for numbers of doing with get code point.\r\n      numbers_doing: 0,\r\n      completedMinitask: [],\r\n      theme: \"textmate\",\r\n      isAutocomplete: false,\r\n      user_minitask_practice: {},\r\n      isLoadingCode: true,\r\n      // stopwatch\r\n      days: 0,\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      //\r\n      minitaskListId: [],\r\n      minitaskUser: {},\r\n      userFight: {},\r\n      fightminitaskdone: [],\r\n      startTime: \" \",\r\n      //\r\n      contestStatus: '',\r\n      isUserJoinFight: '',\r\n      //\r\n      isUserCompleteFight: '',\r\n      // time complete\r\n      dayComplete: 0,\r\n      hourComplete: 0,\r\n      minuteComplete: 0,\r\n      secondComplete: 0,\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.submitCodePractice = this.submitCodePractice.bind(this);\r\n    this.submitCodeFight = this.submitCodeFight.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setUndefinedNextMinitask();\r\n\r\n    var { history } = this.props;\r\n    console.log(this.state.minitask);\r\n    var pathname = history.location.pathname;\r\n    console.log(pathname);\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    if (pathname.startsWith(\"/tasks/\")) {\r\n      this.setState({ isUserStudy: true });\r\n    }\r\n\r\n    if (pathname.startsWith(\"/fight/\")) {\r\n      this.setState({ isUserFight: true });\r\n      axios.get(`http://localhost:8081/api/v1/curd/is-user-done-fight/${params.fightId}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ isUserCompleteFight: res.data }, () => {\r\n          axios\r\n            .get(`http://localhost:8081/api/v1/curd/getone-userfight/${params.fightId}`)\r\n            .then(res => {\r\n              const { isUserCompleteFight } = this.state;\r\n              console.log(isUserCompleteFight);\r\n              console.log(res.data);\r\n              if (isUserCompleteFight) {\r\n                var miliSecComplete = new Date(res.data.end_time) - new Date(res.data.start_time);\r\n\r\n                var secondComplete = Math.floor((miliSecComplete / 1000) % 60),\r\n                  minuteComplete = Math.floor((miliSecComplete / (1000 * 60)) % 60),\r\n                  hourComplete = Math.floor((miliSecComplete / (1000 * 60 * 60)) % 24);\r\n\r\n                var dayComplete = Math.floor(miliSecComplete / (24 * 60 * 60 * 1000));\r\n\r\n                this.setState({\r\n                  dayComplete,\r\n                  secondComplete,\r\n                  minuteComplete,\r\n                  hourComplete,\r\n                });\r\n              } else {\r\n                var miliSec = new Date() - new Date(res.data.start_time);\r\n\r\n                var seconds = Math.floor((miliSec / 1000) % 60),\r\n                  minutes = Math.floor((miliSec / (1000 * 60)) % 60),\r\n                  hours = Math.floor((miliSec / (1000 * 60 * 60)) % 24);\r\n\r\n                var days = Math.floor(miliSec / (24 * 60 * 60 * 1000));\r\n\r\n                const date = new Date(res.data.start_time).getTime();\r\n                console.log(date);\r\n                this.setState({\r\n                  userFight: res.data,\r\n                  startTime: res.data.start_time,\r\n                  days: days,\r\n                  hour: hours,\r\n                  minute: minutes,\r\n                  second: seconds\r\n                })\r\n              }\r\n            });\r\n        });\r\n      });\r\n      axios\r\n        .get(`http://localhost:8081/api/v1/curd/listminitaskfight/${params.fightId}`)\r\n        .then(res => {\r\n          const dt = res.data;\r\n          const IdMinitask = [];\r\n\r\n          for (var i = 0; i < dt.length; i++) {\r\n\r\n            IdMinitask.push(dt[i])\r\n\r\n          }\r\n          this.setState({ minitaskListId: IdMinitask })\r\n          // console.log(this.state.minitaskListId);\r\n        });\r\n\r\n      axios.get(`http://localhost:8081/api/v1/curd/isUserJoinFight/${params.fightId}/`).then(isUserJoin => {\r\n        // console.log(isUserJoin);\r\n        this.setState({\r\n          isUserJoinFight: isUserJoin.data,\r\n        });\r\n      });\r\n\r\n      axios.get(`http://localhost:8081/api/v1/curd/fights/${params.fightId}`).then(res => {\r\n        var code;\r\n        const fight = res.data;\r\n        if ((new Date() < new Date(fight.time_start))) {\r\n          code = -1;\r\n        }\r\n        if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n          // Đang diển ra\r\n          code = 0;\r\n        }\r\n        if ((new Date() > new Date(fight.time_end))) {\r\n          code = 1;\r\n        }\r\n        this.setState({ contestStatus: code }, () => {\r\n          axios.get(`http://localhost:8081/api/v1/curd/isUserJoinFight/${params.fightId}/`).then(isUserJoin => {\r\n            // console.log(isUserJoin);\r\n            this.setState({\r\n              isUserJoinFight: isUserJoin.data,\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n      axios\r\n        .get(`http://localhost:8081/api/v1/curd/getall-minitask/${params.fightId}`)\r\n        .then(res => {\r\n          const dt = res.data;\r\n          const IdMinitaskDone = [];\r\n\r\n          for (var i = 0; i < dt.length; i++) {\r\n            IdMinitaskDone.push(dt[i].minitask_id)\r\n          }\r\n          this.setState({ fightminitaskdone: IdMinitaskDone })\r\n          // console.log(this.state.fightminitaskdone);\r\n        });\r\n\r\n\r\n      //set start time for user\r\n      // var today = new Date();\r\n      // var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n      // var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n      // var dateStart = date + ' ' + time;\r\n      // this.setState({ startTime: this.state.userFight.start_time });\r\n\r\n\r\n      // axios\r\n      // .get(`http://localhost:8081/api/v1/curd/getone-minitask/${params.fightId}/${params.minitaskId}/`)\r\n      // .then(res=>{\r\n      //   console.log(res.data);\r\n      //   this.setState({minitaskUser: res.data})\r\n      //   console.log(this.state.minitaskUser);\r\n      // })\r\n\r\n\r\n    }\r\n    // console.log(params);\r\n    // console.log(this.state.isUserFight);\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n        document.title = minitask.mini_task_name;\r\n        const numbers = minitask.numbers_doing\r\n        // console.log(numbers);\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        this.setState((state, props) => ({\r\n          minitask: minitask\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        // console.log(this.state.user_minitask_practice);\r\n        this.setState((state, props) => ({\r\n          userCode: (this.state.isUserStudy && this.state.user_minitask_practice.status === \"done\") ?\r\n            this.state.user_minitask_practice.user_code : minitask.template_code\r\n        }));\r\n        // console.log(this.state.userCode);\r\n\r\n        this.setState({ numbers_doing: numbers });\r\n        // console.log(this.state.numbers_doing);\r\n      });\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/auth/completeminitask`)\r\n      .then(res => {\r\n        const completed = res.data;\r\n        this.setState({ completedMinitask: completed })\r\n        // console.log(this.state.completedMinitask);\r\n      });\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n\r\n    //set up stopwatch clock\r\n    setInterval(() => {\r\n      this.setState((state, props) => {\r\n        return {\r\n          hour: state.hour === 59 ? state.hour + 1 : state.hour,\r\n          minute: state.second === 59 ? state.minute + 1 : state.minute,\r\n          second: state.second === 59 ? 0 : state.second + 1\r\n        };\r\n      });\r\n    }, 1000);\r\n    // console.log(\"MODE\");\r\n    // console.log(this.state.isUserFight);\r\n    // console.log(this.state.isUserStudy);\r\n  }\r\n\r\n  send = (id) => {\r\n    console.log(\"send\");\r\n    sendMsg(JSON.stringify({\r\n      fight_id: id,\r\n      user_id: \"\",\r\n      minitask_id: \"\",\r\n      point: 0,\r\n      request: \"get-leader-board\",\r\n    }))\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `http://localhost:8081/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n          const numbers = minitask.numbers_doing\r\n          this.setState((state, props) => ({\r\n            minitask: minitask,\r\n            isLoadingComponent: false\r\n          }));\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: (this.state.isUserStudy && this.state.user_minitask_practice.status === \"done\") ?\r\n              this.state.user_minitask_practice.user_code : minitask.template_code\r\n          }));\r\n          // console.log(this.state.userCode);\r\n          this.setState({ numbers_doing: numbers });\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    console.log(value);\r\n    this.setState({ userCode: value });\r\n  }\r\n\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChangeTheme = (event) => {\r\n    this.setState({ theme: event.target.value })\r\n  }\r\n\r\n  handleChangeAutoComplete = () => {\r\n    this.setState({ isAutocomplete: !this.state.isAutocomplete });\r\n  }\r\n\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n              }, s.${minitask.name_func}(${inputsFormat}),0);\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n              }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}),0);\\n  }\\n`;\r\n          } else if (minitask.output_type_func === \"String\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}));\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  submitCodePractice() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          console.log(error);\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            axios.post(\"http://localhost:8081/api/v1/curd/runPracticeCode\", {\r\n              id: \"\",\r\n              user_id: \"\",\r\n              minitask_id: this.state.minitask.id,\r\n              status: \"done\",\r\n              user_code: code,\r\n            }).then(res => {\r\n              console.log(res.data);\r\n            });\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          } else {\r\n            axios.post(\"http://localhost:8081/api/v1/curd/runPracticeCode\", {\r\n              id: \"\",\r\n              user_id: \"\",\r\n              minitask_id: this.state.minitask.id,\r\n              status: \"tried\",\r\n              user_code: \"\",\r\n            }).then(res => {\r\n              console.log(res.data);\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    // axios({\r\n    //   method: 'post',\r\n    //   headers: { \r\n    //     'Content-Type': 'application/x-www-form-urlencoded',\r\n    //   },\r\n    //   url: 'http://localhost:8080/',\r\n    //   data: { \r\n    //     code: code,\r\n    //     test: junit4,\r\n    //   }\r\n    // }).then((res)=>{\r\n    //   console.log(res);\r\n    // })\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            var completed = this.state.completedMinitask\r\n            var listID = [];\r\n            for (var i in completed) {\r\n              listID.push(completed[i].id)\r\n            }\r\n            console.log(listID);\r\n            if (completed !== null && listID.indexOf(this.state.minitask.id) === -1) {\r\n              var newNumbers = this.state.minitask;\r\n              newNumbers.numbers_doing = this.state.numbers_doing - 1\r\n              this.setState({ minitask: newNumbers });\r\n              axios\r\n                .put(\r\n                  `http://localhost:8081/api/v1/curd/minitasks/${this.state.minitask.id}`,\r\n                  newNumbers\r\n                )\r\n                .then(res => {\r\n                  // const course = res.data;\r\n                  // this.setState({ course: course });\r\n                });\r\n\r\n              console.log(this.state.numbers_doing);\r\n            }\r\n\r\n            if (this.state.numbers_doing > 0) {\r\n              this.props.submitUpdateMinitask(\r\n                this.state.minitask.id,\r\n                this.state.minitask.task_id,\r\n                params.courseId\r\n              );\r\n              Swal.fire({\r\n                type: \"success\",\r\n                title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n                width: 600,\r\n                padding: \"3em\",\r\n                customClass: \"hidden_alert\",\r\n                backdrop: `\r\n                  rgba(0,0,123,0.4)\r\n                  url(\"${require(\"./giphy.gif\")}\") \r\n                  center center\r\n                  no-repeat\r\n                `\r\n              });\r\n              toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n                containerId: \"B\"\r\n              });\r\n            } else {\r\n              toast(\"Bạn làm đúng nhưng hết lượt cộng điểm cho bài thực hành này\", {\r\n                containerId: \"B\"\r\n              });\r\n            }\r\n          } else {\r\n            // Run code failed\r\n            axios.post(`http://localhost:8081/api/v1/auth/update-user-course-w-run-failed/${params.courseId}`).then(res=>{\r\n              console.log(res.data);\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  // code fight submit handle\r\n  submitCodeFight() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/curd/getone-minitask/${params.fightId}/${this.state.minitask.id}/`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskUser: res.data })\r\n        console.log(this.state.minitaskUser);\r\n      })\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          console.log(error);\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          console.log(this.state.minitaskUser.status);\r\n          var today = new Date();\r\n          var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n          var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n          var dateTime = date + ' ' + time;\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            if (this.props.user.id !== this.state.minitaskUser.user_id &&\r\n              params.fightId !== this.state.minitaskUser.fight_id &&\r\n              this.state.minitaskUser.minitask_id !== this.state.minitask.id) {\r\n              axios.get(`http://localhost:8081/api/v1/curd/handle-user-done-fight/${params.fightId}`).then(res => {\r\n                console.log(res.data);\r\n              });\r\n              axios.post(\"http://localhost:8081/api/v1/curd/runfightminitask\", {\r\n                id: \"\",\r\n                fight_id: params.fightId,\r\n                user_id: this.props.user.id,\r\n                minitask_id: this.state.minitask.id,\r\n                status: \"done\",\r\n                tried: 1,\r\n                start_time: this.state.startTime,\r\n                end_time: dateTime\r\n              }).then(res => {\r\n                console.log(res.data);\r\n                //add code point for users\r\n                var newFightUser = this.state.userFight;\r\n                newFightUser.point = this.state.minitask.code_point + newFightUser.point\r\n                axios.put(`http://localhost:8081/api/v1/curd/add-point/${this.state.userFight.id}`, newFightUser)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                    this.send(params.fightId)\r\n                  });\r\n              });\r\n            } else {\r\n              console.log(\"Đã tồn tại minitask user fight\");\r\n              var newStatus = this.state.minitaskUser\r\n              if (newStatus.status !== \"done\") {\r\n                newStatus.status = \"done\"\r\n                newStatus.tried += 1\r\n                // axios.get(`http://localhost:8081/api/v1/curd/handle-user-done-fight/${params.fightId}`).then(res => {\r\n                //   console.log(res.data);\r\n                // });\r\n\r\n                // Fix here\r\n\r\n                newStatus.end_time = dateTime\r\n                this.setState({ minitaskUser: newStatus })\r\n                axios.put(`http://localhost:8081/api/v1/curd/updatestatus/${this.state.minitaskUser.id}`, newStatus)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                    //add code point for users\r\n                    var newFightUser = this.state.userFight;\r\n                    newFightUser.point = this.state.minitask.code_point + newFightUser.point\r\n                    axios.put(`http://localhost:8081/api/v1/curd/add-point/${this.state.userFight.id}`, newFightUser)\r\n                      .then(res => {\r\n                        console.log(res.data);\r\n                        this.send(params.fightId);\r\n                      });\r\n                  });\r\n              }\r\n            }\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                  rgba(0,0,123,0.4)\r\n                  url(\"${require(\"./giphy.gif\")}\") \r\n                  center center\r\n                  no-repeat\r\n                `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          } else {\r\n            if (this.props.user.id !== this.state.minitaskUser.user_id &&\r\n              params.fightId !== this.state.minitaskUser.fight_id &&\r\n              this.state.minitaskUser.minitask_id !== this.state.minitask.id) {\r\n              axios.post(\"http://localhost:8081/api/v1/curd/runfightminitask\", {\r\n                id: \"\",\r\n                fight_id: params.fightId,\r\n                user_id: this.props.user.id,\r\n                minitask_id: this.state.minitask.id,\r\n                status: \"tried\",\r\n                tried: this.state.minitaskUser.tried + 1,\r\n                start_time: dateTime\r\n              }).then(res => {\r\n                console.log(res.data);\r\n                this.send(params.fightId);\r\n              });\r\n            } else {\r\n              newStatus = this.state.minitaskUser;\r\n              newStatus.tried += 1\r\n              this.setState({ minitaskUser: newStatus })\r\n              axios.put(`http://localhost:8081/api/v1/curd/updatestatus/${this.state.minitaskUser.id}`, newStatus)\r\n                .then(res => {\r\n                  this.send(params.fightId);\r\n                });\r\n            }\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          this.send(params.fightId);\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  renderCodingTime = (isUserCompleteFight) => {\r\n    if (!isUserCompleteFight) {\r\n      return <Typography style={{ fontSize: 16, fontWeight: 600 }}>\r\n        Thời gian: {this.state.days < 10 ? \"0\" + this.state.days : this.state.days} ngày &nbsp;\r\n               {this.state.hour < 10 ? \"0\" + this.state.hour : this.state.hour} giờ &nbsp;\r\n               {this.state.minute < 10 ? \"0\" + this.state.minute : this.state.minute} phút &nbsp;\r\n               {this.state.second < 10 ? \"0\" + this.state.second : this.state.second} giây\r\n      </Typography>\r\n    } else {\r\n      return <Typography style={{ fontSize: 16, fontWeight: 600 }}>\r\n        Thời gian: {this.state.dayComplete < 10 ? \"0\" + this.state.dayComplete : this.state.dayComplete} ngày &nbsp;\r\n              {this.state.hourComplete < 10 ? \"0\" + this.state.hourComplete : this.state.hourComplete} giờ &nbsp;\r\n              :{this.state.minuteComplete < 10 ? \"0\" + this.state.minuteComplete : this.state.minuteComplete} phút &nbsp;\r\n              {this.state.secondComplete < 10 ? \"0\" + this.state.secondComplete : this.state.secondComplete} giây\r\n      </Typography>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { minitask, result, theme, isLoadingCode, contestStatus, isUserJoinFight, isUserFight, isUserCompleteFight, isUserStudy } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let btnSubmit;\r\n    if (isUserStudy) {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"red\" }} onClick={this.submitCode} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    }\r\n    else if (isUserFight) {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"#7BC043\" }} onClick={this.submitCodeFight} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    } else {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"#7BC043\" }} onClick={this.submitCodePractice} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    }\r\n\r\n    if (isUserFight && !isLoadingComponent) {\r\n      console.log(\"Check: \" + isUserFight + \" - \" + isLoadingComponent);\r\n      if (contestStatus === 1 || !isUserJoinFight) {\r\n        console.log(\"Check 2: \" + contestStatus + \" - \" + isUserJoinFight);\r\n        return <Notfoundpage />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"fit layout-code\">\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          <Divider />\r\n          {this.state.isUserFight && !isLoadingComponent ? (\r\n            <div className=\"container\">\r\n              <div className=\"btn-minitask\" style={{ margin: \"0 auto\", display: \"inline-block\", marginLeft: 10, position: \"relative\" }}>\r\n                <Slide in={true} direction=\"right\" {...(true ? { timeout: 1400 } : {})}>\r\n                  <ButtonGroup variant=\"contained\" size=\"large\" aria-label=\" contained primary button group\">\r\n                    {this.state.minitaskListId.map((object, i) => {\r\n                      if (this.state.fightminitaskdone.includes(object.id) === true) {\r\n                        return (\r\n                          <Button obj={object} key={i}\r\n                            component={Link} to={`/fight/${params.fightId}/minitask/${object.id}`} className=\"btn-minitask-item\"\r\n                            style={{ marginRight: 6, borderRadius: 3, backgroundColor: \"#3f51b5 \", border: \"1px solid #3f51b5 \", fontSize: 13 }}>\r\n                            <DoneIcon style={{ color: \"#fff\" }} fontSize=\"medium\"></DoneIcon>\r\n                          </Button>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <Button obj={object} key={i}\r\n                            component={Link} to={`/fight/${params.fightId}/minitask/${object.id}`} className=\"btn-minitask-item\"\r\n                            style={{\r\n                              marginRight: 6, borderRadius: 3, border: \"1px solid #65656d\", fontSize: 13,\r\n                              backgroundColor: object.id === params.minitaskId ? \"#7278D6\" : \"\"\r\n                            }}>{i + 1}</Button>\r\n                        )\r\n                      }\r\n                    })}\r\n                  </ButtonGroup>\r\n                </Slide>\r\n              </div>\r\n              <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                <div style={{ float: \"right\", marginRight: 10 }}>\r\n                  <div className=\"stopwatch\" style={{ color: \"#D94A38\", fontSize: 16, fontWeight: 600 }}>\r\n                    {this.renderCodingTime(isUserCompleteFight)}\r\n                  </div>\r\n                </div>\r\n              </Slide>\r\n            </div>\r\n          ) : null}\r\n\r\n          {isLoadingComponent && isLoadingCode ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height: \"100vh\"\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n              <div className=\"layout-code-body\">\r\n                {/* layout-code-body->   position: relative;flex-grow: 1;*/}\r\n                <div className=\"split-panel fit\">\r\n                  <div className=\"stretch fit\">\r\n                    {/*  <MediaQuery minDeviceWidth={701}>*/}\r\n                    <Split\r\n                      className=\"splitHorizontal\"\r\n                      sizes={[25, 75]}\r\n                      minSize={0}\r\n                      expandToMin={false}\r\n                      gutterSize={4}\r\n                      gutterAlign=\"center\"\r\n                      snapOffset={30}\r\n                      dragInterval={1}\r\n                      direction=\"horizontal\"\r\n                      cursor=\"col-resize\"\r\n                    >\r\n                      <div className=\"split-panel-first \">\r\n                        <MiniTaskDesc\r\n                          mini_task_desc={minitask.mini_task_desc}\r\n                          code_point={minitask.code_point}\r\n                          level={minitask.level}\r\n                          minitaskName={minitask.mini_task_name}\r\n                        />\r\n                      </div>\r\n                      <div className=\"split-panel-second \">\r\n                        <div className=\"coding-area\">\r\n                          <Split\r\n                            className=\"splitVertical\"\r\n                            sizes={[50, 50]}\r\n                            minSize={100}\r\n                            expandToMin={false}\r\n                            gutterSize={4}\r\n                            gutterAlign=\"center\"\r\n                            snapOffset={30}\r\n                            dragInterval={1}\r\n                            direction=\"vertical\"\r\n                            cursor=\"row-resize\"\r\n                          >\r\n                            <div>\r\n                              <div className=\"codeEditor\">\r\n                                {/* <CodeEditor\r\n                                  userCode={this.state.userCode}\r\n                                  updateUserCode={this.updateUserCode}\r\n                                /> */}\r\n                                <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\r\n                                  <Slide in={true} {...(true ? { timeout: 700 } : {})}>\r\n                                    <Box ml={1}>\r\n                                      <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\r\n                                      <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={theme}\r\n                                        onChange={this.handleChangeTheme}\r\n                                        style={{ width: 100 }}\r\n                                      >\r\n                                        <MenuItem value={\"textmate\"}>Textmate</MenuItem>\r\n                                        <MenuItem value={\"github\"}>Github</MenuItem>\r\n                                        <MenuItem value={\"monokai\"}>Monokai</MenuItem>\r\n                                      </Select>\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  <Slide in={true} {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box ml={3} width=\"100%\">\r\n                                      <InputLabel id=\"demo-simple-select-label\">Autocomplete</InputLabel>\r\n                                      <Checkbox\r\n                                        checked={this.state.isAutocomplete}\r\n                                        color=\"primary\"\r\n                                        onChange={this.handleChangeAutoComplete}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box p={1} flexShrink={0}>\r\n                                      <Button variant=\"contained\" onClick={this.resetCode} startIcon={<RotateLeftIcon />} disabled={this.state.isLoading} color=\"primary\">\r\n                                        Reset code\r\n                                    </Button>\r\n                                    </Box>\r\n                                  </Slide>\r\n                                </Box>\r\n                                <Box mt={1} style={{ height: '500pz' }}>\r\n                                  <AceEditor\r\n                                    mode=\"java\"\r\n                                    theme={theme}\r\n                                    onChange={this.updateUserCode}\r\n                                    // name=\"blah2\"\r\n                                    fontSize={14}\r\n                                    showPrintMargin={true}\r\n                                    // editorProps={{ $blockScrolling: true }}\r\n                                    enableBasicAutocompletion={this.state.isAutocomplete}\r\n                                    enableLiveAutocompletion={this.state.isAutocomplete}\r\n                                    enableSnippets={true}\r\n                                    value={this.state.userCode}\r\n                                    showLineNumbers={true}\r\n                                    width=\"100%\"\r\n                                    // height=\"50%\"\r\n                                    tabSize={0}\r\n                                  />\r\n                                </Box>\r\n                                {/* <div\r\n                                  className=\"reset_code\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    right: 20,\r\n                                    zIndex: 9\r\n                                  }}\r\n                                >\r\n                                  <button\r\n                                    onClick={this.resetCode}\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      padding: \"6px 8px\",\r\n                                      cursor: \"pointer\",\r\n                                      background: \"#ef5350\",\r\n                                      fontWeight: \"bold\"\r\n                                    }}\r\n                                  >\r\n                                    Reset code\r\n                                </button>\r\n                                </div> */}\r\n                                {/* <div\r\n                                  className=\"reset_code\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    right: 110,\r\n                                    zIndex: 9\r\n                                  }}\r\n                                >\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      this.beautifyCode(this.state.userCode)\r\n                                    }\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      padding: \"6px 8px\",\r\n                                      cursor: \"pointer\",\r\n                                      background: \"#3d5afe\",\r\n                                      fontWeight: \"bold\"\r\n                                    }}\r\n                                  >\r\n                                    Beautifier code\r\n                                </button>\r\n                                </div> */}\r\n                              </div>\r\n                            </div>\r\n                            <Grid container xs={12} md={12} sm={12}>\r\n                              <Grid item xs={10} md={10} sm={10}>\r\n                                <div className=\"resultPanel\">\r\n                                  {this.state.result.stdout !== undefined ||\r\n                                    this.state.result.errorRuntime !== undefined ? (\r\n                                      <ResultPanel\r\n                                        unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                                        result={this.state.result}\r\n                                      />\r\n                                    ) : (\r\n                                      <TestsPanel\r\n                                        isLoading={this.state.isLoading}\r\n                                        unit_tests={minitask.unit_tests}\r\n                                      />\r\n                                    )}\r\n                                </div>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container style={{ backgroundColor: \"white\" }} justify=\"center\" alignContent=\"flex-start\" item xs={2} md={2} sm={2}>\r\n                                <div\r\n                                  className=\"runtest-area\"\r\n                                  style={{\r\n                                    // minHeight: \"40px\",\r\n                                    // padding: \"10px 20px\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"flex-end\"\r\n                                  }}\r\n                                >\r\n                                  <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                                    {renderPassedTestCount()}\r\n                                  </div>\r\n                                  <div style={{ marginLeft: 30 }}>\r\n                                    {/* <button\r\n                            className={`execute_btn ${this.state.isLoading &&\r\n                              \"disable_btn\"}`}\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                            onClick={this.executeCode}\r\n                            disabled={this.state.isLoading}\r\n                          >\r\n                            {this.state.isLoading\r\n                              ? \"Đang thực thi\"\r\n                              : \"Thực thi\"}\r\n                            <img\r\n                              src={require(\"./play-button.svg\")}\r\n                              alt=\"\"\r\n                              style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                            ></img>\r\n                          </button> */}\r\n                                  </div>\r\n                                  <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box>\r\n                                      {btnSubmit}\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  {this.props.user.next_minitask !== undefined ? (\r\n                                    <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                                      {this.props.user.next_minitask.id === \"\" ? (\r\n                                        <Link\r\n                                          to={`/profile/courses/${params.courseId}/tasks`}\r\n                                          style={{\r\n                                            textDecoration: \"none\",\r\n                                            color: \"#595959\"\r\n                                          }}\r\n                                        >\r\n                                          Qua bài mới\r\n                                        </Link>\r\n                                      ) : (\r\n                                          <Link\r\n                                            to={`/tasks/${this.props.user.next_minitask.id}/${params.courseId}/${params.taskId}`}\r\n                                            style={{\r\n                                              textDecoration: \"none\",\r\n                                              color: \"#595959\"\r\n                                            }}\r\n                                          >\r\n                                            Qua bài mới\r\n                                          </Link>\r\n                                        )}\r\n                                    </div>\r\n                                  ) : (\r\n                                      <div></div>\r\n                                    )}\r\n                                </div>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Split>\r\n                        </div>\r\n                      </div>\r\n                    </Split>{\" \"}\r\n                    {/* </MediaQuery>*/}\r\n                    {/* <MediaQuery maxDeviceWidth={700}>\r\n                  {\" \"}\r\n                  <div\r\n                    style={{\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      position: \"fixed\",\r\n                      transform: `translate(-50%,-50%)`,\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    Không hỗ trợ code bằng điện thoại\r\n                  </div>\r\n                </MediaQuery> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"./codeeditor.css\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/darcula.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\nimport \"codemirror/mode/clike/clike.js\";\r\n//import \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/closetag.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\n//import \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\n\r\nclass CodeEditor extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <CodeMirror\r\n      className=\"CodeMirrorCustom\"\r\n        value={this.props.userCode}\r\n        options={{\r\n          mode: \"text/x-java\", \r\n          theme: \"darcula\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck: true,\r\n          autocorrect: true,\r\n          extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n        }}\r\n        \r\n        MarkText={{\r\n          from: { line: 0, ch: 1 },\r\n          to: { line: 3, ch: 1 },\r\n          css: \"font-size:5px\"\r\n        }}\r\n        \r\n        onBeforeChange={(editor, data, value) => {\r\n          this.props.updateUserCode(value); // update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\nimport CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport \"./minitasknosplit.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport js_beautify from \"js-beautify\";\r\nimport { connect } from \"react-redux\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true\r\n      ,open: false\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      });\r\n\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `http://localhost:8081/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    this.setState({ userCode: value });\r\n  }\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n\r\n          \r\n        \r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n           else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\" || response.data.stdout.includes(\"SUCCESSFUL\")) {\r\n            // process alert success and add code point\r\n            this.props.submitUpdateMinitask(\r\n              this.state.minitask.id,\r\n              this.state.minitask.task_id\r\n            );\r\n\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  render() {\r\n    const { minitask, result } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className=\"fit layout-code\">\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          {isLoadingComponent ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height:'100vh'\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={4} md={4}>\r\n                <MiniTaskDesc\r\n                  mini_task_desc={minitask.mini_task_desc}\r\n                  code_point={minitask.code_point}\r\n                  level={minitask.level}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                style={{ flexDirection: \"column\" }}\r\n                xs={12}\r\n                sm={8}\r\n                md={8}\r\n              >\r\n                <Grid item style={{ flexGrow: 1 }}>\r\n                  <div className=\"coding-area\">\r\n                    <div className=\"codeEditor\">\r\n                      <CodeEditor\r\n                        userCode={this.state.userCode}\r\n                        updateUserCode={this.updateUserCode}\r\n                      />\r\n                      <div\r\n                        className=\"reset_code\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 10,\r\n                          right: 20,\r\n                          zIndex: 9\r\n                        }}\r\n                      >\r\n                        <button\r\n                          onClick={this.resetCode}\r\n                          style={{\r\n                            fontSize: 12,\r\n                            padding: \"6px 8px\",\r\n                            cursor: \"pointer\",\r\n                            background: \"#ef5350\",\r\n                            fontWeight: \"bold\"\r\n                          }}\r\n                        >\r\n                          Reset code\r\n                        </button>\r\n                      </div>\r\n                      <div\r\n                                className=\"reset_code\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  bottom: 10,\r\n                                  right: 110,\r\n                                  zIndex: 9\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={() =>\r\n                                    this.beautifyCode(this.state.userCode)\r\n                                  }\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    padding: \"6px 8px\",\r\n                                    cursor: \"pointer\",\r\n                                    background: \"#3d5afe\",\r\n                                    fontWeight: \"bold\"\r\n                                  }}\r\n                                >\r\n                                  Beautifier code\r\n                                </button>\r\n                              </div>\r\n                    </div>\r\n\r\n                    <div className=\"resultPanel\">\r\n                      {this.state.result.stdout !== undefined ||\r\n                      this.state.result.errorRuntime !== undefined ? (\r\n                        <ResultPanel\r\n                          unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                          result={this.state.result}\r\n                        />\r\n                      ) : (\r\n                        <TestsPanel\r\n                          isLoading={this.state.isLoading}\r\n                          unit_tests={minitask.unit_tests}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div\r\n                    className=\"runtest-area\"\r\n                    style={{\r\n                      minHeight: \"40px\",\r\n                      padding: \"10px 20px\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"flex-end\"\r\n                    }}\r\n                  >\r\n                    <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                      {renderPassedTestCount()}\r\n                    </div>\r\n                    <div style={{ marginLeft: 30 }}>\r\n                      <button\r\n                        className={`execute_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        style={{ display: \"flex\", alignItems: \"center\" }}\r\n                        onClick={this.executeCode}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        {this.state.isLoading ? \"Đang thực thi\" : \"Thực thi\"}\r\n                        <img\r\n                          src={require(\"./play-button.svg\")}\r\n                          alt=\"\"\r\n                          style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                        ></img>\r\n                      </button>\r\n                    </div>\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <button\r\n                        onClick={this.submitCode}\r\n                        className={`submitCode_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        Nộp bài\r\n                      </button>\r\n                    </div>\r\n\r\n                    {this.props.user.next_minitask !== undefined ? (\r\n                      <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                        <Link\r\n                          to={`/tasks/${this.props.user.next_minitask.id}`}\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"#595959\"\r\n                          }}\r\n                        >\r\n                          Qua bài mới\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport MiniTaskPage from \"./MiniTaskPage\";\r\nimport MiniTaskPageNoSplit from \"./MiniTaskPageNoSplit\";\r\n\r\nclass MinitaskPageResponsive extends Component {\r\n  render() {\r\n    const {\r\n        match\r\n      } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <MediaQuery minDeviceWidth={701}>\r\n          <MiniTaskPage match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={700}>\r\n          <MiniTaskPageNoSplit match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MinitaskPageResponsive;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./homePage.css\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nconst styles = {\r\n  cardGrid: {\r\n    paddingTop: 32,\r\n    paddingBottom: 32\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n};\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to={\"/\"}>\r\n        Hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// const cards = [1, 2, 3];\r\n\r\nclass CourseBody extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  render() {\r\n    // const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid\r\n        className=\"containerMain\"\r\n        style={{\r\n          height: \"inherit\",\r\n          width: \"100%\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <Grid\r\n\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            padding: 40,\r\n            paddingTop: 0,\r\n            height: \"inherit\"\r\n          }}\r\n        >\r\n          <Grid container className=\"header-homepage\">\r\n            <Grid\r\n              className=\"HeaderLeftHome\"\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sm={4}\r\n              style={{ marginBottom: 0 }}\r\n            >\r\n              <div className=\"logo logo-homepage\">\r\n                <Link to=\"/profile\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                    alt=\"\"\r\n                    style={{ height: \"80px\", paddingTop: 35 }}\r\n                  ></img>\r\n                </Link>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"HeaderRightHome\"\r\n              item\r\n              xs={12}\r\n              md={8}\r\n              sm={8}\r\n              container\r\n            >\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/searchcert\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2b2b2b\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      paddingLeft: \"20px\",\r\n                      paddingRight: \"20px\",\r\n                  \r\n                      // width: \"155px\",\r\n                    }}\r\n                    startIcon={<SearchIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Tra Chứng Chỉ\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/leaderboard\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#6589F9\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      paddingLeft: \"20px\",\r\n                      paddingRight: \"20px\",\r\n                  \r\n                      // width: \"155px\",\r\n                    }}\r\n                    startIcon={<ShowChartIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Xếp hạng\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <a\r\n                  href=\"/login\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2196f3\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      fontSize: \"16px\",\r\n                      boxShadow: \"none\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                </a>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/signup\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#7bccd5\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            style={{\r\n              flexGrow: 1,\r\n              // justifyContent: \"center\",\r\n              // alignItems: \"center\",\r\n              padding: 10,\r\n              marginBottom: \"30px\"\r\n            }}\r\n            container\r\n          >\r\n            <Grid\r\n              className=\"left-block-homepage\"\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{}}\r\n            >\r\n              <div>\r\n                {/* <h3 style={{ textAlign: \"center\" }}> */}\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h2\"\r\n                  // align=\"left\"\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  style={{ color: \"#009688\", fontWeight: 600, fontSize: \"4em\" }}\r\n                >\r\n                  {/* WELLCOME TO{\" \"} */}\r\n                  {/* <span style={{ color: \"#009688\",  }}> */}\r\n                  WELCOME TO HOCODE\r\n                  {/* </span> */}\r\n                </Typography>\r\n\r\n                {/* </h3> */}\r\n              </div>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  // align=\"left\"\r\n                  color=\"textSecondary\"\r\n                  paragraph\r\n                >\r\n                  {/* <p style={{ textAlign: \"center\" }}> */}\r\n                  Học và rèn luyện khả năng lập trình với hơn{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">30</span> bài thực hành{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">JAVA</span>. Còn\r\n                  chần chờ gì nữa, hãy tham gia ngay.\r\n                  {/* </p> */}\r\n                </Typography>\r\n\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  className=\"left-block-home-button\"\r\n                  // justify=\"left\"\r\n                >\r\n                  <Grid item>\r\n                    <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          color: \"#fff\",\r\n                          background: \"#ff5252\",\r\n\r\n                          fontWeight: 600,\r\n                          boxShadow: \"none\",\r\n                          fontSize: \"16px\",\r\n                          padding: \"8px 32px\"\r\n                        }}\r\n                      >\r\n                        Bắt đầu\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"image-homepage\"\r\n              container\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{\r\n                padding: \"8px\"\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  background: `url(\"/codeEdit3.jpg\") no-repeat left center`,\r\n                  backgroundSize: \"cover\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  borderRadius: \"16px 4px\"\r\n                }}\r\n              ></div>\r\n              {/* <img\r\n              src={process.env.PUBLIC_URL  + \"/codeEdit3.jpg\"}\r\n              alt=\"\"\r\n              // style={{ height: \"40px\" }}\r\n            ></img>\r\n    <Grid item>Goes here</Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* <Grid \r\n                      style={{\r\n                        flexGrow: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        padding: 25\r\n                      }}\r\n           \r\n          \r\n          >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeEdit.PNG\"}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"auto\",\r\n\r\n                  boxShadow: \"9px 7px 40px 0px rgba(0,0,0,0.75)\",\r\n                  borderRadius: 14\r\n                }}\r\n              ></img>\r\n            </Grid> */}\r\n\r\n          <Copyright />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(CourseBody));\r\n\r\n// <Container className={classes.cardGrid} maxWidth=\"md\">\r\n// {/* End hero unit */}\r\n// <Grid container spacing={4}>\r\n//   {cards.map(card => (\r\n//     <Grid item key={card} xs={12} sm={6} md={4}>\r\n//       <Card className={classes.card}>\r\n//         <CardMedia\r\n//           className={classes.cardMedia}\r\n//           image=\"https://source.unsplash.com/random\"\r\n//           title=\"Image title\"\r\n//         />\r\n//         <CardContent className={classes.cardContent}>\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             Heading\r\n//           </Typography>\r\n//           <Typography>\r\n//             This is a media card. You can use this section to\r\n//             describe the content.\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </Grid>\r\n//   ))}\r\n// </Grid>\r\n// </Container>\r\n","const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst regexPassword = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/;\r\n\r\nexport { regexEmail, regexPassword };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../../js/actions/authActions\";\r\nimport \"./SignUpPage.css\";\r\n\r\nimport { regexEmail, regexPassword } from \"../../common/regex\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass SignUpPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      socialAccount: \"local\",\r\n      password2: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    var errorFormNew = this.state.errorForm;\r\n\r\n    if (e.target.id === \"email\")\r\n      if (regexEmail.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.email =\r\n          \"*Email không đúng định dạng vd: nguyenvana@gmail.com\";\r\n      } else {\r\n        errorFormNew.email = \"\";\r\n      }\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n    if (this.state.password2.trim() === \"\")\r\n      messageError = \"*Nhập lại mật khẩu không thể để trống\";\r\n    if (this.state.password.trim() === \"\")\r\n      messageError = \"*Mật khẩu không thể để trống\";\r\n    // if (regexPassword.test(String(this.state.password).toLowerCase()) === false)\r\n    //   messageError =\r\n    //     \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n\r\n    if (this.state.email.trim() === \"\")\r\n      messageError = \"*Email không thể để trống\";\r\n\r\n    if (regexEmail.test(String(this.state.email).toLowerCase()) === false)\r\n      messageError = \"*Email không đúng định dạng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      socialAccount: this.state.socialAccount\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n             <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"80px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng ký\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  autoComplete=\"lname\"\r\n                  name=\"lastName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Họ\"\r\n                  autoFocus\r\n                  value={this.state.lastName}\r\n                  onChange={this.onChange}\r\n                  // error={this.state.errorForm.lastName.trim() !== \"\"}\r\n                  // helperText={this.state.errorForm.lastName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Tên\"\r\n                  name=\"firstName\"\r\n                  autoComplete=\"fname\"\r\n                  value={this.state.firstname}\r\n                  onChange={this.onChange}\r\n                  // error={this._checkError(this.state.errorForm.firstname)}\r\n                  // helperText={this.state.errorForm.firstname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Địa chỉ Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.email.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password2\"\r\n                  label=\"Nhập lại Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password2\"\r\n                  autoComplete=\"current-password2\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password2.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Tạo tài khoản\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản rồi, Đăng nhập ngay\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nSignUpPage.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(SignUpPage)\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    // minWidth: 650\r\n  },\r\n  searchIcon: {\r\n    // width: theme.spacing(7),\r\n    width: 7,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    // padding: theme.spacing(1, 1, 1, 7),\r\n    padding: 7,\r\n    // transition: theme.transitions.create('width'),\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('md')]: {\r\n    //   width: 200,\r\n    // },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    // borderRadius: theme.shape.borderRadius,\r\n    // backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    // \"&:hover\": {\r\n    //     backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    // },\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   marginLeft: theme.spacing(3),\r\n    //   width: 'auto',\r\n    // },\r\n  },\r\n  rootSearch: {\r\n    padding: \"2px 16px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n    marginBottom: 24,\r\n    paddingLeft: \"36px\"\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 16\r\n  }\r\n});\r\n\r\nclass SearchCertPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      searchID: \"\",\r\n      rows: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n  componentDidMount() { }\r\n\r\n  onSubmitSearch = () => {\r\n    this.setState({ isLoading: true, rows: [] });\r\n    // console.log(this.state.searchID);\r\n    Axios.get(`http://localhost:8081/api/v1/certs/search/${this.state.searchID}`)\r\n      .then(res => {\r\n        this.setState({ rows: res.data, isLoading: false });\r\n        console.log(this.state.rows);\r\n      })\r\n      .catch(e => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleChange = event => {\r\n    // this.setState({ searchID: event.target.value });\r\n    this.setState({\r\n      searchID: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{ height: \"100%\", backgroundColor: \"whitesmoke\" }}\r\n        >\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              className=\"header-homepage\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <Grid\r\n                className=\"HeaderLeftHome\"\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                sm={4}\r\n                style={{ marginBottom: 0 }}\r\n              >\r\n                <div className=\"logo logo-homepage\">\r\n                  <Link to=\"/profile\">\r\n                    <div\r\n                      style={{\r\n                        height: \"56px\",\r\n                        margin: 16,\r\n                        background: `url(\"/logo.png\") no-repeat left center`,\r\n                        backgroundSize: \"contain\"\r\n                      }}\r\n                    ></div>\r\n                  </Link>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                className=\"HeaderRightHome\"\r\n                item\r\n                xs={12}\r\n                md={8}\r\n                sm={8}\r\n                container\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/searchcert\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2b2b2b\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\"\r\n\r\n                        // width: \"155px\",\r\n                      }}\r\n                      startIcon={<SearchIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Tra Chứng Chỉ\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/leaderboard\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#6589F9\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\",\r\n\r\n                        // width: \"155px\",\r\n                      }}\r\n                      startIcon={<ShowChartIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Xếp hạng\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/login\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2196f3\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"16px\",\r\n                        boxShadow: \"none\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng nhập\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/signup\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#7bccd5\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng ký\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ height: \"100%\", padding: \"64px\" }}\r\n            >\r\n              <Paper\r\n                onSubmit={this.onSubmitSearch}\r\n                component=\"form\"\r\n                className={classes.rootSearch}\r\n              >\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Mã Chứng Chỉ\"\r\n                  inputProps={{ \"aria-label\": \"mã chứng chỉ\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <IconButton\r\n                  //   type=\"submit\"\r\n                  onClick={this.onSubmitSearch}\r\n                  className={classes.iconButton}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n\r\n              <Paper className={classes.root}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell >ID</TableCell>\r\n                      <TableCell align=\"right\">Trạng thái</TableCell>\r\n                      <TableCell align=\"right\">Thời gian cập nhập</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {this.state.rows.map(row => (\r\n                      <TableRow key={row.id}>\r\n                        <TableCell component=\"th\" scope=\"row\" >\r\n                          {row.search_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                        <TableCell align=\"right\">{Date(row.timestamp).toLocaleString(\"vi\")}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <CircularProgress size={64} style={{ margin: \"32px\" }} />\r\n                  </div>\r\n                ) : (\r\n                    <> </>\r\n                  )}\r\n                {this.state.rows.length === 0 && !this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      width=\"184\"\r\n                      height=\"152\"\r\n                      viewBox=\"0 0 184 152\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <g transform=\"translate(24 31.67)\">\r\n                          <ellipse\r\n                            fillOpacity=\".8\"\r\n                            fill=\"#F5F5F7\"\r\n                            cx=\"67.797\"\r\n                            cy=\"106.89\"\r\n                            rx=\"67.797\"\r\n                            ry=\"12.668\"\r\n                          ></ellipse>\r\n                          <path\r\n                            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n                            fill=\"#AEB8C2\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\r\n                            fill=\"url(#linearGradient-1)\"\r\n                            transform=\"translate(13.56)\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n                            fill=\"#F5F5F7\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n                            fill=\"#DCE0E6\"\r\n                          ></path>\r\n                        </g>\r\n                        <path\r\n                          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n                          fill=\"#DCE0E6\"\r\n                        ></path>\r\n                        <g transform=\"translate(149.65 15.383)\" fill=\"#FFF\">\r\n                          <ellipse\r\n                            cx=\"20.654\"\r\n                            cy=\"3.167\"\r\n                            rx=\"2.849\"\r\n                            ry=\"2.815\"\r\n                          ></ellipse>\r\n                          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"></path>\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                    <p>No Data</p>\r\n                  </div>\r\n                ) : (\r\n                    <></>\r\n                  )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchCertPage);\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleMDEReact\r\n          className={\"react_mde_custom\"}\r\n          label=\"\"\r\n          value={this.props.mini_task_desc}\r\n          onChange={this.handleChange}\r\n          options={{\r\n           \r\n            spellChecker: false\r\n            \r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"../../minitaskPage/ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\"\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/courses`).then(res => { \r\n      const courses = res.data;\r\n      const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n      const coursesoption = coursesFilter.map(course => {\r\n        return { value: course.id, label: course.course_name };\r\n      });\r\n      this.setState({\r\n        courses: coursesFilter,\r\n        coursesOption: coursesoption,\r\n        tasksOption: courses[0].tasks.map(task => {\r\n          return { value: task.id, label: task.task_name };\r\n        })\r\n      });\r\n      this.setState({\r\n        course_id: courses[0].id,\r\n        task_id: courses[0].tasks[0].id\r\n      });\r\n    });\r\n  }\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code =  `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n    }(${ this.state.inputList\r\n      .map(input => {\r\n        return `${input.input_type} ${input.input_name}`;\r\n      })\r\n      .join()})\r\n{ \r\n}`;\r\n    \r\n    let newMiniTask = {\r\n      template_code:template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      course_id: this.state.course_id, \r\n      task_id: this.state.task_id,\r\n      name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n    }\r\n    console.log(newMiniTask)\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) { // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function(course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({ // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value ,   tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }), task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div>Tạo bài thực hành</div>\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ background: \"aliceblue\", padding: \"8px\" }}>\r\n              {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn khóa học:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn task:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item>\r\n                  <div>Tên bài thực hành:</div>\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <div>Tên Function:</div>\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    {/* Kiểu trả về: */}\r\n                  </div>\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Mô tả bài toán:\r\n                  </div>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n              />\r\n            </div>\r\n            <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addInput(e)}>Thêm tham số</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"20vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              Tên tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <input\r\n                                className=\"input-createminitask\"\r\n                                value={input.input_name}\r\n                                onChange={e =>\r\n                                  this.handleListInputNameChange(e, index)\r\n                                } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              kiểu tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <Select\r\n                                options={options}\r\n                                defaultValue={options[0]}\r\n                                onChange={select_value =>\r\n                                  this.handleListInputTypeChange(\r\n                                    select_value,\r\n                                    index\r\n                                  )\r\n                                } // higher order function\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addTest(e)}>Thêm test</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.unit_tests.map((unit_test, index0) => {\r\n                    return (\r\n                      <div key={index0} style={{ padding: 10 }}>\r\n                        {\" \"}\r\n                        Test {index0 + 1}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Inputs:\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Out put\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                <button onClick={this.handleSubmit}>submit</button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","import React, { Component } from 'react';\r\nimport CreateMiniTaskBody from './body/CreateMiniTaskBody'\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CreateMiniTaskBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK, AUTH_GET_PERMISSIONS } from \"react-admin\";\r\nimport decodeJwt from \"jwt-decode\";\r\n\r\nexport default (type, params) => {\r\n  if (type === AUTH_LOGIN) {\r\n    const { username, password } = params;\r\n    const request = new Request(\"http://localhost:8081/api/v1/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email: username, password: password }),\r\n      headers: new Headers({ \"Content-Type\": \"application/json\" })\r\n    });\r\n    return fetch(request)\r\n      .then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(({ token }) => {\r\n        const decodedToken = decodeJwt(token);\r\n        localStorage.setItem(\"AuthToken\", token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"permissions\", decodedToken.data.role);\r\n      });\r\n  }\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"AuthToken\");\r\n    localStorage.removeItem(\"permissions\");\r\n  return Promise.resolve();\r\n  }\r\n  if (type === AUTH_ERROR) {\r\n    const status = params.status;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"AuthToken\");\r\n      localStorage.removeItem(\"permissions\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  if (type === AUTH_CHECK) {\r\n    // return Promise.resolve();\r\n\r\n    return localStorage.getItem(\"token\") || localStorage.getItem(\"AuthToken\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n  if (type === AUTH_GET_PERMISSIONS) {\r\n    return localStorage.getItem(\"permissions\") //|| localStorage.getItem(\"AuthToken\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n\r\n  return Promise.reject(\"Unknown method\");\r\n};\r\n","/**\r\n * Generated catchAll.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass catchAll extends Component {\r\n  render() {\r\n    return <Redirect push to=\"/\" />;\r\n\r\n    // return localStorage.getItem('token') ? (\r\n    //     <NotFound />\r\n    // ) : (\r\n    //     <Redirect push to=\"/login\" />\r\n    // );\r\n  }\r\n}\r\n\r\nexport default catchAll;\r\n/** End of Generated Code **/\r\n","// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n// import { NotFound } from 'react-admin';\r\n// import Card from '@material-ui/core/Card';\r\n// import { Title, Resource } from 'react-admin';\r\n\r\n// import {\r\n//     ModelEventList,\r\n//     ModelEventCreate,\r\n//     ModelEventEdit,\r\n// } from './resources/ModelEvent';\r\n\r\n\r\n// import catchAll from './catchAll';\r\n\r\n\r\n// const Foo = () => (\r\n//     <Card>\r\n//         <Title title=\"My Page\" />\r\n//         {/* <CardContent>\r\n//             ...\r\n//         </CardContent> */}\r\n//         <Resource\r\n\r\n//         name=\"events\"\r\n//         list={ ModelEventList }\r\n//         create={ ModelEventCreate }\r\n//         edit={ ModelEventEdit }\r\n//     />\r\n//     {/* <ModelEventList/> */}\r\n//         My Page\r\n//         My Page\r\n//     </Card>\r\n// );\r\n\r\nexport default [\r\n    // <Route exact path=\"/profile/admin/events\" render={() => <Resource\r\n\r\n    //     name=\"events\"\r\n    //     list={ ModelEventList }\r\n    //     create={ ModelEventCreate }\r\n    //     edit={ ModelEventEdit }\r\n    // />} />,\r\n    // <Route exact path=\"/bar\" component={Bar} />,\r\n    // <Route exact path=\"/baz\" component={Baz} noLayout />,\r\n\r\n    // <Route exact path=\"/profile/admin/books\" component={<NotFound />} />,\r\n    // <Route exact path=\"/asd\" component={<div>courses</div>} />,\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n];\r\n","/**\r\n * Generated dataProvider.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport { stringify } from 'query-string';\r\nimport { fetchUtils } from 'react-admin';\r\n\r\nexport const GET_LIST = 'GET_LIST';\r\nexport const GET_ONE = 'GET_ONE';\r\nexport const GET_MANY = 'GET_MANY';\r\nexport const GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n\r\nconst COMPOSITE_KEY_RESOURSES = {};\r\n\r\n// For models with different Primary Key fields rather than 'id'.\r\nconst PK_MAPPING = {};\r\n\r\nconst FILTER_LENGTHS = {\r\n};\r\n\r\nconst GET_MANY_FILTER = {};\r\n\r\n/**\r\n * @param {String} apiUrl The base API url\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} { url, options } The HTTP request parameters\r\n */\r\nexport const convertRESTRequestToHTTP = ({ apiUrl, type, resource, params }) => {\r\n    let url = '';\r\n    const options = {};\r\n    let query = {};\r\n            console.log(\"[params, type, resource]\");\r\n            console.log(params);\r\n            console.log(type);\r\n            console.log(resource);\r\n\r\n    switch (type) {\r\n        case GET_MANY_REFERENCE: {\r\n            query[params.target] = params.id;\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_LIST: {\r\n            if (params.pagination) {\r\n                let { page, perPage } = params.pagination;\r\n                query['limit'] = perPage || 100; // Maximum limit if perPage = 0.\r\n                query['offset'] = page ? (page - 1) * query['limit'] : 0;\r\n            }\r\n\r\n            if (params.sort) {\r\n                const { field, order } = params.sort;\r\n                query['order_by'] = `${order === 'DESC' ? '-' : ''}` + field;\r\n            }\r\n\r\n            if (params.filter) {\r\n                let filterLengths = FILTER_LENGTHS[resource];\r\n                Object.keys(params.filter).forEach(key => {\r\n                    let filter =\r\n                        params.filter[key] instanceof Object\r\n                            ? JSON.stringify(params.filter[key])\r\n                            : params.filter[key];\r\n                    if (filterLengths && filterLengths[key]) {\r\n                        const minLength = filterLengths[key].min;\r\n                        const maxLength = filterLengths[key].max;\r\n                        if (!minLength || filter.length >= minLength) {\r\n                            filter =\r\n                                maxLength && filter.length > maxLength\r\n                                    ? filter.slice(0, maxLength)\r\n                                    : filter;\r\n                            query[key] = filter;\r\n                        }\r\n                    } else {\r\n                        query[key] = filter;\r\n                    }\r\n                    if (!query[key] || (query[key] && query[key].length === 0)) {\r\n                        delete query[key];\r\n                    }\r\n                });\r\n            }\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_ONE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            break;\r\n        case GET_MANY: {\r\n            const filterName = GET_MANY_FILTER[resource];\r\n            const query = filterName\r\n                ? { [filterName]: params.ids.join(',') }\r\n                : { ids: params.ids.join(',') };\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case UPDATE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'PUT';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case CREATE:\r\n            url = `${apiUrl}/${resource}`;\r\n            options.method = 'POST';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case DELETE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'DELETE';\r\n            break;\r\n        default:\r\n            throw new Error(`Unsupported fetch action type ${type}`);\r\n    }\r\n    return { url, options };\r\n};\r\n\r\n/**\r\n * @param {Object} response HTTP response from fetch()\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} REST response\r\n */\r\nconst convertHTTPResponseToREST = ({ response, type, resource, params }) => {\r\n    const { headers, json } = response;\r\n    let keys = COMPOSITE_KEY_RESOURSES[resource];\r\n    let pk = PK_MAPPING[resource];\r\n    let data = [];\r\n\r\n    switch (type) {\r\n        // Total required by AOR for all list operations\r\n        case GET_LIST:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case GET_MANY_REFERENCE:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case CREATE:\r\n            return {\r\n                data: {\r\n                    ...params.data,\r\n                    id: keys ? keys.map(key => json[key]).join('/') : pk ? json[pk] : json.id\r\n                }\r\n            };\r\n        default:\r\n            return { data: json ? json : {} };\r\n    }\r\n};\r\n\r\n/**\r\n * Maps React Admin queries to a Swagger Spec\r\n * @example\r\n * GET_LIST     => GET http://my.api.url/users?limit=10&offset=30&ordering=-name\r\n * GET_ONE      => GET http://my.api.url/users/123/ or GET http://my.api.url/users/123/321/ in the case of a composite key\r\n * GET_MANY     => GET http://my.api.url/users/1/ GET http://my.api.url/users/2/\r\n * UPDATE       => PUT http://my.api.url/users/123/ or PUT http://my.api.url/users/123/321/ in the case of a composite key\r\n * CREATE       => POST http://my.api.url/users/\r\n * DELETE       => DELETE http://my.api.url/users/123/ or DELETE http://my.api.url/users/123/321/ in the case of a composite key\r\n */\r\nconst dataProvider = (apiUrl, httpClient = fetchUtils.fetchJson) => {\r\n    /**\r\n     * @param {string} type Request type, e.g GET_LIST\r\n     * @param {string} resource Resource name, e.g. \"users\"\r\n     * @param {Object} payload Request parameters. Depends on the request type\r\n     * @returns {Promise} the Promise for a REST response\r\n     */\r\n\r\n    return async (type, resource, params) => {\r\n        const { url, options } = convertRESTRequestToHTTP({\r\n            apiUrl,\r\n            type,\r\n            resource,\r\n            params\r\n        });\r\n\r\n        return httpClient(url, options).then(response =>\r\n            convertHTTPResponseToREST({\r\n                response,\r\n                type,\r\n                resource,\r\n                params\r\n            })\r\n        );\r\n    };\r\n};\r\n\r\nexport const httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const id_token = localStorage.getItem('token');\r\n    options.headers.set('Authorization', `Bearer ${id_token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\n// export default dataProvider('rest_url', httpClient);\r\nexport default dataProvider('http://localhost:8081/api/v1/curd', httpClient);\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Menu.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MenuItemLink, getResources, Responsive } from \"react-admin\";\r\nimport ListIcon from \"@material-ui/icons/ViewList\";\r\nimport { titleCase } from \"./utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport SportsVolleyballIcon from '@material-ui/icons/SportsVolleyball';\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\n\r\nconst ICONS = {\r\n  books: <MenuBookIcon style={{ marginRight: 1 }} />,\r\n  events: <EventIcon style={{ marginRight: 1 }} />,\r\n  courses: <GestureIcon style={{ marginRight: 1 }} />,\r\n  tasks: <SportsSoccerIcon style={{ marginRight: 1 }} />,\r\n  minitasks: <SportsVolleyballIcon style={{ marginRight: 1 }} />,\r\n  profile: <ListIcon style={{ marginRight: 1 }} />,\r\n  certs: <CardGiftcardIcon style={{ marginRight: 1 }} />,\r\n  users: <SupervisorAccountIcon style={{ marginRight: 1 }} />,\r\n  fights: <EmojiEventsIcon style={{ marginRight: 1 }} />\r\n};\r\n\r\nconst Menu = ({ resources, onMenuClick, logout }) => (\r\n  <div>\r\n    <Link to={`/profile`} style={{ textDecoration: \"none\" }}>\r\n      <MenuItem>\r\n        <ArrowBackIcon style={{ fontSize: 23, color: \"#1f74be\" }} />\r\n        <p style={{ fontSize: 14, marginLeft: \"1.2em\", color: \"#1f74be\" }}>\r\n          Quay lại trang chủ\r\n        </p>\r\n      </MenuItem>\r\n\r\n    </Link>\r\n    {/* <MenuItemLink\r\n              key=\"goHome\"\r\n              to={`/profile`}\r\n              primaryText={`Quay lại trang chủ`}\r\n              onClick={onMenuClick}\r\n              leftIcon={<ArrowBackIcon/>}\r\n              className=\"MenuItemLinkBack\"\r\n            /> */}\r\n    {resources\r\n      ? resources.map(resource =>\r\n        resource.hasList ? (\r\n          <MenuItemLink\r\n            key={resource.name}\r\n            to={`/${resource.name}`}\r\n            primaryText={`${changeIDToName(titleCase(resource.name))}`}\r\n            onClick={onMenuClick}\r\n            leftIcon={ICONS[resource.name]}\r\n          />\r\n        ) : null\r\n      )\r\n      : \"\"}\r\n    <Responsive small={logout} medium={null} />\r\n  </div>\r\n);\r\n\r\nconst changeIDToName = name => {\r\n  var title = \"\";\r\n  switch (name) {\r\n    case \"Books\":\r\n      title = \"Sách lập trình\";\r\n      break;\r\n    case \"Events\":\r\n      title = \"Sự kiện\";\r\n      break;\r\n    case \"Courses\":\r\n      title = \"Chủ đề\";\r\n      break;\r\n    case \"Tasks\":\r\n      title = \"Chủ đề con\";\r\n      break;\r\n    case \"Minitasks\":\r\n      title = \"Bài học\";\r\n      break;\r\n    case \"Certs\":\r\n      title = \"Chứng chỉ\";\r\n      break;\r\n    case \"Users\":\r\n      title = \"Người dùng\";\r\n      break;\r\n    case \"Fights\":\r\n      title = \"Thi đấu\"\r\n    break;\r\n    default:\r\n      title = name;\r\n      break;\r\n  }\r\n\r\n  return title;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: getResources(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n/** End of Generated Menu.js Code **/\r\n","/**\r\n * Generated utils.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\n\r\n\r\n// Produce a title case string\r\nexport const titleCase = string => {\r\n    return string\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map(word => {\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        })\r\n        .join(' ');\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated MyLayout.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { Layout } from 'react-admin';\r\nimport Menu from './Menu';\r\n\r\nconst MyLayout = (props) => <Layout\r\n    {...props}\r\n    menu={Menu}\r\n/>;\r\n\r\nexport default MyLayout;\r\n/** End of Generated MyLayout.js Code **/","/**\r\n * Generated theme.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n//import { pink } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary:  {\r\n            main: '#1f74be',\r\n          },\r\n        error: red\r\n    }\r\n});\r\n\r\nexport const styles = {\r\n    dateTimeInput: {\r\n        marginTop: 15,\r\n        marginBottom: 15\r\n    }\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelBookEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelBookEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelBookFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelBookFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelBook.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  ImageField,\r\n  EditButton,\r\n  DeleteButton\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelBookEditToolbar from \"../customActions/ModelBookEditToolbar\";\r\n\r\nimport ModelBookFilter from \"../filters/ModelBookFilter\";\r\n\r\nexport const ModelBookList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Sách lập trình\"\r\n    filters={<ModelBookFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"title\" sortable={false} />\r\n      <ImageField className=\"thumbNailView\" source=\"image\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelBookCreate = props => (\r\n  <Create {...props} title=\"Tạo Sách lập trình\">\r\n    <SimpleForm redirect=\"show\">\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const ModelBookEdit = props => (\r\n  <Edit {...props} title=\"Sửa Sách lập trình\">\r\n    <SimpleForm toolbar={<ModelBookEditToolbar />}>\r\n      <TextInput resettable source=\"id\" disabled />\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCourseEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCourseEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCourseFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCourseFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelCourse.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //   BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n\r\n  ChipField,\r\n  DateField,\r\n  SelectInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelCourseEditToolbar from \"../customActions/ModelCourseEditToolbar\";\r\n\r\nimport ModelCourseFilter from \"../filters/ModelCourseFilter\";\r\n//import { Button } from \"@material-ui/core\";\r\n\r\nimport { DateTimeInput } from 'react-admin-date-inputs2';\r\n\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport const ModelCourseList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề\"\r\n    filters={<ModelCourseFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"course_name\" sortable={false} />\r\n      {/* <TextField source=\"course_desc\" sortable={false} /> */}\r\n      {/* <TextField source=\"total_minitask\" sortable={false} /> */}\r\n      <ChipField source=\"user_create\" />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"tasks\"                sortable={false}            /> */}\r\n      <TextField source=\"status\" sortable={false} />\r\n      <DateField source=\"start_time\" />\r\n      <DateField source=\"end_time\" />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nconst validateCourseCreate = (values) => {\r\n  const errors = {};\r\n  if (!values.course_name) {\r\n    errors.course_name = ['The course name is required'];\r\n  }\r\n  if (!values.background_image) {\r\n    errors.background_image = ['The background image is required'];\r\n  }\r\n  if (!values.start_time) {\r\n    errors.start_time = ['The start time is required'];\r\n  }\r\n  if (!values.end_time) {\r\n    errors.end_time = ['The end time is required'];\r\n  }\r\n  if (values.end_time - values.start_time <= 0) {\r\n    errors.end_time = ['The end time must be longer than start time']\r\n  }\r\n  return errors\r\n};\r\n\r\n\r\nclass ModelCourseCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề\">\r\n        <SimpleForm redirect=\"show\" validate={validateCourseCreate} >\r\n          <TextInput resettable source=\"course_name\" />\r\n          <TextInput resettable source=\"background_image\" />\r\n          <TextInput resettable multiline source=\"course_desc\" />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} />\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              required\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </SimpleForm>\r\n      </Create>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// create another Create for Mod permission.\r\nclass ModelCourseCreateForMod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput resettable source=\"course_name\" />\r\n          <TextInput resettable source=\"background_image\" />\r\n          <TextInput resettable multiline source=\"course_desc\" />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} />\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput resettable                source=\"id\"            /> */}\r\n          {/* <TextInput resettable                source=\"tasks\"            /> */}\r\n          {/* <TextInput resettable                source=\"timestamp\"            /> */}\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              required\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <button type=\"button\" className=\"btn btn-default\"\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n          //  onClick={this.handleDialogCourseCheck}\r\n          >Yêu cầu xét duyệt</button>\r\n\r\n        </SimpleForm>\r\n      </Create>\r\n    )\r\n  }\r\n};\r\n\r\nconst required = (message = 'Required') =>\r\n  value => value ? undefined : message;\r\n\r\nconst endDateValidation = (value, allValues) => {\r\n  if (new Date(value) - new Date(allValues.start_time) <= 0 &&\r\n    new Date(value) - new Date()) {\r\n    return 'End date must be longer than start date and current';\r\n  }\r\n}\r\n\r\nconst startDateValidation = (value, allValues) => {\r\n  if (new Date(value) - new Date() <= 0) {\r\n    return 'End date must be longer than current';\r\n  }\r\n}\r\n\r\nclass ModelCourseEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chủ đề\">\r\n        <SimpleForm toolbar={<ModelCourseEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          <TextInput resettable source=\"course_name\" validate={[required()]} />\r\n          <TextInput resettable source=\"background_image\" validate={[required()]} />\r\n          <TextInput resettable multiline source=\"course_desc\" validate={[required()]} />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} validate={[required()]} />\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              validate={[required(), startDateValidation]}\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              validate={[required(), endDateValidation]}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport { ModelCourseCreateForMod, ModelCourseCreate, ModelCourseEdit };\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelEventEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelEventEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelEventFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelEventFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelEvent.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  ImageField,\r\n  DeleteButton\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelEventEditToolbar from \"../customActions/ModelEventEditToolbar\";\r\n\r\nimport ModelEventFilter from \"../filters/ModelEventFilter\";\r\n\r\nexport const ModelEventList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Sự kiện\"\r\n    filters={<ModelEventFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"title\" sortable={false} />\r\n      <TextField source=\"link\" sortable={false} />\r\n      <ImageField className=\"thumbNailView\" source=\"image\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelEventCreate = props => (\r\n  <Create {...props} title=\"Tạo Sự kiện\">\r\n    <SimpleForm redirect=\"show\">\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"link\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const ModelEventEdit = props => (\r\n  <Edit {...props} title=\"Sửa Sự kiện\">\r\n    <SimpleForm toolbar={<ModelEventEditToolbar />}>\r\n      <TextInput resettable source=\"id\" disabled />\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"link\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n/** End of Generated Code **/\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\n\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid item xs={6} sm={6} >\r\n          <SimpleMDEReact\r\n            style={{width:\"1400px\"}}\r\n            className={\"react_mde_custom\"}\r\n            label=\"\"\r\n            value={this.props.mini_task_desc}\r\n            onChange={this.handleChange}\r\n            options={{\r\n              spellChecker: false\r\n            }}\r\n          />\r\n      </Grid>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    let template_code_format = jBeautify(template_code,{indent_size: 2});\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code_format\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\nclass ShowUnitTest extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } \r\n      \r\n      else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          } \r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          else{\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          \r\n        });\r\n        junit4 += `}`;\r\n      }\r\n\r\n    return junit4;\r\n  }\r\n  render() {\r\n    let minitask = {output_type_func : this.props.output_type_func,unit_tests:this.props.unit_tests,name_func:this.props.name_func};\r\n    let junit4 = jBeautify(this.createFileTest(minitask),{indent_size: 2});\r\n  \r\n    return (\r\n      <CodeMirror\r\n        width=\"1000px\"\r\n        value={\r\n          junit4\r\n        }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:10px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowUnitTest;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" },\r\n  { value: \"void\", label: \"Void\" },\r\n];\r\nconst optionsLevel = [\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" },\r\n]\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"easy\",\r\n      user_code: \"\",\r\n      isImportVariableOpen: false,\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0,\r\n      numbers_doing: 0, // số lượt làm tính điểm cho bài thực hành,\r\n      isShowError: false,\r\n      errContent: \"\",\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n    //   const courses = res.data;\r\n    //   const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n    //   const coursesoption = coursesFilter.map(course => {\r\n    //     return { value: course.id, label: course.course_name };\r\n    //   });\r\n    //   this.setState({\r\n    //     courses: coursesFilter,\r\n    //     coursesOption: coursesoption,\r\n    //     tasksOption: courses[0].tasks.map(task => {\r\n    //       return { value: task.id, label: task.task_name };\r\n    //     })\r\n    //   });\r\n    //   console.log(courses);\r\n    //   this.setState({\r\n    //     course_id: courses[0].id,\r\n    //     task_id: courses[0].tasks.length === 0 ? \"\" : courses[0].tasks[0].id\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // handle modal import variable\r\n  handleModalVariableOpen = () => {\r\n    this.setState({\r\n      isImportVariableOpen: !this.state.isImportVariableOpen,\r\n    })\r\n  }\r\n\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n      }(${this.state.inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      numbers_doing: parseInt(this.state.numbers_doing),\r\n      input_list: this.state.inputList\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/minitasks\", newMiniTask)\r\n      .then(function (response) {\r\n        window.location.reload();\r\n        toast(\"Tạo bài thực hành thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n      }).catch(err => {\r\n        if (err !== undefined) {\r\n          this.setState({ isShowError: true, errContent: \"Làm ơn nhập đủ thông tin\" })\r\n        }\r\n      });\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n\r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function (course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name, select_value)\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function (input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  renderTitle = (title) => {\r\n    return <Box my={1}>\r\n      <Typography style={{ fontSize: 15, fontWeight: 450 }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  handleShowError = () => {\r\n    this.setState({ isShowError: !this.state.isShowError });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { template_code, isImportVariableOpen, errContent, isShowError } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h2\">Thêm bài thực hành</Typography>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isShowError}\r\n            onClose={this.handleShowError}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                width: \"300px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: '8px'\r\n              }}\r\n            >\r\n              <Box p={2}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">{errContent}</Typography>\r\n                </Box>\r\n                <Box>\r\n                  {errContent}\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isImportVariableOpen}\r\n            onClose={this.handleModalVariableOpen}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={isImportVariableOpen}>\r\n\r\n              <div\r\n                style={{\r\n                  maxHeight: \"50vh\",\r\n                  height: \"1500px\",\r\n                  width: \"1000px\",\r\n                  position: \"relative\",\r\n                  overflowY: \"scroll\",\r\n                  overflowX: \"hidden\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <Box p={4}>\r\n                  <Box display=\"flex\">\r\n                    <Box>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                        className={classes.button}\r\n                        onClick={e => this.addInput(e)}\r\n                      >\r\n                        Thêm tham số\r\n                    </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                      <Typography variant=\"overline\">Số lượng: {this.state.inputList.length}</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <Slide in={true} direction=\"left\">\r\n                        <div key={index}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item container xs={12} sm={5} spacing={2}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Tên tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.input_name}\r\n                                  onChange={e =>\r\n                                    this.handleListInputNameChange(e, index)\r\n                                  } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} sm={5} spacing={1}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Kiểu tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <Select\r\n                                  options={options}\r\n                                  //defaultValue={options[0]}\r\n                                  onChange={select_value =>\r\n                                    this.handleListInputTypeChange(\r\n                                      select_value,\r\n                                      index\r\n                                    )\r\n                                  } // higher order function\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              container\r\n                              xs={12}\r\n                              sm={2}\r\n                              style={{ alignItems: \"flex-end\" }}\r\n                              justify=\"center\"\r\n                            >\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.button}\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    background: \"#ca0000\"\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.handleRemoveInput(index);\r\n                                  }}\r\n                                >\r\n                                  xóa\r\n                              </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                        </div>\r\n                      </Slide>\r\n                    );\r\n                  })}\r\n                </Box>{\" \"}\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ padding: \"8px\" }}>\r\n              {/* {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      //defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                      value={this.state.courses_option_select}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      //defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                      value={this.state.task_option_select}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên bài thực hành:\")}\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên hàm:\")}\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name_func}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Sổ đậu:\")}\r\n                  <input\r\n                    name=\"code_point\"\r\n                    type=\"number\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.code_point}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Độ khó:\")}\r\n                  <Select\r\n                    styles={selectStyles}\r\n                    options={optionsLevel}\r\n                    value={this.state.level_ref_select}\r\n                    defaultValue={optionsLevel[0]}\r\n                    ref={this.level_ref}\r\n                    name=\"level\"\r\n                    onChange={this.onLevelSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  {this.renderTitle(\"Kiểu trả về:\")}\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    value={this.state.output_type_func_select}\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  >\r\n                    {/* {options.map(val => (\r\n                      <MenuItem value={val.value}>{val.label}</MenuItem>\r\n                    ))} */}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box my={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                      className={classes.button}\r\n                      onClick={this.handleModalVariableOpen}\r\n                    >\r\n                      Thêm tham số\r\n                  </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\"\r\n              }}\r\n            >\r\n              {this.state.inputList.map((input, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Tên tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <input\r\n                            className=\"input-createminitask\"\r\n                            value={input.input_name}\r\n                            onChange={e =>\r\n                              this.handleListInputNameChange(e, index)\r\n                            } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Kiểu tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <Select\r\n                            options={options}\r\n                            //defaultValue={options[0]}\r\n                            onChange={select_value =>\r\n                              this.handleListInputTypeChange(\r\n                                select_value,\r\n                                index\r\n                              )\r\n                            } // higher order function\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={12}\r\n                        sm={2}\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                      >\r\n                        <Grid item>\r\n                          <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#ca0000\"\r\n                            }}\r\n                            onClick={() => {\r\n                              this.handleRemoveInput(index);\r\n                            }}\r\n                          >\r\n                            xóa\r\n                              </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </div> */}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n                template_code={template_code}\r\n              />\r\n            </div>\r\n            {/* <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  \r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item container xs={12} md={12}>\r\n              <Grid item xs={12} md={12}>\r\n                {this.renderTitle(\"Mô tả bài toán:\")}\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              {this.renderTitle(\"Tạo test:\")}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              md={6}\r\n              sm={6}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <Box mr={1} mt={2}>\r\n                      <div key={index0}>\r\n                        {\" \"}\r\n                        {/* Test {index0 + 1} */}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Input:\")}\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Output:\")}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{ color: \"white\", background: \"#ca0000\" }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveUnitTest(index0);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                            </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={6} sm={6}>\r\n              <Box my={2}>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                  />\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className={classes.button}\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    variant=\"contained\"\r\n                    onClick={e => this.addTest(e)}\r\n                  >\r\n                    Thêm test\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Lưu\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sm={6}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                \r\n              </Grid>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n          enableMultiContainer\r\n          containerId={\"B\"}\r\n          position={toast.POSITION.TOP_RIGHT}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst optionsLevel = [\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" }\r\n];\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 20\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\n// const getParams = pathname => {\r\n//   const minitask = matchPath(pathname, {\r\n//     path: `/profile/minitasks/:minitasksId/edit`\r\n//   });\r\n//   return (minitask && minitask.params) || {};\r\n// };\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass MinitaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0,\r\n      course: { value: \"\", label: \"\" },\r\n      task: { value: \"\", label: \"\" },\r\n      output_type_func_select: options[0],\r\n      level_ref_select: optionsLevel[0],\r\n      courses_option_select: { value: \"\", label: \"\" },\r\n      task_option_select: { value: \"\", label: \"\" },\r\n      isImportVariableOpen: false,\r\n      isShowError: false,\r\n      errContent: \"\",\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    //const currentParams = getParams(location.pathname);\r\n    // console.log(currentParams);\r\n    let minitask;\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${this.props.minitasksId}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        minitask = res.data;\r\n\r\n        const found = options.find(\r\n          element => element.value === minitask.output_type_func\r\n        );\r\n        const found2 = optionsLevel.find(\r\n          element => element.value === minitask.level\r\n        );\r\n\r\n        this.setState({\r\n          template_code: minitask.template_code,\r\n          unit_tests: minitask.unit_tests,\r\n          task_id: minitask.task_id,\r\n          name: minitask.mini_task_name,\r\n          name_func: minitask.name_func,\r\n\r\n          output_type_func: minitask.output_type_func,\r\n          point_unlock: minitask.point_unlock,\r\n          status: minitask.status,\r\n          vitri: minitask.vitri,\r\n          mini_task_desc: minitask.mini_task_desc,\r\n          level: minitask.level,\r\n          code_point: minitask.code_point,\r\n          inputList: minitask.input_list || [],\r\n\r\n          output_type_func_select: found,\r\n          level_ref_select: found2\r\n        });\r\n      });\r\n    // axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n    //   const courses = res.data;\r\n    //   const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n    //   const coursesoption = coursesFilter.map(course => {\r\n    //     return { value: course.id, label: course.course_name };\r\n    //   });\r\n    //   // const tasksoption = courses[0].tasks.map(task => {\r\n    //   //   return { value: task.id, label: task.task_name };\r\n    //   // });\r\n    //   const tasksfulloption = [];\r\n\r\n    //   /* eslint-disable array-callback-return */\r\n\r\n    //   for (let i = 0; i < courses.length; i++) {\r\n    //     courses[i].tasks.map(tas => {\r\n    //       tasksfulloption.push({\r\n    //         value: tas.id,\r\n    //         label: tas.task_name,\r\n    //         courses: { value: courses[i].id, label: courses[i].course_name, },\r\n    //         tasksoption: courses[i].tasks.map((task) => {\r\n    //           return { value: task.id, label: task.task_name };\r\n    //         }),\r\n    //       });\r\n    //     });\r\n    //   }\r\n    //   /* eslint-enable array-callback-return */\r\n\r\n    //   // courses.map(cou => {\r\n    //   //   cou.tasks.map(tas => {\r\n    //   //     tasksfulloption.push({ value: tas.id, label: tas.task_name });\r\n    //   //   });\r\n    //   // });\r\n\r\n    //   // if (minitask !== null) {\r\n    //   // const foundCourse = coursesoption.find(\r\n    //   //   element => element.value === minitask.course_id\r\n    //   // );\r\n    //   const foundTask = tasksfulloption.find(\r\n    //     element => element.value === minitask.task_id\r\n    //   );\r\n    //   // }\r\n\r\n    //   console.log(tasksfulloption);\r\n    //   console.log(foundTask);\r\n\r\n    //   this.setState({\r\n    //     courses: coursesFilter,\r\n    //     coursesOption: coursesoption,\r\n    //     // tasksOption: foundTask.tasksoption,\r\n    //     // courses_option_select: foundTask.courses,\r\n    //     task_option_select: foundTask\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // handle modal import variable\r\n  handleModalVariableOpen = () => {\r\n    this.setState({\r\n      isImportVariableOpen: !this.state.isImportVariableOpen,\r\n    })\r\n  }\r\n\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    //  let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    // const currentParams = getParams(location.pathname);\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n      }(${this.state.inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      input_list: this.state.inputList\r\n    };\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/minitasks/${this.props.minitasksId}`,\r\n        newMiniTask\r\n      )\r\n      .then(function (response) {\r\n        toast(\"Sửa bài thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n      }).catch(err => {\r\n        if (err !== undefined) {\r\n          this.setState({ isShowError: true, errContent: \"Làm ơn nhập đủ thông tin\" })\r\n        }\r\n      });;\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function (course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id,\r\n      courses_option_select: select_value,\r\n\r\n    });\r\n\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value,\r\n      task_option_select: select_value\r\n\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name, select_value);\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function (input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  renderTitle = (title) => {\r\n    return <Box my={1}>\r\n      <Typography style={{ fontSize: 15, fontWeight: 450 }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  handleShowError = () => {\r\n    this.setState({ isShowError: !this.state.isShowError });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { template_code, isImportVariableOpen, errContent, isShowError } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h2\">Sửa bài thực hành</Typography>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isShowError}\r\n            onClose={this.handleShowError}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                width: \"300px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: '8px'\r\n              }}\r\n            >\r\n              <Box p={2}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">{errContent}</Typography>\r\n                </Box>\r\n                <Box>\r\n                  {errContent}\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isImportVariableOpen}\r\n            onClose={this.handleModalVariableOpen}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={isImportVariableOpen}>\r\n\r\n              <div\r\n                style={{\r\n                  maxHeight: \"50vh\",\r\n                  height: \"1500px\",\r\n                  width: \"1000px\",\r\n                  position: \"relative\",\r\n                  overflowY: \"scroll\",\r\n                  overflowX: \"hidden\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <Box p={4}>\r\n                  <Box display=\"flex\">\r\n                    <Box>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                        className={classes.button}\r\n                        onClick={e => this.addInput(e)}\r\n                      >\r\n                        Thêm tham số\r\n                    </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                      <Typography variant=\"overline\">Số lượng: {this.state.inputList.length}</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <Slide in={true} direction=\"left\">\r\n                        <div key={index}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item container xs={12} sm={5} spacing={2}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Tên tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.input_name}\r\n                                  onChange={e =>\r\n                                    this.handleListInputNameChange(e, index)\r\n                                  } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} sm={5} spacing={1}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Kiểu tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <Select\r\n                                  options={options}\r\n                                  //defaultValue={options[0]}\r\n                                  onChange={select_value =>\r\n                                    this.handleListInputTypeChange(\r\n                                      select_value,\r\n                                      index\r\n                                    )\r\n                                  } // higher order function\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              container\r\n                              xs={12}\r\n                              sm={2}\r\n                              style={{ alignItems: \"flex-end\" }}\r\n                              justify=\"center\"\r\n                            >\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.button}\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    background: \"#ca0000\"\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.handleRemoveInput(index);\r\n                                  }}\r\n                                >\r\n                                  xóa\r\n                              </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                        </div>\r\n                      </Slide>\r\n                    );\r\n                  })}\r\n                </Box>{\" \"}\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ padding: \"8px\" }}>\r\n              {/* {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      //defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                      value={this.state.courses_option_select}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      //defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                      value={this.state.task_option_select}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên bài thực hành:\")}\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên hàm:\")}\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name_func}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Sổ đậu:\")}\r\n                  <input\r\n                    name=\"code_point\"\r\n                    type=\"number\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.code_point}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Độ khó:\")}\r\n                  <Select\r\n                    styles={selectStyles}\r\n                    options={optionsLevel}\r\n                    value={this.state.level_ref_select}\r\n                    defaultValue={optionsLevel[0]}\r\n                    ref={this.level_ref}\r\n                    name=\"level\"\r\n                    onChange={this.onLevelSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  {this.renderTitle(\"Kiểu trả về:\")}\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    value={this.state.output_type_func_select}\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  >\r\n                    {/* {options.map(val => (\r\n                      <MenuItem value={val.value}>{val.label}</MenuItem>\r\n                    ))} */}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box my={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                      className={classes.button}\r\n                      onClick={this.handleModalVariableOpen}\r\n                    >\r\n                      Thêm tham số\r\n                  </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\"\r\n              }}\r\n            >\r\n              {this.state.inputList.map((input, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Tên tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <input\r\n                            className=\"input-createminitask\"\r\n                            value={input.input_name}\r\n                            onChange={e =>\r\n                              this.handleListInputNameChange(e, index)\r\n                            } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Kiểu tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <Select\r\n                            options={options}\r\n                            //defaultValue={options[0]}\r\n                            onChange={select_value =>\r\n                              this.handleListInputTypeChange(\r\n                                select_value,\r\n                                index\r\n                              )\r\n                            } // higher order function\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={12}\r\n                        sm={2}\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                      >\r\n                        <Grid item>\r\n                          <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#ca0000\"\r\n                            }}\r\n                            onClick={() => {\r\n                              this.handleRemoveInput(index);\r\n                            }}\r\n                          >\r\n                            xóa\r\n                              </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </div> */}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n                template_code={template_code}\r\n              />\r\n            </div>\r\n            {/* <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  \r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item container xs={12} md={12}>\r\n              <Grid item xs={12} md={12}>\r\n                {this.renderTitle(\"Mô tả bài toán:\")}\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              {this.renderTitle(\"Tạo test:\")}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              md={6}\r\n              sm={6}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <Box mr={1} mt={2}>\r\n                      <div key={index0}>\r\n                        {\" \"}\r\n                        {/* Test {index0 + 1} */}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Input:\")}\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Output:\")}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{ color: \"white\", background: \"#ca0000\" }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveUnitTest(index0);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                            </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={6} sm={6}>\r\n              <Box my={2}>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                  />\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className={classes.button}\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    variant=\"contained\"\r\n                    onClick={e => this.addTest(e)}\r\n                  >\r\n                    Thêm test\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Thay đổi\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sm={6}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                \r\n              </Grid>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n          enableMultiContainer\r\n          containerId={\"B\"}\r\n          position={toast.POSITION.TOP_RIGHT}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MinitaskEdit);\r\n","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelMinitaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelMinitaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelMinitask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\nDatagrid, DeleteButton,\r\n  //  BooleanField,\r\n  EditButton, List, NumberField, TextField\r\n} from \"react-admin\";\r\nimport CreateMiniTaskBody from \"../../../profilePage/content/minitask/CreateMiniTaskBody\";\r\nimport MinitaskEdit from \"../../../profilePage/content/minitask/MinitaskEdit\";\r\n//import { permitted } from '../utils';\r\n//import ModelMinitaskEditToolbar from '../customActions/ModelMinitaskEditToolbar';\r\nimport ModelMinitaskFilter from \"../filters/ModelMinitaskFilter\";\r\n\r\n//import { getLocationHref } from '@sentry/utils';\r\n\r\nexport const ModelMinitaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Bài học\"\r\n    filters={<ModelMinitaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"mini_task_name\" sortable={false} />\r\n      <NumberField source=\"code_point\" sortable={false} />\r\n      <TextField source=\"output_type_func\" sortable={false} />\r\n      <TextField source=\"template_code\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelMinitaskCreate = props => (\r\n  <CreateMiniTaskBody/>\r\n  // <Create {...props} title=\"ModelMinitask Create\">\r\n  //   <SimpleForm redirect=\"show\">\r\n  //     <TextInput source=\"avatar\" />\r\n  //     <NumberInput source=\"code_point\" />\r\n  //     <TextInput source=\"level\" />\r\n  //     <TextInput source=\"mini_task_desc\" />\r\n  //     <TextInput source=\"mini_task_name\" />\r\n  //     <TextInput source=\"name_func\" />\r\n  //     <TextInput source=\"output_type_func\" />\r\n  //     <NumberInput source=\"point_unlock\" />\r\n  //     <TextInput source=\"status\" />\r\n  //     <TextInput source=\"task_id\" />\r\n  //     <TextInput source=\"template_code\" />\r\n  //     {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //     <TextInput source=\"unit_tests\" />\r\n  //     <BooleanInput source=\"vitri\" />\r\n  //   </SimpleForm>\r\n  // </Create>\r\n);\r\n\r\nexport const ModelMinitaskEdit = props => {\r\n  // console.log(props.id);\r\n  //window.location.replace(`/profile/minitasks/${props.id}/edit`)\r\n  return <MinitaskEdit minitasksId={props.id} />;\r\n  // return (\r\n  // <Edit  {...props} title=\"ModelMinitask Edit\">\r\n  //     <SimpleForm toolbar={<ModelMinitaskEditToolbar />}>\r\n  //         <TextInput                source=\"avatar\"            />\r\n  //         <NumberInput                source=\"code_point\"            />\r\n  //         {/* <BooleanInput                source=\"del\"            /> */}\r\n  //         <TextInput                source=\"id\"            />\r\n  //         <TextInput                source=\"level\"            />\r\n  //         <TextInput                source=\"mini_task_desc\"            />\r\n  //         <TextInput                source=\"mini_task_name\"            />\r\n  //         <TextInput                source=\"name_func\"            />\r\n  //         <TextInput                source=\"output_type_func\"            />\r\n  //         <NumberInput                source=\"point_unlock\"            />\r\n  //         <TextInput                source=\"status\"            />\r\n  //         <TextInput                source=\"task_id\"            />\r\n  //         <TextInput                source=\"template_code\"            />\r\n  //         {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //         <TextInput                source=\"unit_tests\"            />\r\n  //         <BooleanInput                source=\"vitri\"            />\r\n  //     </SimpleForm></Edit>);\r\n};\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelTaskEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelTaskEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelTaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelTaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelTask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelTaskEditToolbar from \"../customActions/ModelTaskEditToolbar\";\r\n\r\nimport ModelTaskFilter from \"../filters/ModelTaskFilter\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nexport const ModelTaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề con\"\r\n    filters={<ModelTaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"task_name\" sortable={false} />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <TextField                source=\"course_id\"                sortable={false}            /> */}\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"minitasks\"                sortable={false}            /> */}\r\n      {/* <TextField                source=\"timestamp\"                sortable={false}            /> */}\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nclass ModelTaskCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề con\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" />\r\n          {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n              <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n            )}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelTaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true,\r\n      minitaskBank: [],\r\n      open: false,\r\n      minitaskDesc: \"\",\r\n      fontSize: \"\",\r\n      minitaskListFromBank: [],\r\n      errorMessage: \"\",\r\n      openErr: false,\r\n      task_minitask: [],\r\n      temp_task_minitask: [],\r\n      sortByLevel: 40,\r\n      tempMinitaskList: [],\r\n      sliderValue: [0, 200],\r\n      isOpenMessage: false,\r\n      importedMinitask: [],\r\n      task: {},\r\n      tasks: [],\r\n      isLoadingImportTask: false,\r\n    };\r\n\r\n    this.getMinitaskFromBank = this.getMinitaskFromBank.bind(this);\r\n    this.removeMinitask = this.removeMinitask.bind(this);\r\n    this.isDuplicateMinitask = this.isDuplicateMinitask.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get(`http://localhost:8081/api/v1/auth/tasks/${this.props.id}`).then(res => {\r\n      console.log(res.data);\r\n      this.setState({ task: res.data })\r\n    });\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n    axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n      this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n    });\r\n    axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n      this.setState({ task_minitask: res.data, temp_task_minitask: res.data });\r\n    });\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/auth/courses/${this.state.task.course_id}/tasks`\r\n      )\r\n      .then(res => {\r\n        const tasks = res.data;\r\n        let tasks_reverse = tasks.reverse();\r\n        this.setState({ tasks: tasks_reverse });\r\n      });\r\n  }\r\n\r\n  getMinitaskDesc = (id) => {\r\n    axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n      console.log(res.data.mini_task_desc);\r\n      this.setState({\r\n        minitaskDesc: res.data.mini_task_desc,\r\n        open: true\r\n      });\r\n    })\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  closeModalError() {\r\n    this.setState({\r\n      openErr: false\r\n    });\r\n  }\r\n\r\n  isDuplicateMinitask(id) {\r\n    for (var i = 0; i < this.state.temp_task_minitask.length; i++) {\r\n      if (this.state.temp_task_minitask[i].id === id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkDuplicateMinitask = (minitask_id) => {\r\n    const task_list = this.state.tasks;\r\n    for (var i = 0; i < task_list.length; i++) {\r\n      for (var j = 0; j < task_list[i].minitasks.length; j++) {\r\n        if (task_list[i].minitasks[j].id === minitask_id) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getMinitaskFromBank(minitask) {\r\n    if (this.isDuplicateMinitask(minitask.id) &&\r\n      this.checkDuplicateMinitask(minitask.id)) {\r\n      const temp_task_minitask = this.state.temp_task_minitask;\r\n      minitask[\"isNew\"] = true;\r\n      temp_task_minitask.push(minitask);\r\n      this.setState({\r\n        temp_task_minitask\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        errorMessage: \"This minitask already exists\",\r\n        openErr: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeMinitask(id) {\r\n    const temp_task_minitask = this.state.temp_task_minitask;\r\n    var i = -1;\r\n\r\n    temp_task_minitask.forEach((minitask, index) => {\r\n      if (id.isNew === true) {\r\n        if (minitask.id === id.id) {\r\n          console.log(minitask.id);\r\n          i = index;\r\n        }\r\n      }\r\n      else if (id.isNew === undefined && id.id === minitask.id) {\r\n        this.setState({ isLoadingImportTask: true });\r\n        axios.delete(`http://localhost:8081/api/v1/curd/task_minitask/${this.props.id}/${id.id}/${this.state.task.course_id}`).then(res => {\r\n          axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n            this.setState({ isLoadingImportTask: false });\r\n            axios\r\n              .get(\r\n                `http://localhost:8081/api/v1/auth/courses/${this.state.task.course_id}/tasks`\r\n              )\r\n              .then(res => {\r\n                const tasks = res.data;\r\n                let tasks_reverse = tasks.reverse();\r\n                this.setState({ tasks: tasks_reverse });\r\n              });\r\n            this.setState({\r\n              task_minitask: res.data,\r\n              temp_task_minitask: res.data,\r\n              errorMessage: \"Delete Successfully\",\r\n              openErr: true,\r\n            });\r\n          });\r\n        }).catch(err => {\r\n          console.log(err);\r\n          // axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n          //   console.log(res.data);\r\n          //   this.setState({\r\n          //     task_minitask: res.data,\r\n          //     temp_task_minitask: res.data,\r\n          //     errorMessage: \"Delete Successfully\",\r\n          //     openErr: true\r\n          //   });\r\n          // });\r\n        });\r\n      }\r\n    });\r\n    console.log(i);\r\n    if (i !== -1) {\r\n      temp_task_minitask.splice(i, 1);\r\n      this.setState({ temp_task_minitask });\r\n    }\r\n  }\r\n\r\n  renderLevelMinitaskChip(minitask) {\r\n    // alert(minitask);\r\n    if (minitask === \"easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Easy\"}\r\n        />\r\n      );\r\n    } else if (minitask === \"medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Medium\"}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#CB3837\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Hard\"}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    if (keyword === \"\") {\r\n      axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n      });\r\n    }\r\n  }\r\n\r\n  checkFilterCondition = (minitask, sortByLevel) => {\r\n    const code_point_Range = this.state.sliderValue;\r\n    if (sortByLevel === \"all\") {\r\n      if (minitask.code_point >= code_point_Range[0] &&\r\n        minitask.code_point <= code_point_Range[1]) {\r\n        return true;\r\n      }\r\n    }\r\n    else if (minitask.level === sortByLevel &&\r\n      minitask.code_point >= code_point_Range[0] &&\r\n      minitask.code_point <= code_point_Range[1]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onChangeSort = (event) => {\r\n    this.setState({\r\n      tempMinitaskList: []\r\n    }, () => {\r\n      if (event.target.value === 10) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 20) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 30) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 40) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeSlider = (event, value) => {\r\n    this.setState({\r\n      sliderValue: value,\r\n    }, () => {\r\n      const level = this.state.sortByLevel;\r\n      if (level === 10) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 20) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 30) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 40) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveMinitaskList = () => {\r\n    const minitaskList = this.state.task_minitask;\r\n    minitaskList.forEach(e => {\r\n      if (e.isNew) {\r\n        var obj = {};\r\n        obj[\"task_id\"] = this.props.id;\r\n        obj[\"mini_task_id\"] = e.id\r\n        axios.post(\"http://localhost:8081/createTaskMinTask\", obj).then(res => {\r\n          this.setState({ isLoadingImportTask: true });\r\n          axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n            this.setState({\r\n              task_minitask: res.data,\r\n              temp_task_minitask: res.data,\r\n              errorMessage: \"Import Successfully\",\r\n              openErr: true,\r\n              isLoadingImportTask: false,\r\n            });\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid xs={4} item>\r\n                <Edit {...this.props} title=\"Sửa Chủ đề con\">\r\n                  <SimpleForm toolbar={<ModelTaskEditToolbar />}>\r\n                    <TextInput resettable source=\"id\" disabled />\r\n                    <TextInput source=\"task_name\" />\r\n                    <TextInput source=\"background_image\" />\r\n                    {this.state.isLoading ? (\r\n                      <Skeleton />\r\n                    ) : (\r\n                        <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n                      )}\r\n                  </SimpleForm>\r\n                </Edit>\r\n              </Grid>\r\n              <Grid xs={8} item>\r\n                <Paper >\r\n                  <Box height={375} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                    <Box display=\"flex\">\r\n                      <Box p={1} flexGrow={1}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                          Task's Minitask ({this.state.task_minitask.length})\r\n                      </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        {this.state.temp_task_minitask.length > 0 ?\r\n                          <Button variant=\"contained\" color=\"#b39ddb\" onClick={this.saveMinitaskList}>Import</Button> :\r\n                          \"\"\r\n                        }\r\n                      </Box>\r\n                    </Box>\r\n                    {this.state.temp_task_minitask.length > 0 ?\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '300px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow style={{\r\n                                backgroundColor: \"#ffred5f5\",\r\n                                height: \"5px\"\r\n                              }}>\r\n                                <TableCell>Minitask name</TableCell>\r\n                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                <TableCell align=\"right\">Code point</TableCell>\r\n                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                <TableCell align=\"right\">Level</TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.temp_task_minitask.map(row => (\r\n                                <Silde in={true} direction=\"up\">\r\n                                  <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {row.mini_task_name}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                    <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                    {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                    <TableCell align=\"right\">\r\n                                      <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                        <div style={{ marginLeft: 10 }}>\r\n                                          {this.renderLevelMinitaskChip(row.level)}\r\n                                        </div>\r\n                                      </Tooltip>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Remove</Button>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </Silde>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                      :\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        There are no minitask.\r\n                    </Typography>}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={3}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={2}>\r\n                <Grid xs={12} item>\r\n                  <Paper >\r\n                    <Box height={470} bgcolor=\"#ede7f6\" color=\"black\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                      <Typography variant=\"h5\" color=\"black\" gutterBottom>\r\n                        Minitask bank ({this.state.tempMinitaskList.length})\r\n                      </Typography>\r\n                      <Box my={1}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={2}>\r\n                              <Grid xs={2} item>\r\n                                <Paper component=\"form\">\r\n                                  <IconButton aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                  </IconButton>\r\n                                  <InputBase\r\n                                    placeholder=\"Search\"\r\n                                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                                    onChange={this.onChangeSearch}\r\n                                  />\r\n                                  <Divider orientation=\"vertical\" />\r\n                                </Paper>\r\n                              </Grid>\r\n                              <Grid xs={1} bgcolor=\"white\" item>\r\n                                <FormControl fullWidth={true}>\r\n                                  <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={this.state.sortByLevel}\r\n                                    onChange={this.onChangeSort}\r\n                                  >\r\n                                    <MenuItem value={10}>Easy</MenuItem>\r\n                                    <MenuItem value={20}>Medium</MenuItem>\r\n                                    <MenuItem value={30}>Hard</MenuItem>\r\n                                    <MenuItem value={40}>All</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid>\r\n                              <Grid xs={2} bgcolor=\"white\" item>\r\n                                <Typography id=\"range-slider\" gutterBottom>\r\n                                  Code point\r\n                              </Typography>\r\n                                <Slider\r\n                                  value={this.state.sliderValue}\r\n                                  onChange={this.onChangeSlider}\r\n                                  valueLabelDisplay=\"auto\"\r\n                                  aria-labelledby=\"range-slider\"\r\n                                  min={0}\r\n                                  max={200}\r\n                                />\r\n                              </Grid>\r\n                              <Grid xs={7} bgcolor=\"white\" item></Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Minitask name</TableCell>\r\n                                <TableCell align=\"right\">Code point</TableCell>\r\n                                <TableCell align=\"right\">Level</TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                                <TableCell></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.tempMinitaskList.map(row => (\r\n                                <TableRow key={row.task_name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.mini_task_name}\r\n                                  </TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                  <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                  <TableCell align=\"right\">\r\n                                    <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                      <div style={{ marginLeft: 10 }}>\r\n                                        {/* {row.level} */}\r\n                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                      </div>\r\n                                    </Tooltip>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Button\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      startIcon={<ArrowUpwardIcon />}\r\n                                      aria-label=\"move selected right\"\r\n                                      onClick={() => this.getMinitaskFromBank(row)}\r\n                                    >\r\n                                      {/* &lt; */}\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n            <Box p={2}>\r\n              <MDReactComponent text={this.state.minitaskDesc} />\r\n            </Box>\r\n          </Modal>\r\n          <Slide in={this.state.openErr} direction=\"up\">\r\n            <Modal visible={this.state.openErr} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n              <Box p={2}>\r\n                <Typography variant=\"h5\" color=\"error\" gutterBottom>\r\n                  Thông báo\r\n                </Typography>\r\n                <Box my={3}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {this.state.errorMessage}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Modal>\r\n          </Slide>\r\n        </React.Fragment>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelTaskCreate, ModelTaskEdit };\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCertEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCertEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCertFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCertFilter;\r\n/** End of Generated Code **/","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst ReviewField = ({ source, record = {} }) => {\r\n  const [reviewStatus, setReviewStatus] = useState(record[source]);\r\n\r\n  if (reviewStatus !== \"Peding\") {\r\n    if (record[source] === \"Peding\") return <span>Đang xét duyệt</span>;\r\n    if (record[source] === \"Active\") return <span>Đồng ý</span>;\r\n    if (record[source] === \"Inactive\") return <span>Từ chối</span>;\r\n\r\n    return <span>{record[source]}</span>;\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      {\" \"}\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"small outlined button group\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          var recordNew = record;\r\n          recordNew.agree = true;\r\n          recordNew.status = \"Active\";\r\n\r\n          axios\r\n            .put(\r\n              `http://localhost:8081/api/v1/curd/certs/${recordNew.id}`,\r\n              recordNew\r\n            )\r\n            .then(res => {\r\n              setReviewStatus(res.status);\r\n            });\r\n        }}\r\n      >\r\n        Đồng ý\r\n      </Button>\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"small outlined button group\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n            var recordNew = record;\r\n            recordNew.agree = false;\r\n            recordNew.status = \"Inactive\";\r\n  \r\n            axios\r\n              .put(\r\n                `http://localhost:8081/api/v1/curd/certs/${recordNew.id}`,\r\n                recordNew\r\n              )\r\n              .then(res => {\r\n                setReviewStatus(res.status);\r\n              });\r\n          }}\r\n        >\r\n        Từ chối\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nReviewField.propTypes = {\r\n  label: PropTypes.string,\r\n  record: PropTypes.object,\r\n  source: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ReviewField;\r\n","/**\r\n * Generated ModelCert.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MUITextField from \"@material-ui/core/TextField\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DeleteButton,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  List,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  TextField,\r\n  TextInput,\r\n  // BooleanField,\r\n  // FunctionField,\r\n  // SelectField,\r\n  SelectInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\nimport ModelCertEditToolbar from \"../customActions/ModelCertEditToolbar\";\r\nimport ModelCertFilter from \"../filters/ModelCertFilter\";\r\n\r\nimport ReviewField from \"../fields/ReviewField\";\r\n\r\n// const choices = [\r\n//   { _id: \"Active\", status: \"Đồng ý\" },\r\n//   { _id: \"Peding\", status: \"Đang xét duyệt\" },\r\n//   { _id: \"Inactive\", status: \"Từ chối\" }\r\n// ];\r\n\r\nconst choicesCourse = [\r\n  { id: \"Active\", name: \"Đồng ý\" },\r\n  { id: \"Peding\", name: \"Đang xét duyệt\" },\r\n  { id: \"Inactive\", name: \"Từ chối\" }\r\n];\r\n\r\nclass ModelCertList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      name_site: \"hocode\",\r\n      review_point: 0,\r\n      electronic_signature: \"\",\r\n      isLoading: true,\r\n      data: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/curd/configs/byname/${this.state.name_site}`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = event => {\r\n    var xName = event.target.id;\r\n\r\n    this.setState({ [xName]: event.target.value });\r\n  };\r\n\r\n  onChangeImage = ({ target }) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(target.files[0]);\r\n    fileReader.onload = e => {\r\n      this.setState({ electronic_signature: e.target.result });\r\n    };\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    //Make a network call somewhere\r\n    event.preventDefault();\r\n\r\n    var dataUpdate = this.state.data;\r\n    dataUpdate.name = this.state.name;\r\n    dataUpdate.name_site = this.state.name_site;\r\n    dataUpdate.review_point = parseInt(this.state.review_point);\r\n    dataUpdate.electronic_signature = this.state.electronic_signature;\r\n\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .post(`http://localhost:8081/api/v1/curd/configs`, dataUpdate)\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // const matches = useMediaQuery('(min-width:600px)');\r\n    return (\r\n      <>\r\n        <Grid container spacing={3} className=\"configFormContainer\">\r\n          <Grid item xs={3} className=\"configFormContainerItem\">\r\n            {/* <span>{`(min-width:600px) matches: ${matches}`}</span> */}\r\n            <Card style={{ padding: 12 }}>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {/* <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <MUITextField\r\n                    id=\"name_site\"\r\n                    label=\"Tên Cài Đặt\"\r\n                    margin=\"normal\"\r\n                    defaultValue={this.state.name_site}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled\r\n                  />\r\n                )}\r\n              </div> */}\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <MUITextField\r\n                      id=\"name\"\r\n                      label=\"Tên Chứng Chỉ\"\r\n                      margin=\"normal\"\r\n                      defaultValue={this.state.name}\r\n                      onChange={this.handleChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <MUITextField\r\n                      id=\"review_point\"\r\n                      label=\"Đậu Tốt Nghiệp\"\r\n                      margin=\"normal\"\r\n                      type=\"number\"\r\n                      defaultValue={this.state.review_point}\r\n                      onChange={this.handleChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <Button\r\n                      className=\"MuiFormControl-marginNormal\"\r\n                      variant=\"contained\"\r\n                      component=\"label\"\r\n                      fullWidth\r\n                    >\r\n                      Tải Chữ Ký\r\n                      <input\r\n                        id=\"electronic_signature\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.onChangeImage}\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={120} />\r\n                  ) : (\r\n                    <Avatar\r\n                      style={{\r\n                        width: \"auto\",\r\n                        height: \"auto\"\r\n                      }}\r\n                      className=\"MuiFormControl-marginNormal\"\r\n                      src={\r\n                        this.state.electronic_signature\r\n                          ? this.state.electronic_signature\r\n                          : \"https://icon-library.net/images/no-image-available-icon/no-image-available-icon-6.jpg\"\r\n                      }\r\n                      variant=\"rounded\"\r\n                    ></Avatar>\r\n                  )}\r\n                </div>\r\n                {/* <TextField\r\n          id=\"standard-basic\"\r\n          className={classes.textField}\r\n          label=\"Standard\"\r\n          margin=\"normal\"\r\n        /> */}\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"MuiFormControl-marginNormal\"\r\n                  style={{ backgroundColor: \"#3f51b5\", color: \"#fff\" }}\r\n                  fullWidth\r\n                >\r\n                  Lưu cài đặt\r\n                </Button>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* <Button>Lưu cài đặt</Button> */}\r\n          <Grid item xs={9} className=\"configFormContainerItem\">\r\n            <List\r\n              {...this.props}\r\n              title=\"Danh sách Chứng chỉ\"\r\n              filters={<ModelCertFilter />}\r\n              bulkActionButtons={false}\r\n            >\r\n              <Datagrid>\r\n                <TextField source=\"user_id\" sortable={false} />\r\n                {/* <TextField source=\"status\" sortable={false} /> */}\r\n                {/* <SelectField\r\n                  source=\"status\"\r\n                  choices={choices}\r\n                  optionText=\"status\"\r\n                  optionValue=\"_id\"\r\n                /> */}\r\n\r\n                {/* <Button size=\"small\"  variant=\"contained\" color=\"primary\">\r\n  Đồng ý\r\n</Button>\r\n<Button size=\"small\"  variant=\"contained\" color=\"secondary\">\r\n  Từ chối\r\n</Button> */}\r\n\r\n                <ReviewField source=\"status\" />\r\n                <TextField source=\"timestamp\" sortable={false} />\r\n                {/* <BooleanField source=\"agree\" /> */}\r\n\r\n                {/* <FunctionField\r\n                label=\"Author\"\r\n                sortBy=\"last_name\"\r\n                render={record => {\r\n                  console.log(record);\r\n                  return  `${record.agree} ${record.status}`;\r\n                }}\r\n            /> */}\r\n\r\n                <EditButton />\r\n                <DeleteButton />\r\n              </Datagrid>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // var choicesCourse = this.state.course.map(val => {\r\n    //   var rObj = {};\r\n    //   rObj[\"id\"] = val.id;\r\n    //   rObj[\"name\"] = val.course_name;\r\n    //   return rObj;\r\n    // });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chứng chỉ\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"user_id\" />\r\n          <SelectInput source=\"status\" choices={choicesCourse} />\r\n\r\n          {/* <TextInput source=\"time\" /> */}\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // var choicesCourse = this.state.course.map(val => {\r\n    //   var rObj = {};\r\n    //   rObj[\"id\"] = val.id;\r\n    //   rObj[\"name\"] = val.course_name;\r\n    //   return rObj;\r\n    // });\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chứng chỉ\">\r\n        <SimpleForm toolbar={<ModelCertEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          {/* <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" /> */}\r\n          <TextInput source=\"user_id\" />\r\n\r\n          <SelectInput source=\"status\" choices={choicesCourse} />\r\n\r\n          {/* <TextInput source=\"time\" /> */}\r\n\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelCertList, ModelCertCreate, ModelCertEdit };\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelTaskEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelTaskEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelTaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelTaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelUser.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\nCreate, Datagrid, DeleteButton, Edit,\r\n  //  BooleanField,\r\n  EditButton, ImageField, List, NumberField, SelectInput, NumberInput,\r\n  //   BooleanInput,\r\n  SimpleForm, TextField, TextInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\nimport ModelUserEditToolbar from \"../customActions/ModelUserEditToolbar\";\r\nimport ModelUserFilter from \"../filters/ModelUserFilter\";\r\n\r\n\r\n\r\nexport const ModelUserList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Người dùng\"\r\n    filters={<ModelUserFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"email\" sortable={false} />\r\n      <TextField source=\"firstname\" sortable={false} />\r\n      <TextField source=\"lastname\" sortable={false} />\r\n      <NumberField source=\"codepoint\" sortable={false} />\r\n      <TextField source=\"role\" sortable={false} />\r\n      {/* <TextField source=\"timestamp\" sortable={false} /> */}\r\n      <ImageField className=\"thumbNailView\" source=\"avatar\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nclass ModelUserCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = [\r\n      {\r\n        id: \"user\",\r\n        name: \"Sinh Viên\"\r\n      },\r\n\r\n      {\r\n        id: \"mod\",\r\n        name: \"Giáo Viên\"\r\n      },\r\n      {\r\n        id: \"admin\",\r\n        name: \"Quản Trị Viên\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Người dùng mới\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"email\" />\r\n          <TextInput source=\"password\" />\r\n          <TextInput source=\"firstname\" />\r\n          <TextInput source=\"lastname\" />\r\n          <NumberInput source=\"codepoint\" />\r\n          <TextInput source=\"avatar\" />\r\n          <SelectInput source=\"role\" choices={choicesCourse} />\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelUserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = [\r\n      {\r\n        id: \"user\",\r\n        name: \"Sinh Viên\"\r\n      },\r\n\r\n      {\r\n        id: \"mod\",\r\n        name: \"Giáo Viên\"\r\n      },\r\n      {\r\n        id: \"admin\",\r\n        name: \"Quản Trị Viên\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Người Dùng\">\r\n        <SimpleForm toolbar={<ModelUserEditToolbar />}>\r\n          <TextInput source=\"email\" />\r\n          <TextInput source=\"password\" />\r\n          <TextInput source=\"firstname\" />\r\n          <TextInput source=\"lastname\" />\r\n          <NumberInput source=\"codepoint\" />\r\n          <TextInput source=\"avatar\" />\r\n          {/* <ImageInput source=\"avatar_input\" label=\"Avatar User\" accept=\"image/*\" onUpload={()=> console.log(\"onUpload\")}>\r\n            <ImageField source=\"src\" title=\"title\" />\r\n          </ImageInput> */}\r\n\r\n          <SelectInput source=\"role\" choices={choicesCourse} />\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelUserCreate, ModelUserEdit };\r\n\r\n/** End of Generated Code **/\r\n","import React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelFightEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelFightEditToolbar;","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelFightFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelFightFilter;\r\n/** End of Generated Code **/","import React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  DateField,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateTimeInput,\r\n  NumberInput,\r\n  ImageField,\r\n  // SelectInput\r\n} from \"react-admin\";\r\n// import Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\nimport ModelFightEditToolbar from \"../customActions/ModelFightEditToolbar\";\r\n\r\nimport ModelFightFilter from \"../filters/ModelFightFilter\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\n// import Tooltip from \"@material-ui/core/Tooltip\";\r\n// import Chip from \"@material-ui/core/Chip\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// import Slider from '@material-ui/core/Slider';\r\n// import FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nexport const ModelFightList = props => (\r\n    <List\r\n        {...props}\r\n        title=\"Danh sách các cuộc thi\"\r\n        filters={<ModelFightFilter/>}\r\n        bulkActionButtons={false}\r\n    >\r\n        <Datagrid>\r\n        {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n        <TextField source=\"fight_name\" sortable={false} />\r\n        <ImageField\r\n            className=\"thumbNailView\"\r\n            source=\"backgroud_img\"\r\n            sortable={false}\r\n        />\r\n        <DateField source=\"time_start\" />\r\n        <DateField source=\"time_end\" />\r\n        <EditButton />\r\n        <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst validateFightCreate = (values) => {\r\n    const errors = {};\r\n    if (!values.fight_name) {\r\n      errors.fight_name = ['The fight name is required'];\r\n    }\r\n    if (!values.backgroud_img) {\r\n      errors.backgroud_img = ['The background image is required'];\r\n    }\r\n    if (!values.time_start) {\r\n      errors.time_start = ['The start time is required'];\r\n    }\r\n    if (!values.time_end) {\r\n      errors.end_time = ['The end time is required'];\r\n    }\r\n    if (!values.numbers_std) {\r\n        errors.numbers_std = ['The numbers student is required'];\r\n      }\r\n    if (values.time_end - values.time_start <= 0) {\r\n      errors.end_time = ['The end time must be longer than start time']\r\n    }\r\n    return errors\r\n  };\r\nclass ModelFightCreate extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = ({\r\n      })\r\n    }\r\n  \r\n    componentDidMount() {\r\n     \r\n    }\r\n    render() {\r\n      return (\r\n        <Create {...this.props} title=\"Tạo Cuộc Thi\">\r\n          <SimpleForm redirect=\"show\" validate={validateFightCreate} >\r\n            <TextInput resettable source=\"fight_name\" />\r\n            <TextInput resettable source=\"backgroud_img\" />\r\n            <TextInput resettable multiline source=\"fight_desc\" />\r\n            <NumberInput label=\"Số lượng thí sinh\" source=\"numbers_std\"/>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <DateTimeInput\r\n                source=\"time_start\"\r\n                label=\"Start time\"\r\n                options={{ format: 'MM/DD/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n                required\r\n              />\r\n              <DateTimeInput\r\n                source=\"time_end\"\r\n                label=\"End time\"\r\n                options={{ format: 'MM/DD/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </SimpleForm>\r\n        </Create>\r\n      )\r\n    }\r\n}\r\n\r\nconst required = (message = 'Required') =>\r\n  value => value ? undefined : message;\r\n\r\nconst endDateValidation = (value, allValues) => {\r\n  if (new Date(value) - new Date(allValues.time_start) <= 0 &&\r\n    new Date(value) - new Date()) {\r\n    return 'End date must be longer than start date and current';\r\n  }\r\n}\r\n\r\n// const startDateValidation = (value, allValues) => {\r\n//   if (new Date(value) - new Date() <= 0) {\r\n//     return 'End date must be longer than current';\r\n//   }\r\n// }\r\n\r\nclass ModelFightEdit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      minitask : [],\r\n      isLoading: true,\r\n      tempMinitaskList: [],\r\n      open: false,\r\n      fight: {},\r\n      minitaskDesc: \"\",\r\n      errorMessage: \"\",\r\n      openErr: false, \r\n      MinitaskListID : []\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n      this.setState({ tempMinitaskList: res.data, isLoading: false });\r\n      console.log(res.data);\r\n    });\r\n\r\n    axios \r\n    .get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({minitask: res.data});\r\n    });\r\n   \r\n  }\r\n\r\n  getMinitaskDesc = (id) => {\r\n    axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n      console.log(res.data.mini_task_desc);\r\n      this.setState({\r\n        minitaskDesc: res.data.mini_task_desc,\r\n        open: true\r\n      });\r\n    })\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  closeModalError() {\r\n    this.setState({\r\n      openErr: false\r\n    });\r\n  }\r\n  \r\n  isDuplicateMinitask(id) {\r\n    for (var i = 0; i < this.state.minitask.length; i++) {\r\n      if (this.state.minitask[i].id === id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  getMinitaskFromBank(task) {\r\n    if (this.isDuplicateMinitask(task.id)) {\r\n      // const temp_task_minitask = this.state.minitask;\r\n      var data = {\r\n        fight_id: this.props.id,\r\n        minitask_id: task.id\r\n      }\r\n      axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, data)\r\n            .then(res => {\r\n              axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n                    .then(res => {\r\n                      this.setState({\r\n                        minitask: res.data,\r\n                        openErr: true,\r\n                        errorMessage: \"Added a minitask\"\r\n                      })\r\n                    });\r\n            });\r\n      \r\n    }\r\n    else {\r\n      this.setState({\r\n        errorMessage: \"This minitask already exists\",\r\n        openErr: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeMinitask(id) {\r\n    // const temp_task_minitask = this.state.minitask;\r\n    axios.delete(`http://localhost:8081/api/v1/curd/delminitask/${this.props.id}/${id}`)\r\n         .then(res => {\r\n           axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n                .then( res => {\r\n                  this.setState({\r\n                    minitask: res.data,\r\n                    openErr: true,\r\n                    errorMessage: \" Deleted Successfully\"\r\n                  })\r\n                });\r\n         });\r\n    // temp_task_minitask.splice(id, 1); \r\n    // console.log(temp_task_minitask);\r\n    \r\n    console.log(this.state.minitask);\r\n  }\r\n\r\n  onChangeSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    if (keyword === \"\") {\r\n      axios.get(`http://localhost:8081/api/v1/curd/minitasks`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({  isLoading: false, tempMinitaskList: res.data });\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ isLoading: false, tempMinitaskList: res.data })\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n\r\n            <Grid xs={4} item>\r\n              <Edit {...this.props} title=\"Sửa Cuộc Thi\">\r\n                <SimpleForm toolbar={<ModelFightEditToolbar />}>\r\n                  <TextInput resettable source=\"fight_name\" />\r\n                  <TextInput resettable source=\"backgroud_img\" />\r\n                  <TextInput resettable multiline source=\"fight_desc\" />\r\n                  <NumberInput label=\"Số lượng thí sinh\" source=\"numbers_std\"/>\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <DateTimeInput\r\n                      source=\"time_start\"\r\n                      label=\"Start time\"\r\n                      options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n                      validate={[required()]}\r\n                    />\r\n                    <DateTimeInput\r\n                      source=\"time_end\"\r\n                      label=\"End time\"\r\n                      options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n                      validate={[required(), endDateValidation]}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </SimpleForm>\r\n              </Edit>\r\n            </Grid>\r\n\r\n            <Grid item xs={8}>\r\n              <Paper >\r\n                <Box height={375} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                  <Box display=\"flex\">\r\n                        <Box p={1} flexGrow={1}>\r\n                          <Typography variant=\"h5\" gutterBottom>\r\n                            Task's Minitask ({this.state.minitask.length})\r\n                        </Typography>\r\n                        </Box>                       \r\n                      </Box>\r\n                      {this.state.minitask.length > 0 ?\r\n                  <Card>\r\n                    <div style={{ overflow: 'auto', height: '300px' }}>\r\n                      <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                          <TableHead>\r\n                            <TableRow style={{\r\n                              backgroundColor: \"#ffred5f5\",\r\n                              height: \"5px\"\r\n                            }}>\r\n                              <TableCell>Minitask name</TableCell>                             \r\n                              <TableCell align=\"right\">Code point</TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {this.state.minitask.map(row => (\r\n                              <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.mini_task_name}\r\n                                </TableCell>\r\n                                {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}                              \r\n                                <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  <Button onClick={() => this.removeMinitask(row.id)} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Remove</Button>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                  </Card>\r\n                        :\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                          There are no minitask.\r\n                      </Typography>}\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={3}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={2}>\r\n                <Grid xs={12} item>\r\n                  <Paper >\r\n                    <Box height={470} bgcolor=\"#ede7f6\" color=\"black\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                      <Typography variant=\"h5\" color=\"black\" gutterBottom>\r\n                        Minitask bank ({this.state.tempMinitaskList.length})\r\n                    </Typography>\r\n                      <Box my={1}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={2}>\r\n                              <Grid xs={6} item>\r\n                                <Paper component=\"form\">\r\n                                  <IconButton aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                  </IconButton>\r\n                                  <InputBase\r\n                                    placeholder=\"Search minitask...\"\r\n                                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                                    onChange={this.onChangeSearch}\r\n                                  />\r\n                                  <Divider orientation=\"vertical\" />\r\n                                </Paper>\r\n                              </Grid>\r\n                              {/* <Grid xs={1} bgcolor=\"white\" item>\r\n                                <FormControl fullWidth={true}>\r\n                                  <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={this.state.sortByLevel}\r\n                                    onChange={this.onChangeSort}\r\n                                  >\r\n                                    <MenuItem value={10}>Easy</MenuItem>\r\n                                    <MenuItem value={20}>Medium</MenuItem>\r\n                                    <MenuItem value={30}>Hard</MenuItem>\r\n                                    <MenuItem value={40}>All</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid> */}\r\n                              {/* <Grid xs={2} bgcolor=\"white\" item>\r\n                                <Typography id=\"range-slider\" gutterBottom>\r\n                                  Code point\r\n                              </Typography>\r\n                                <Slider\r\n                                  value={this.state.sliderValue}\r\n                                  onChange={this.onChangeSlider}\r\n                                  valueLabelDisplay=\"auto\"\r\n                                  aria-labelledby=\"range-slider\"\r\n                                  min={0}\r\n                                  max={200}\r\n                                />\r\n                              </Grid> */}\r\n                              <Grid xs={6} bgcolor=\"white\" item></Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell style={{fontSize:16, color: \"red\", fontWeight:700}}>Minitask name</TableCell>\r\n                                <TableCell style={{fontSize:16, color: \"red\", fontWeight:700}} align=\"right\">Code point</TableCell>                              \r\n                                <TableCell align=\"right\"></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.tempMinitaskList.map(row => (\r\n                                <TableRow key={row.task_name}>\r\n                                  <TableCell align=\"center\">\r\n                                    <Button\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      startIcon={<KeyboardBackspaceIcon />}\r\n                                      aria-label=\"move selected right\"\r\n                                      onClick={() => this.getMinitaskFromBank(row)}\r\n                                    >\r\n                                      {/* &lt; */}\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.mini_task_name}\r\n                                  </TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                  <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                  <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n            <Box p={2}>\r\n              <MDReactComponent text={this.state.minitaskDesc} />\r\n            </Box>\r\n          </Modal>\r\n          <Slide in={this.state.openErr} direction=\"up\">\r\n            <Modal visible={this.state.openErr} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n              <Box p={2}>\r\n                <Typography variant=\"h5\" color=\"error\" gutterBottom>\r\n                  Thông báo\r\n                </Typography>\r\n                <Box my={3}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {this.state.errorMessage}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Modal>\r\n          </Slide>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\nexport {  ModelFightCreate, ModelFightEdit };","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      console.log(action.payload);\r\n      console.log(\"SET\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      }; \r\n    default:\r\n      console.log(state);\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  avatar: \"\",\r\n  codepoint: 0,\r\n  email: \"\",\r\n  firstname: \"\",\r\n  id: \"\",\r\n  lastname: \"\",\r\n  isUserLoading:false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_CODEPOINT:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isUserLoading:false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case CHANGE_USER_INFO:\r\n      return {\r\n        ...state,\r\n        avatar:action.payload.avatar,\r\n        codepoint:action.payload.codepoint,\r\n        email:action.payload.email,\r\n        firstname:action.payload.firstname,\r\n        lastname:action.payload.lastname,\r\n        isUserLoading: false\r\n      };\r\n      case SET_UNDEFINED_NEXT_MINITASK:\r\n          return {\r\n            ...state,\r\n            next_minitask: action.payload\r\n          }; \r\n      case CHANGE_LOADING:\r\n        return {\r\n          ...state,\r\n          isUserLoading: action.payload\r\n        }; \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer, //auth la state de minh goi o cac component can dung : state.auth\r\n  errors: errorReducer,\r\n  user: userReducer\r\n});\r\n","// import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport vietnameseMessages from \"ra-language-vietnamese\";\r\n// import defaultMessages from 'ra-language-english';\r\nimport {\r\n  adminReducer,\r\n  adminSaga,\r\n  formMiddleware,\r\n  defaultI18nProvider,\r\n  USER_LOGOUT,\r\n  i18nReducer\r\n} from 'react-admin';\r\nimport { routerMiddleware, routerReducer } from \"react-router-redux\";\r\n// in src/createAdminStore.js\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { all, fork } from \"redux-saga/effects\";\r\nimport thunk from \"redux-thunk\";\r\nimport authProvider from \"../../components/adminPage/hocode/auth/authProvider\";\r\nimport dataProvider from \"../../components/adminPage/hocode/dataProvider\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n//import routeReducer2 from '../reducers/routeReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst history = createBrowserHistory({ basename: '/admin' });\r\n\r\nconst createAdminStore = ({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider = defaultI18nProvider,\r\n  history,\r\n  locale = \"vi\"\r\n}) => {\r\n  const reducer = combineReducers({\r\n    admin: adminReducer,\r\n    form: formReducer,\r\n    router: routerReducer,\r\n    i18n: i18nReducer(locale, i18nProvider(locale)),\r\n    rootReducer: rootReducer\r\n    // { /* add your own reducers here */ },\r\n  });\r\n  const resettableAppReducer = (state, action) =>\r\n    reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n  const saga = function* rootSaga() {\r\n    yield all(\r\n      [\r\n        adminSaga(dataProvider, authProvider, i18nProvider)\r\n        // add your own sagas here\r\n      ].map(fork)\r\n    );\r\n  };\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    resettableAppReducer,\r\n    // { /* set your initial state here */ },\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(\r\n        sagaMiddleware,\r\n        formMiddleware,\r\n        routerMiddleware(history),\r\n        thunk\r\n        // add your own middlewares here\r\n      ),\r\n //    typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__\r\n   //    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    //    : f => f\r\n      // add your own enhancers here\r\n    )\r\n  );\r\n  sagaMiddleware.run(saga);\r\n  return store;\r\n};\r\n\r\n\r\nconst i18nProvider = locale => {\r\n  // if (locale !== 'en') {\r\n  //     return messages[locale];\r\n  // }\r\n  return vietnameseMessages;\r\n};\r\n\r\nconst store = createAdminStore({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider,\r\n  history\r\n});\r\nexport default store;\r\n\r\nexport { history };\r\n// const middleware = [thunk];\r\n// //const devTools = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : null\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   initialState,\r\n//   compose(\r\n//     applyMiddleware(...middleware)\r\n//  // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  //cai nay su dung khi dung redux dev tool extension\r\n//   )\r\n// );\r\n\r\n// export { store};\r\n","/**\r\n * Generated ReactAdmin.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { Admin, Resource } from \"react-admin\";\r\n\r\nimport authProvider from \"./auth/authProvider\";\r\nimport catchAll from \"./catchAll\";\r\nimport customRoutes from \"./customRoutes\";\r\nimport dataProvider from \"./dataProvider\";\r\nimport MyLayout from \"./MyLayout\";\r\nimport { theme } from \"./theme\";\r\n\r\nimport {\r\n  ModelBookList,\r\n  ModelBookCreate,\r\n  ModelBookEdit\r\n} from \"./resources/ModelBook\";\r\n\r\nimport {\r\n  ModelCourseList,\r\n  ModelCourseCreate,\r\n  ModelCourseEdit,\r\n  ModelCourseCreateForMod\r\n} from \"./resources/ModelCourse\";\r\n\r\nimport {\r\n  ModelEventList,\r\n  ModelEventCreate,\r\n  ModelEventEdit\r\n} from \"./resources/ModelEvent\";\r\n\r\nimport {\r\n  ModelMinitaskList,\r\n  ModelMinitaskCreate,\r\n  ModelMinitaskEdit\r\n} from \"./resources/ModelMinitask\";\r\n\r\nimport {\r\n  ModelTaskList,\r\n  ModelTaskCreate,\r\n  ModelTaskEdit\r\n} from \"./resources/ModelTask\";\r\n\r\nimport {\r\n  ModelCertList,\r\n  ModelCertCreate,\r\n  ModelCertEdit\r\n} from \"./resources/ModelCert\";\r\n\r\nimport {\r\n  ModelUserList,\r\n  ModelUserCreate,\r\n  ModelUserEdit\r\n} from \"./resources/ModelUser\";\r\n\r\nimport {\r\n  ModelFightList,\r\n  ModelFightCreate,\r\n  ModelFightEdit\r\n} from \"./resources/ModelFight\";\r\nimport { history } from \"../../../js/store/store\";\r\n\r\nconst ReactAdmin = () => (\r\n  <Admin\r\n    appLayout={MyLayout}\r\n    authProvider={authProvider}\r\n    catchAll={catchAll}\r\n    customRoutes={customRoutes}\r\n    dataProvider={dataProvider}\r\n    title=\"Hocode Admin\"\r\n    theme={theme}\r\n    history={history}\r\n    locale=\"vi\"\r\n    // logoutButton={null}\r\n  >\r\n    {_ => {\r\n      const permissionslocal = localStorage.getItem(\"permissions\");\r\n      console.log(permissionslocal);\r\n      return [\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"books\"\r\n            list={ModelBookList}\r\n            create={ModelBookCreate}\r\n            edit={ModelBookEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"events\"\r\n            list={ModelEventList}\r\n            create={ModelEventCreate}\r\n            edit={ModelEventEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n          name=\"courses\"\r\n          list={ModelCourseList}\r\n          create={ModelCourseCreate}\r\n          edit={ModelCourseEdit}\r\n        />\r\n        ) : (<Resource\r\n          name=\"courses\"\r\n          list={ModelCourseList}\r\n          create={ModelCourseCreateForMod}\r\n          edit={ModelCourseEdit}\r\n        />\r\n\r\n        ),\r\n        // <Resource\r\n        //   name=\"courses\"\r\n        //   list={ModelCourseList}\r\n        //   create={ModelCourseCreate}\r\n        //   edit={ModelCourseEdit}\r\n        // />,\r\n        <Resource\r\n          name=\"tasks\"\r\n          list={ModelTaskList}\r\n          create={ModelTaskCreate}\r\n          edit={ModelTaskEdit}\r\n        />,\r\n        <Resource\r\n          name=\"fights\"\r\n          list={ModelFightList}\r\n          create={ModelFightCreate}\r\n          edit={ModelFightEdit}\r\n        />,\r\n\r\n        <Resource\r\n          name=\"minitasks\"\r\n          list={ModelMinitaskList}\r\n          create={ModelMinitaskCreate}\r\n          edit={ModelMinitaskEdit}\r\n        />,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"users\"\r\n            list={ModelUserList}\r\n            create={ModelUserCreate}\r\n            edit={ModelUserEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"certs\"\r\n            list={ModelCertList}\r\n            create={ModelCertCreate}\r\n            edit={ModelCertEdit}\r\n          />\r\n        ) : null\r\n      ];\r\n    }}\r\n  </Admin>\r\n);\r\n\r\nexport default ReactAdmin;\r\n\r\n// const mapStateToProps = state => ({\r\n//   auth: state.rootReducer.auth,\r\n//   errors: state.rootReducer.errors,\r\n//   user: state.rootReducer.user\r\n// });\r\n\r\n// export default withStyles(styles, { withTheme: true })(\r\n//   connect(mapStateToProps, { logoutUser })(ProfilePage)\r\n// );\r\n\r\n/** End of Generated Code **/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { changeUserInfo } from \"../../../../js/actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { regexPassword } from \"../../../../common/regex\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\n\r\nclass Account extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      avatar: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      },\r\n      image: null,\r\n      url: \"\",\r\n      urlPreview: \"\"\r\n    };\r\n    this.handleChangeImage = this.handleChangeImage.bind(this);\r\n    this.toBase64 = this.toBase64.bind(this);\r\n    this.ImgToBase64 = this.ImgToBase64.bind(this);\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios\r\n        .get(\"http://localhost:8081/auth/userinfo\")\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState({\r\n            firstName: res.data.firstname,\r\n            lastName: res.data.lastname,\r\n            avatar: res.data.avatar\r\n          });\r\n        })\r\n        .catch(err => console.log(err))\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  async handleChangeImage(e) {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      const urlimage = URL.createObjectURL(image);\r\n      let image1 = await this.ImgToBase64(image);\r\n      await this.setState({ image: image1, urlPreview: urlimage });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    this.setState({\r\n      errors: { message: \"\" }\r\n    });\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        var errorFormNew = this.state.errorForm;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  toBase64(file) {\r\n    console.log(file);\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  async ImgToBase64(file) {\r\n    const result = await this.toBase64(file).catch(e => e);\r\n    if (result instanceof Error) {\r\n      console.log(\"Error: \", result.message);\r\n      return;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      password: this.state.password,\r\n      avatar: this.state.image\r\n    };\r\n    console.log(this.props.auth.user.data.id);\r\n    this.setState(function (state, props) {\r\n      return {\r\n        isLoading: true\r\n      };\r\n    });\r\n\r\n    console.log(this.state.image);\r\n\r\n    await this.props.changeUserInfo(newUser, this.props.auth.user.data.id);\r\n    setTimeout(() => {\r\n      this.setState(function (state, props) {\r\n        return {\r\n          isLoading: false\r\n        };\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors, isLoading } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={3} style={{ height: \"100%\" }}>\r\n        {isLoading === true || this.props.user.isUserLoading === true ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\", height: '100vh'\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={true}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={4} md={4}>\r\n                <Paper>\r\n                  <Box display=\"flex\" p={1} bgcolor=\"grey.300\">\r\n                    <Box mr={1} mt={1} flexGrow={1}>\r\n                      <PersonIcon fontSize=\"large\"/>\r\n                    </Box>\r\n                    <Box mt={1} flexGrow={6}>\r\n                      <Typography variant=\"h5\">Thông tin cá nhân</Typography>\r\n                    </Box>\r\n                    {/* <Box>\r\n                      <IconButton color=\"primary\" aria-label=\"Edit\">\r\n                        <EditIcon/>\r\n                      </IconButton>\r\n                    </Box> */}\r\n                  </Box>\r\n                  <Box display=\"flex\" justifyContent=\"flex-start\" p={2}>\r\n                    <Box borderRadius={16} borderColor=\"grey.500\">\r\n                      <img\r\n                        style={{ width: 100, height: 100 }}\r\n                        src={this.state.avatar}\r\n                        alt=\"Ảnh đại diện\"\r\n                      />\r\n                    </Box>\r\n                    <Box ml={1}>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">\r\n                          Họ và tên: {this.props.user.lastname}{\" \"}\r\n                          {this.props.user.firstname}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">Email: {this.props.user.email}</Typography>\r\n                      </Box>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">Điểm: {this.props.user.codepoint}</Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={8}>\r\n                <Paper style={{ padding: 16 }}>\r\n                  <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                      <Typography component=\"h1\" variant=\"h5\"></Typography>\r\n                      <form\r\n                        className={classes.form}\r\n                        noValidate\r\n                        onSubmit={this.onSubmit}\r\n                      >\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <CssTextField\r\n                              autoComplete=\"lname\"\r\n                              name=\"lastName\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              id=\"lastName\"\r\n                              label=\"Họ\"\r\n                              value={this.state.lastName}\r\n                              onChange={this.onChange}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              id=\"firstName\"\r\n                              label=\"Tên\"\r\n                              name=\"firstName\"\r\n                              autoComplete=\"fname\"\r\n                              value={this.state.firstName}\r\n                              onChange={this.onChange}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              name=\"password\"\r\n                              label=\"Mật khẩu mới\"\r\n                              type=\"password\"\r\n                              id=\"password\"\r\n                              autoComplete=\"current-password\"\r\n                              value={this.state.password}\r\n                              onChange={this.onChange}\r\n                              error={this.state.errorForm.password.trim() !== \"\"}\r\n                              helperText={this.state.errorForm.password}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              name=\"password2\"\r\n                              label=\"Nhập lại Mật khẩu mới\"\r\n                              type=\"password\"\r\n                              id=\"password2\"\r\n                              autoComplete=\"current-password2\"\r\n                              value={this.state.password2}\r\n                              onChange={this.onChange}\r\n                              error={this.state.errorForm.password2.trim() !== \"\"}\r\n                              helperText={this.state.errorForm.password2}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {/* <div>Thay đổi avatar</div> */}\r\n                          </Grid>\r\n                        </Grid>\r\n                        <div>\r\n                          <div className=\"error_show\">{errors.message}</div>\r\n                        </div>\r\n                        <div>\r\n                          <label\r\n                            htmlFor=\"files\"\r\n                            style={{\r\n                              padding: \"2px\",\r\n                              borderRadius: \"4px\",\r\n                              cursor: \"pointer\",\r\n                              background: \"#2098d1\",\r\n                              color: \"white\",\r\n                              boxShadow:\r\n                                \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n                            }}\r\n                          >\r\n                            Chọn ảnh\r\n                            </label>\r\n                          <input\r\n                            id=\"files\"\r\n                            type=\"file\"\r\n                            onChange={this.handleChangeImage}\r\n                            style={{ visibility: \"hidden\" }}\r\n                          />\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          Lưu thông tin\r\n                        </Button>\r\n                      </form>\r\n                    </div>\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nAccount.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { changeUserInfo }\r\n  )(Account)\r\n);\r\n","// import Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport \"./hover.css\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport { Link } from \"react-router-dom\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nimport {\r\n  // FacebookShareCount,\r\n  // FacebookIcon,\r\n  FacebookShareButton\r\n} from \"react-share\";\r\n// import { Button } from \"@material-ui/core\";\r\n\r\nconst randomColor = () => {\r\n  var listColor = [deepOrange[500], deepPurple[500], green[500], pink[500]];\r\n  var color = listColor[Math.floor(Math.random() * listColor.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport { randomColor };\r\n\r\nconst styles = {\r\n  courseItem: {\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    overflow: \"hidden\",\r\n    background: \"#FFFFFF\",\r\n    cursor: \"pointer\"\r\n  },\r\n  smallAvatar: {\r\n    height: \"24px\",\r\n    width: \"24px\",\r\n    marginRight: \"4px\",\r\n    // backgroundColor: randomColor(),\r\n    // fontSize: \"0.8rem\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"600\"\r\n  }\r\n};\r\nclass CourseItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalMinitask: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      courseStatus: 0,\r\n      coursePassInfo: {},\r\n      isLoadingCourseInfo: true,\r\n      //status for like function\r\n      liked: true\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/totalMinitask/${this.props.course.id}`).then(res => {\r\n      // console.log(res.data);\r\n      this.setState({ totalMinitask: res.data });\r\n    });\r\n    axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${this.props.course.id}`).then(res => {\r\n      console.log(res.data);\r\n      this.setState({ coursePassInfo: res.data, isLoadingCourseInfo: false });\r\n    });\r\n    var code;\r\n    if ((new Date() < new Date(this.props.course.start_time))) {\r\n      code = -1;\r\n    }\r\n    if ((new Date() > new Date(this.props.course.start_time)) && (new Date() < new Date(this.props.course.end_time))) {\r\n      code = 0;\r\n    }\r\n    if ((new Date() > new Date(this.props.course.end_time))) {\r\n      code = 1;\r\n    }\r\n    this.setState({ courseStatus: code });\r\n    this.interval = setInterval(() => {\r\n      const date = this.calculateCountdown(code === -1 ? this.props.course.start_time : this.props.course.end_time);\r\n      date ? this.setState(date) : this.stop();\r\n    }, 1000);\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      years: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n      diff -= timeLeft.years * 365.25 * 86400;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n      timeLeft.days = Math.floor(diff / 86400);\r\n      diff -= timeLeft.days * 86400;\r\n    }\r\n    if (diff >= 3600) { // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = '0' + value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // handle func like course \r\n\r\n  handleCountLiked() {\r\n    var newcourse = this.props.course;\r\n    if (!this.state.liked) {\r\n      this.setState((prevState, props) => {\r\n        return {\r\n          liked: true\r\n        }\r\n      });\r\n    } else {\r\n      this.setState((prevState, props) => {\r\n        return {\r\n          liked: false\r\n        }\r\n      });\r\n    }\r\n    if (this.state.liked) {\r\n      newcourse.numbers_like = this.props.course.numbers_like + 1;\r\n    }\r\n    else {\r\n      newcourse.numbers_like = this.props.course.numbers_like - 1;\r\n    }\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${this.props.course.id}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n\r\n    // console.log(newcourse);\r\n\r\n  }\r\n\r\n  renderPraceticeProgress = (page) => {\r\n    if (page === \"overview\") {\r\n      return \"\";\r\n    } else {\r\n      return <React.Fragment>\r\n        <Box justifyContent=\"flex-start\" p={1} display=\"flex\" color=\"#757575\">\r\n          <Tooltip title={(this.state.coursePassInfo.total_minitask === 0) ? \"0%\" :\r\n            (Math.round((this.state.coursePassInfo.minitask_solved / this.state.coursePassInfo.total_minitask) * 100) * 100) / 100 + \"%\"} placement=\"top\">\r\n            <Fade in={!this.state.isLoadingCourseInfo} {...(true ? { timeout: 1000 } : {})}>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={this.state.coursePassInfo.total_minitask === 0 ? \"0\" :\r\n                  (this.state.coursePassInfo.minitask_solved /\r\n                    this.state.coursePassInfo.total_minitask) * 100\r\n                }\r\n                style={{ width: '100%', height: 7 }}\r\n              />\r\n            </Fade>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box display=\"flex\">\r\n          <Box p={2} flexGrow={1} justifyContent=\"flex-start\" color=\"#757575\">\r\n            <Typography variant=\"subtitle2\" style={{ fontWeight: 10000 }}>\r\n              {(this.state.coursePassInfo.minitask_solved + \"/\" + this.state.coursePassInfo.total_minitask)}\r\n            </Typography>\r\n          </Box>\r\n          <Box p={1} color=\"#757575\">\r\n            {this.state.coursePassInfo.isCodePass ?\r\n              // <Chip label=\"Pass\" style={{ background: \"#43a047\", color: \"white\" }} />\r\n              \"\"\r\n              :\r\n              <React.Fragment>\r\n                <Typography variant=\"subtitle2\">\r\n                  {this.state.coursePassInfo.user_code_point} <EmojiNatureIcon />\r\n                </Typography>\r\n              </React.Fragment>}\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { days, hours, min, sec, courseStatus } = this.state;\r\n    const { classes, course, page } = this.props;\r\n\r\n\r\n    // check course statement -- Active or Inactive\r\n    // let isActive;\r\n    // if (course.status === \"Inactive\") {\r\n    //   isActive = <p>Cần xét duyệt</p>\r\n    // }\r\n\r\n    let chip;\r\n    if (course.status === \" \" || course.status === \"Inactive\") {\r\n      chip = (<Chip\r\n        label=\"Cần xét duyệt\"\r\n        color=\"primary\"\r\n        style={{\r\n          width: '80%',\r\n          height: '80%',\r\n          fontSize: '63px'\r\n        }}\r\n      />)\r\n    } else if (course.status === \"Pedding\") {\r\n      chip = (<Chip\r\n        label=\"Đang xét duyệt\"\r\n        color=\"primary\"\r\n        style={{\r\n          width: '80%',\r\n          height: '80%',\r\n          fontSize: '63px'\r\n        }}\r\n      />)\r\n    }\r\n    let timer;\r\n    if (courseStatus === 0) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#ef5350\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Đang diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === -1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#212121\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Sắp diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === 1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Kết thúc\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            {new Date(course.end_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n          </Typography>\r\n        </Box>\r\n      </React.Fragment>\r\n    }\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          // justifyContent: \"center\",\r\n          borderRadius: 8,\r\n          alignItems: \"center\",\r\n        }}\r\n        className={`${classes.courseItem} hvr-bounce-in`}\r\n      >\r\n        {/* <React.Fragment></React.Fragment> */}\r\n        <Grid\r\n          container\r\n          component={Link} to={`/profile/courses/${course.id}/tasks`}\r\n          style={{\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            height: \"150px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            background: `url(${course.background_image}) no-repeat center`,\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          {/* { course.status === \"Pedding\"  ?\r\n            <Chip\r\n              label=\"Cần xét duyệt\"\r\n              color=\"primary\"\r\n              style={{\r\n                width: '80%',\r\n                height: '80%',\r\n                fontSize: '63px'\r\n              }}\r\n            />\r\n            :\r\n            \"\"\r\n          } */}\r\n          {chip}\r\n          {/* <img\r\n            src={course.background_image}\r\n            style={{\r\n              width: \"50px\",\r\n              objectFit: \"cover\",\r\n              height: \"50px\",\r\n              borderRadius: \"50%\",\r\n              marginTop: \"10px\"\r\n            }}\r\n            alt=\"\"\r\n          /> */}\r\n        </Grid>\r\n        <Grid item container justify=\"center\" style={{ padding: \"10px 0 0 0\" }}>\r\n          <Grid item xs>\r\n            <div\r\n              style={{\r\n                margin: \"0px 12px\",\r\n                // textAlign: \"center\",\r\n                // textTransform: \"uppercase\",\r\n                color: \"#3B3C54\",\r\n                fontWeight: \"bold\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Link style={{ textDecoration: 'none' }} to={`/profile/courses/${course.id}/tasks`}>\r\n                <Typography\r\n                  gutterBottom variant=\"h5\" component=\"h5\"\r\n                  style={{\r\n                    fontSize: 20,\r\n                    fontWeight: 600,\r\n                    color: \"#3B3C54\"\r\n                  }}\r\n                >\r\n                  {course.course_name}\r\n                </Typography>\r\n              </Link>\r\n\r\n            </div>\r\n            <div\r\n              style={{\r\n                margin: \"5px 12px 10px\",\r\n                // textAlign: \"center\",\r\n                color: \"#909090\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Rating\r\n                name=\"read-only\"\r\n                value={course.rating_value}\r\n                read-only\r\n                precision={0.1}\r\n                size=\"large\"\r\n              />{\" \"}\r\n              <Typography\r\n                // variant=\"body1\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  height: 20,\r\n                  overflow: \"hidden\",\r\n                  wordBreak: \"break-word\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                {course.course_desc}\r\n              </Typography>\r\n            </div>\r\n            {!this.state.isLoadingCourseInfo ?\r\n              this.renderPraceticeProgress(page)\r\n              :\r\n              <Box p={1} display=\"flex\" justifyContent=\"center\" color=\"#757575\">\r\n                <Box>\r\n                  <Tooltip title=\"Loading\" placement=\"top\">\r\n                    <CircularProgress />\r\n                  </Tooltip>\r\n                </Box>\r\n              </Box>\r\n            }\r\n            <Divider light />\r\n            <div\r\n              style={{\r\n                margin: \"8px 12px\",\r\n                textAlign: \"center\",\r\n                color: \"#909090\"\r\n\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                {/* <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\"\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    className={classes.smallAvatar}\r\n                    style={{ backgroundColor: randomColor() }}\r\n                  >\r\n                    {course.user_create\r\n                      ? course.user_create.charAt(0).toUpperCase()\r\n                      : \"H\"}\r\n                  </Avatar>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {course.user_create ? course.user_create : \"Hocode\"}\r\n                  </Typography>\r\n                </Grid> */}\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\"\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    {this.state.liked ? (<ThumbUpIcon\r\n                      style={{\r\n                        // color: \"#fff\",\r\n                        //backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n                        padding: \"2px 4px\",\r\n                        boxSizing: \"content-box\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      fontSize=\"large\"\r\n                      color=\"disabled\"\r\n                      onClick={\r\n                        () => { this.handleCountLiked() }\r\n                      }\r\n                    />) : (<ThumbUpIcon\r\n                      style={{\r\n                        // color: \"#fff\",\r\n                        //backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n                        padding: \"2px 4px\",\r\n                        boxSizing: \"content-box\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      fontSize=\"large\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        () => { this.handleCountLiked() }\r\n                      }\r\n                    />)}\r\n\r\n                  </Box>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                    style={{\r\n                      fontWeight: 1000,\r\n                    }}\r\n                  >\r\n                    {/* {this.state.totalMinitask} */}\r\n                    {course.numbers_like}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\"\r\n                  }}\r\n                >\r\n                  <Box mt={1}>\r\n                    <FacebookShareButton url=\"https://www.google.com/\" >\r\n                      <Grid container xs={12}>\r\n                        <Grid xs={3}>\r\n                          <FacebookIcon fontSize=\"large\" />\r\n                        </Grid>\r\n                        <Grid container justify=\"center\"\r\n                          alignItems=\"center\" xs={9}>\r\n                          <Box mb={1}>\r\n                            <Typography style={{fontSize:13}}>&nbsp;&nbsp;Chia sẻ</Typography>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                      {/* <FacebookIcon size={30} round={true} logoFillColor=\"white\" /> */}\r\n                      {/* <FacebookShareCount url=\"https://www.google.com/\">\r\n                        {shareCount => (\r\n                          <span className=\"myShareCountWrapper\">{shareCount}</span>\r\n                        )}\r\n                      </FacebookShareCount> */}\r\n                    </FacebookShareButton>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider light />\r\n        {page === \"overview\" ? \"\" : timer}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\";\r\nimport { getUser } from \"../../../../js/actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { Box, Typography, Fade } from \"@material-ui/core\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = {\r\n  CourseContainer: {\r\n    // paddingTop: \"30px\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  CourseContainer1: {\r\n    paddingTop: \"\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem: {\r\n    borderRadius: '4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow: 'hidden',\r\n    background: '#EEEEEE',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst permissionslocal = localStorage.getItem(\"permissions\");\r\nconsole.log(permissionslocal);\r\n\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      courses: [],\r\n      coursesTemp: [],\r\n      courseActived: [],\r\n      courseStatus: 0,\r\n      keyword: \"\",\r\n      lap_trinh_co_so_id: \"5e9a6d398bf11c0e089af771\",\r\n      lap_trinh_co_so_list: [],\r\n      lap_trinh_nang_cao_id: \"5e9a6d698bf11c0e089af772\",\r\n      lap_trinh_nang_cao_list: [],\r\n      giai_quyet_van_de_id: \"5e9a6d738bf11c0e089af773\",\r\n      giai_quyet_van_de_list: [],\r\n    };\r\n  }\r\n  getApi = async () => {\r\n    const { lap_trinh_co_so_id, lap_trinh_nang_cao_id, giai_quyet_van_de_id } = this.state;\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses)\r\n        const courseIsActived = []\r\n        this.setState({ courses, coursesTemp: courses });\r\n\r\n        for (let i = 0; i < courses.length; i++) {\r\n          const element = courses[i];\r\n          if (element.status === \"Active\" || element.status === \" \") {\r\n            courseIsActived.push(element);\r\n          }\r\n        }\r\n        this.setState({ courseActived: courseIsActived });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${lap_trinh_co_so_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_co_so_list: res.data,\r\n        })\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${lap_trinh_nang_cao_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_nang_cao_list: res.data,\r\n        })\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${giai_quyet_van_de_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          giai_quyet_van_de_list: res.data,\r\n        })\r\n      }),\r\n    ]\r\n    );\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  handleChangeSelect = async (event) => {\r\n    const status = event.target.value;\r\n    const { courses, coursesTemp } = this.state;\r\n    console.log(coursesTemp);\r\n    if (status === 0) {\r\n      this.setState({ coursesTemp: courses, courseStatus: 0 });\r\n    }\r\n    else if (status === -1) {\r\n      const courseFilter = courses.filter(e => e.status === \"Inactive\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: -1 });\r\n    } else if (status === 1) {\r\n      const courseFilter = courses.filter(e => e.status === \"Active\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: 1 });\r\n    } if (status === 2) {\r\n      const courseFilter = courses.filter(e => e.status === \"Pedding\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: 2 });\r\n    }\r\n  }\r\n\r\n  renderCourseTypeTitle = (title) => {\r\n    return <Box mt={4} mb={1}>\r\n      <Typography style={{ fontSize: 30, fontWeight: 700, color: \"#3B3C54\" }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  onHandleSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    console.log(keyword);\r\n    this.setState({\r\n      keyword,\r\n    }, () => {\r\n      const { keyword, lap_trinh_co_so_id, lap_trinh_nang_cao_id, giai_quyet_van_de_id } = this.state;\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${lap_trinh_co_so_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_co_so_list: res.data,\r\n        })\r\n      });\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${lap_trinh_nang_cao_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_nang_cao_list: res.data,\r\n        })\r\n      });\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${giai_quyet_van_de_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          giai_quyet_van_de_list: res.data,\r\n        })\r\n      });\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { coursesTemp, isLoading, courseStatus, lap_trinh_co_so_list, lap_trinh_nang_cao_list, giai_quyet_van_de_list, keyword } = this.state;\r\n    // let url = this.props.url;\r\n\r\n    return (\r\n      <Grid container className={this.props.user.role === \"admin\" ? classes.CourseContainer1 : classes.CourseContainer} justify=\"center\">\r\n        {isLoading ? <div className=\"sweet-loading\" style={{ display: 'flex', alignItems: \"center\", justifyContent: 'center', width: '100%' }}>\r\n          <HashLoader\r\n            sizeUnit={\"px\"}\r\n            size={50}\r\n            color={\"#AEA8A8\"}\r\n            loading={isLoading}\r\n          />\r\n        </div> : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12}>\r\n                {this.props.user.role === \"admin\" ?\r\n                  <Box p={1}>\r\n                    <FormControl style={{ width: '15%' }}>\r\n                      <InputLabel id=\"demo-simple-select-label\">Tình trạng</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={courseStatus}\r\n                        style={{ height: 30 }}\r\n                        onChange={this.handleChangeSelect}\r\n                      >\r\n                        <MenuItem value={0}>Tất cả</MenuItem>\r\n                        <MenuItem value={1}>Đã duyệt</MenuItem>\r\n                        <MenuItem value={-1}>Cần xét duyệt</MenuItem>\r\n                        <MenuItem value={2}>Đang xét duyệt</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                  :\r\n                  \"\"\r\n                }\r\n                {this.props.user.role !== \"admin\" ?\r\n                  <Box my={2}>\r\n                    <Grid container xs={12} style={{ backgroundColor: \"#D4D5F5\", borderRadius: \"8px\" }}>\r\n                      <Grid container direction=\"column\" xs={8} justify=\"center\">\r\n                        <Box mx={8} my={5}>\r\n                          <Grid container>\r\n                            <Typography style={{ fontSize: 40, fontWeight: 450 }}>Học tập cùng <span style={{ fontSize: 40, color: \"#2C31CF\" }}>chuyên gia</span>,</Typography>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Typography style={{ fontSize: 22, fontWeight: 450 }}>tham gia khoá học lập trình để nâng cao kỹ năng bản thân!</Typography>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <FormControl style={{ width: '100%', marginTop: 10 }}>\r\n                              <TextField id=\"outlined-basic\"\r\n                                placeholder=\"Nhập nội dung tìm kiếm\"\r\n                                variant=\"outlined\"\r\n                                value={keyword}\r\n                                style={{ backgroundColor: \"white\", borderRadius: 4, }}\r\n                                onChange={this.onHandleSearch}\r\n                                InputProps={{\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      <SearchIcon />\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n                            </FormControl>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} justify=\"center\" alignItems=\"center\">\r\n                        <Box mx={8} my={5}>\r\n                          <img\r\n                            className={classes.img}\r\n                            style={{\r\n                              width: \"200\",\r\n                              height: \"200\",\r\n                              objectFit: \"cover\",\r\n                              borderRadius: \"8px\"\r\n                            }}\r\n                            alt=\"complex\"\r\n                            src={\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/course/course-head.png\"}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  :\r\n                  \"\"\r\n                }\r\n                {this.props.user.role === \"admin\" ?\r\n                  <React.Fragment>\r\n                    <Grid container spacing={3}>\r\n                      {coursesTemp.map((course) =>\r\n                        <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                          {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                            <CourseItem course={course} />\r\n                          {/* </Link> */}\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                  : (\r\n                    <React.Fragment>\r\n                      {\r\n                        lap_trinh_co_so_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Lập trình cơ sở\")}\r\n                            <Grid container spacing={4}>\r\n                              {lap_trinh_co_so_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        lap_trinh_nang_cao_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Lập trình nâng cao\")}\r\n                            <Grid container spacing={4}>\r\n                              {lap_trinh_nang_cao_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        giai_quyet_van_de_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Giải quyết vấn đề\")}\r\n                            <Grid container spacing={4}>\r\n                              {giai_quyet_van_de_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        (giai_quyet_van_de_list.length === 0 && lap_trinh_co_so_list.length === 0 && lap_trinh_nang_cao_list.length === 0) ?\r\n                          <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                            <React.Fragment>\r\n                              <Box p={2} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <img\r\n                                  className={classes.img}\r\n                                  style={{\r\n                                    width: \"350px\",\r\n                                    height: \"500\",\r\n                                    // objectFit: \"cover\",\r\n                                    borderRadius: \"8px\"\r\n                                  }}\r\n                                  alt=\"complex\"\r\n                                  src={\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"}\r\n                                />\r\n                              </Box>\r\n                              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Typography style={{ fontSize: 20, fontWeight: 1000 }}>Không tìm thấy dữ liệu</Typography>\r\n                              </Box>\r\n                            </React.Fragment>\r\n                          </Fade>\r\n                          : \"\"\r\n                      }\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n                {/* <Grid container spacing={2}>\r\n            {courses.map((course) => <Grid key={course.id} item xs={12} sm={4} md={4}><Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}><CourseItem course={course} /></Link></Grid>)}\r\n          </Grid> */}\r\n              </Grid></React.Fragment>)}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, { getUser })(CourseBody));\r\n","import React, { Component } from 'react';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nclass CardUser extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid container xs={12} spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <CardMedia\r\n                                style={{ borderRadius: '50%' }}\r\n                                component=\"img\"\r\n                                alt=\"avatar\"\r\n                                width=\"65\"\r\n                                height=\"65\"\r\n                                src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Typography gutterBottom variant=\"button\" component=\"h2\">\r\n                                {user.firstname + \" \" + user.lastname}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: \"#DB3B56\", fontWeight: \"800\" }}>\r\n                                {user.codepoint} điểm\r\n                        </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardUser;","import React, { Component } from 'react';\r\nimport { lighten, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst BorderLinearProgress = withStyles({\r\n    root: {\r\n        height: 10,\r\n        backgroundColor: lighten('#ff6c5c', 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 20,\r\n        backgroundColor: '#ff6c5c',\r\n    },\r\n})(LinearProgress);\r\n\r\nclass UserInfo extends Component {\r\n    render() {\r\n        const { totalCourse, userCourse, minitaskInfo, fightInfo } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid xs={12} container spacing={10}>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Khóa học\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {userCourse.length + \"/\" + totalCourse}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={(userCourse.length / totalCourse) * 100}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Luyện tập\r\n                            </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {minitaskInfo.solved + \"/\" + (minitaskInfo.total_easy + minitaskInfo.total_hard + minitaskInfo.total_medium)}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={(minitaskInfo.solved / (minitaskInfo.total_easy + minitaskInfo.total_hard + minitaskInfo.total_medium)) * 100}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Cuộc thi\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {(fightInfo.total_private_joined_fight + fightInfo.total_public_joined_fight)+\"/\"+(fightInfo.total_private_fight + fightInfo.total_public_fight)}\r\n                            </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={30}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    Fade,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { minitask } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid item zeroMinWidth xs={4} md={4} sm={4}>\r\n                        <Box p={3} boxShadow={3}>\r\n                            <Link\r\n                                className=\"item\"\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to={`/minitask/${minitask.id}`}\r\n                            >\r\n                                <Grid container justify=\"center\" alignContent=\"center\">\r\n                                    <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n                                        <Typography noWrap variant=\"h3\" style={{ fontSize: 18, fontWeight: 600, color: \"#3B3B3B\" }}>{minitask.name_func}</Typography>\r\n                                    </Tooltip>\r\n\r\n                                </Grid>\r\n                            </Link>\r\n                            <Box display=\"flex\" p={2} justifyContent=\"center\">\r\n                                {this.renderLevel(minitask.level)}\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    CardMedia,\r\n    Typography,\r\n    Box,\r\n    Button\r\n} from '@material-ui/core'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Fight extends Component {\r\n    render() {\r\n        const { fight } = this.props;\r\n        return (\r\n            <Grid item container xs={6} md={6} sm={6}>\r\n                <Paper style={{ width: '100%', borderRadius: 10 }}>\r\n                    <Grid container xs={12}>\r\n                        <Box>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Fight img\"\r\n                                height=\"200\"\r\n                                src={fight.backgroud_img}\r\n                                title=\"Fight img\"\r\n                                style={{borderRadius: 10}}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Box mx={2} mb={1}>\r\n                        <Grid container xs={12}>\r\n                            <Grid xs={12} container>\r\n                                <Box mt={1}>\r\n                                    <Typography style={{ fontSize: 32, fontWeight: 600, color: \"#3B3C54\" }}>\r\n                                        {fight.fight_name}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid xs={12} container>\r\n                                <Typography noWrap style={{ fontSize: 18, fontWeight: 200 }}>\r\n                                    {fight.fight_desc}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs={12}>\r\n                            <Grid xs={6} container>\r\n                                <Box my={3} mb={1}>\r\n                                    <Typography style={{ fontSize: 18, fontWeight: 600 }}>\r\n                                        Đã có {fight.numbers_std} đội đăng ký\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid xs={6} container justify=\"flex-end\" alignItems=\"center\">\r\n                                <Box my={3} mb={1}>\r\n                                    <Button variant=\"contained\" onClick={this.handleJoinFight} style={{ backgroundColor: \"#E8505B\" }}\r\n                                        component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                                        <Typography variant=\"button\" style={{ color: \"white\" }}>Code ngay</Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n// import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardUser from './CardUser';\r\nimport UserInfo from './UserInfo';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CourseItem from \"../course/CourseItem\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Minitask from './Minitask';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Fight from './Fight';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box >{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  paper: {\r\n    padding: 16,\r\n    // marginTop: 16,\r\n    minHeight: 200\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    // width: \"100%\",\r\n\r\n    height: 180,\r\n    objectFit: \"cover\"\r\n  }\r\n};\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      courses: [],\r\n      events: [],\r\n      books: [],\r\n      daily_minitask: {},\r\n      isLoadingCoursePassInfo: true,\r\n      totalCourse: 0,\r\n      chartInfo: [],\r\n      newestCourse: [],\r\n      tab: 0,\r\n      threeRandomMinitask: [],\r\n      user_fight_info: {},\r\n      twoNewestFights: [],\r\n    };\r\n    this.getApi = this.getApi.bind(this);\r\n  }\r\n\r\n  handleChangeTab = (event, newValue) => {\r\n    this.setState({ tab: newValue });\r\n  }\r\n\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/auth/get-studied-course`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses);\r\n        this.setState({ courses: courses });\r\n        // var c = this.state.courses;\r\n        // this.state.courses.forEach((e, i) => {\r\n        //   axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${e.course_id}`).then(res => {\r\n        //     // console.log(\"[CoursePass]\");\r\n        //     // console.log(res.data);\r\n        //     // c[i].progress = res.data.minitask_solved +\"/\"+res.data.total_minitask\r\n        //     c[i].completed_tasks_count = res.data.minitask_solved\r\n        //     c[i].total_tasks_count = res.data.total_minitask\r\n        //     this.setState({ courses: c, isLoadingCoursePassInfo: false });\r\n        //   });\r\n        // });\r\n      }).catch(err => {\r\n        console.log(err);\r\n      }),\r\n\r\n      axios.get(`http://localhost:8081/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/dailyminitask`).then(res => {\r\n        const daily_minitasks = res.data;\r\n        console.log(daily_minitasks);\r\n        this.setState({ daily_minitasks: daily_minitasks });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/totalCourse`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ totalCourse: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ chartInfo: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/getNewestCourse`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ newestCourse: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/get3RandomMinitask`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ threeRandomMinitask: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/user-fight-info/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_fight_info: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/2NewestFights/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ twoNewestFights: res.data });\r\n      }),\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    document.title = \"Lập trình mỗi ngày để trở thành lập trình viên ưu tú\";\r\n    this.getApi();\r\n  }\r\n\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    console.log(minitask.level);\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, totalCourse, chartInfo, courses, newestCourse, tab, threeRandomMinitask, user_fight_info, twoNewestFights } = this.state;\r\n    const { classes } = this.props;\r\n    // let url = this.props.url;\r\n    const newestCourseList = newestCourse.map((course, i) => {\r\n      return <Grid item xs={12} sm={3} md={3}>\r\n        <Typography variant=\"subtitle1\">\r\n          <CourseItem course={course} page={\"overview\"} />\r\n        </Typography>\r\n      </Grid>\r\n    });\r\n\r\n    const studiedCourseList = courses.map((course, i) => {\r\n      return <Grid item xs={12} sm={3} md={3}>\r\n        <Typography variant=\"subtitle1\">\r\n          <CourseItem course={course} />\r\n        </Typography>\r\n      </Grid>\r\n    });\r\n\r\n    const threeRandomMinitaskList = threeRandomMinitask.map((minitask, i) => {\r\n      return <Minitask minitask={minitask} />\r\n    });\r\n\r\n    const twoNewestFightsList = twoNewestFights.map((fight, index) => {\r\n      return <Fight fight={fight} />\r\n    });\r\n\r\n    return (\r\n      <Grid spacing={2}>\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <Box my={2} mx={1}>\r\n                    <Typography variant=\"h5\" style={{ fontSize: 18, fontWeight: 450 }}>Xin chào <span style={{ fontSize: 18, color: \"#DB3B56\" }}>{this.props.user.firstname}</span>.\r\n                    Chào mừng bạn đến với Hocode, tiếp tục khám phá nhé!</Typography>\r\n                  </Box>\r\n                  <Box my={4} mx={1}>\r\n                    <Grid container>\r\n                      <Grid item xs={3} md={3} sm={3}>\r\n                        <CardUser user={this.props.user} />\r\n                      </Grid>\r\n                      <Grid item xs={9} md={9} sm={9}>\r\n                        <UserInfo totalCourse={totalCourse} userCourse={courses} minitaskInfo={chartInfo} fightInfo={user_fight_info} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Khóa học</Typography>\r\n              </Box>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={tab} onChange={this.handleChangeTab} style={{ color: \"#3B3B3B\", backgroundColor: \"white\" }}>\r\n                  <Tab label={<Typography style={{ fontSize: 18, fontWeight: 500, textTransform: 'none' }}>Khóa học gợi ý</Typography>} />\r\n                  <Tab label={<Typography style={{ fontSize: 18, fontWeight: 500, textTransform: 'none' }}>Đang học ({courses.length})</Typography>} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={tab} index={0}>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Grid container xs={12} spacing={2}>\r\n                        {newestCourseList}\r\n                      </Grid>\r\n                      <Box my={3} mr={2}>\r\n                        <Grid container xs={12} spacing={2} justify=\"flex-end\">\r\n                          <Link\r\n                            style={{ textDecoration: 'none' }}\r\n                            className=\"item\"\r\n                            to={\"/profile/course\"}\r\n                          >\r\n                            <Typography style={{ fontSize: 17, fontWeight: 400, textTransform: 'none', color: \"#3D3E56\" }}>Xem tất cả</Typography>\r\n                          </Link>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Fade>\r\n              </TabPanel>\r\n              <TabPanel value={tab} index={1}>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <Paper className={classes.paper}>\r\n                      {this.state.courses.length === 0 ? (\r\n                        <div style={{}}>Bạn chưa tham gia khóa học nào.</div>\r\n                      ) :\r\n                        <Grid container xs={12} spacing={2}>\r\n                          {studiedCourseList}\r\n                        </Grid>\r\n                      }\r\n                    </Paper>\r\n                  </Grid>\r\n                </Fade>\r\n              </TabPanel>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Cuộc thi lập trình</Typography>\r\n              </Box>\r\n              <Grid container xs={12} spacing={2}>\r\n                {twoNewestFightsList}\r\n                <Grid container xs={12} spacing={2} justify=\"flex-end\">\r\n                  <Box my={2} mr={1}>\r\n                    <Link\r\n                      style={{ textDecoration: 'none' }}\r\n                      className=\"item\"\r\n                      to={\"/profile/contest\"}\r\n                    >\r\n                      <Typography style={{ fontSize: 17, fontWeight: 400, textTransform: 'none', color: \"#3D3E56\" }}>Xem tất cả</Typography>\r\n                    </Link>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Luyện tập hàng ngày</Typography>\r\n              </Box>\r\n              <Grid container xs={12} spacing={2}>\r\n                <Grid item xs={8} md={8} sm={8}>\r\n                  <Paper className={classes.paper} style={{ borderRadius: 10 }}>\r\n                    <Grid container xs={12}>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#7BC043\" }}>{chartInfo.easy + \"/\" + chartInfo.total_easy}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Đơn giản</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#FAA05E\" }}>{chartInfo.medium + \"/\" + chartInfo.total_medium}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Trung bình</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#F1646C\" }}>{chartInfo.hard + \"/\" + chartInfo.total_hard}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Phức tạp</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Box mt={1}>\r\n                      <Grid container style={{ marginBottom: 15 }}>\r\n                        <Grid item style={{ flexGrow: 1 }}>\r\n                          <div style={{ fontWeight: \"bold\" }}>Bài tập cho hôm nay</div>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                    <Grid container xs={12} spacing={1}>\r\n                      {threeRandomMinitaskList}\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={4} md={4} sm={4}>\r\n                  <Paper className={classes.paper} style={{ borderRadius: 10 }}>\r\n                    <Grid container style={{ marginBottom: 15 }}>\r\n                      <Grid item style={{ flexGrow: 1 }}>\r\n                        <div style={{ fontWeight: \"bold\" }}>Thách thức mới</div>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                    {this.state.daily_minitasks.map(daily_minitask => {\r\n                      return (\r\n                        <React.Fragment key={daily_minitask.id}>\r\n                          <Grid\r\n                            container\r\n                            style={{ alignItems: \"center\", flexWrap: \"unset\" }}\r\n                          >\r\n                            {/* <Grid item>\r\n                              <img\r\n                                className={classes.img}\r\n                                style={{\r\n                                  width: \"50px\",\r\n                                  height: \"50px\",\r\n                                  objectFit: \"cover\",\r\n                                  borderRadius: \"8px\"\r\n                                }}\r\n                                alt=\"complex\"\r\n                                src={daily_minitask.avatar}\r\n                              />\r\n                            </Grid> */}\r\n                            <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                              <div style={{ fontWeight: \"bold\" }}>\r\n                                <Link\r\n                                  className=\"item\"\r\n                                  style={{ textDecoration: \"none\" }}\r\n                                  to={`/minitask/${daily_minitask.id}`}\r\n                                >\r\n                                  {daily_minitask.mini_task_name}\r\n                                </Link>\r\n                              </div>\r\n                              <div\r\n                                style={{ display: \"flex\", alignItems: \"center\" }}\r\n                              >\r\n                                <Tooltip title=\"Số đậu\" placement=\"top\">\r\n                                  <div style={{ color: \"#9d9d9d\" }}>\r\n                                    Số đậu: {daily_minitask.code_point}\r\n                                  </div>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                  <div style={{ marginLeft: 10 }}>\r\n                                    {this.renderLevelMinitaskChip(daily_minitask)}\r\n                                  </div>\r\n                                </Tooltip>\r\n                              </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"auto\" }} />{\" \"}\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(Overview));\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./certificate.css\";\r\nconst styles = {};\r\n\r\nclass Certificate extends Component {\r\n  componentDidMount() {\r\n    // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n    // const currentParams = getParams(location.pathname);\r\n    // console.log(currentParams);\r\n    // axios\r\n    //   .get(\r\n    //     `http://localhost:8081/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n    //   )\r\n    //   .then(res => {\r\n    //     console.log(res.data);\r\n    //     const tasks = res.data;\r\n    //     let tasks1 = tasks.reverse();\r\n    //     this.setState({ tasks: tasks1, isLoading: false });\r\n    //   });\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const Certificate = this.props.Certificate;\r\n\r\n    //   const { isLoading } = this.state;\r\n    return (\r\n      <Grid\r\n        style={{\r\n          minWidth: \"1000px\",\r\n          minHeight: \"700px\",\r\n          background: `url(\"/certificateBackground.jpg\") no-repeat`,\r\n          backgroundSize: \"100%\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <div  className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\" style={{marginLeft: 100, marginTop: 80}}>\r\n                <img src=\"../logo_HCMUTE.png\" alt=\"\" height=\"80\" width=\"80\" />\r\n            </div>\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\" style={{position: 'absolute',right: 100, top: 80}}>\r\n                <img src=\"../logo.png\" alt=\"\" height=\"80\" width=\"80\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <Grid\r\n          container\r\n          style={{\r\n            justifyContent: \"center\",\r\n           \r\n            position: \"absolute\",\r\n            top:\"37%\"\r\n          }}\r\n        >\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <p\r\n              style={{ fontFamily: `'Dancing Script', cursive`, fontSize: 40, margin:\"15px 0px\", textAlign: \"center\",}}\r\n            >\r\n              {Certificate.user === undefined ?\"\":Certificate.user.lastname} {Certificate.user === undefined ?\"\":Certificate.user.firstname}\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} style={{margin:\"0px 135px\"}}>\r\n            {\" \"}\r\n            \r\n            <div><p style={{ fontFamily: `'Dancing Script', cursive`, fontSize:30,margin:\"20px 0px\", textAlign:\"center\"}}>For successfully completion of Java program following Hocode qualification .</p></div>\r\n            <div><p style={{ margin:\"20px 0px\", textAlign:\"center\",textTransform:\"uppercase\",fontWeight:\"bold\",fontSize:20}}>ID:  {Certificate.cert === undefined ?\"\":Certificate.cert.search_id}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",left:\"22%\",bottom:\"14%\",transform:\"translateX(-50%)\"}}>\r\n        {Certificate.cert === undefined ?\"\":new Date(Certificate.cert.timestamp).toLocaleDateString()}\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",right:\"20%\",bottom:\"10%\",transform:\"translateX(50%)\"}}>\r\n        {Certificate.config === undefined ?\"\": <img src={Certificate.config.electronic_signature} style={{height:90}} alt=\"electronic_signature\"/>}\r\n           \r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, {})(Certificate)\r\n);\r\n","import React, { Component } from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Course extends Component {\r\n    render() {\r\n        const { name, rating, backgroundImage, id, desc } = this.props;\r\n\r\n        return (\r\n            <Grid item xs={12} sm={4} md={4}>\r\n                <Card>\r\n                    <CardMedia\r\n                        style={{ height: '150px' }}\r\n                        image={backgroundImage}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent container>\r\n                        <Link\r\n                            className=\"item\"\r\n                            key={id}\r\n                            style={{ textDecoration: \"none\" }}\r\n                            to={`/profile/courses/${id}/tasks`}\r\n                        >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontWeight: 600, color: \"#3B3C54\" }}>\r\n                                {name}\r\n                            </Typography>\r\n                        </Link>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Rating name=\"read-only\" value={rating} precision={0.5} readOnly />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs={12} sm={6} md={6}>\r\n                            <Typography variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{\r\n                              height: 20,\r\n                              overflow: \"hidden\",\r\n                              wordBreak: \"break-word\",\r\n                              fontSize: 14,\r\n                            }}\r\n                            >\r\n                                {desc}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { status, level, name, minitask } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box mx={2}>\r\n                    <Divider />\r\n                    <Box>\r\n                        <Grid container mx={2}>\r\n                            <ListItem button component={props => <Link to={`/minitask/${minitask.id}`} {...props} />}>\r\n                                <Grid xs={2} md={2} sm={2}>\r\n                                    {this.renderStatus(status)}\r\n                                </Grid>\r\n                                <Grid container xs={6} md={6} sm={6}>\r\n                                    <Typography noWrap variant=\"button\">{name}</Typography>\r\n                                </Grid>\r\n                                <Grid xs={4} md={4} sm={4}>\r\n                                    {this.renderLevel(level)}\r\n                                </Grid>\r\n                            </ListItem>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Divider />\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Minitask from './Minitask';\r\nimport axios from 'axios';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    Chart,\r\n    PieSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nclass Practice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            user_minitask: [],\r\n            user_minitask_favourite: [],\r\n            isLoading: true,\r\n            chartInfo: [],\r\n            data: [],\r\n            allTask: [],\r\n            tab: 0\r\n        });\r\n    }\r\n\r\n    handleChangeTab = (event, newValue) => {\r\n        this.setState({ tab: newValue });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskPractice`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ user_minitask: res.data });\r\n        });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskFavouriteList`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ user_minitask_favourite: res.data });\r\n        });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`)\r\n            .then(res => {\r\n                console.info(res.data)\r\n                const chartInfo = res.data;\r\n                const data = [\r\n                    { key: 'Medium', value: chartInfo.medium },\r\n                    { key: 'Hard', value: chartInfo.hard },\r\n                    { key: 'Easy', value: chartInfo.easy },\r\n                ];\r\n\r\n                const allTask = [\r\n                    { key: 'Todo', value: chartInfo.todo - (chartInfo.solved + chartInfo.attempted) },\r\n                    { key: 'Attempted', value: chartInfo.attempted },\r\n                    { key: 'Solved', value: chartInfo.solved },\r\n                ];\r\n\r\n                this.setState({\r\n                    data,\r\n                    allTask,\r\n                    chartInfo,\r\n                    isLoading: false\r\n                }, () => {\r\n                    console.log(this.state.data);\r\n                    console.log(this.state.allTask);\r\n                })\r\n            });\r\n    }\r\n\r\n    renderLevel = (color, nums) => {\r\n        return <Box style={{ position: 'relative' }} >\r\n            <img\r\n                component=\"img\"\r\n                style={{ color: \"red\" }}\r\n                height=\"100\"\r\n                width=\"100\"\r\n                alt=\"\"\r\n                src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources-cdn/Images/cv/badge-created.svg?v=4\"\r\n            />\r\n            <div style={{\r\n                position: 'absolute',\r\n                color: 'black',\r\n                left: '50%',\r\n                top: '28%',\r\n                transform: 'translateX(-50%)'\r\n            }} >\r\n                <Box>\r\n                    <Typography variant=\"h4\" style={{ color: color }}>\r\n                        {nums}\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <FavoriteIcon style={{ color: color }} />\r\n                </Box>\r\n            </div>\r\n        </Box>\r\n    }\r\n\r\n    renderMinitaskInfo = (level, nums) => {\r\n        var color = \"\", title = \"\";\r\n        if (level === \"easy\") {\r\n            color = \"#7BC043\";\r\n            title = \"đơn giản\";\r\n        }\r\n        else if (level === \"medium\") {\r\n            color = \"#F69046\";\r\n            title = \"trung bình\";\r\n        }\r\n        else if (level === \"hard\") {\r\n            color = \"#EE4035\";\r\n            title = \"phức tạp\";\r\n        }\r\n        return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n            <Grid item xs={4}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box>\r\n                        {this.renderLevel(color, nums)}\r\n                    </Box>\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box>\r\n                        <Typography variant=\"overline\">{nums} bài {title}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Fade>\r\n    }\r\n\r\n    render() {\r\n        const { user_practice_info } = this.props;\r\n        const { user_minitask, user_minitask_favourite, isLoading, chartInfo, data: chartData, tab } = this.state;\r\n        const minitaskList = user_minitask.map((minitask, i) => {\r\n            return <Fade in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}>\r\n                <Minitask minitask={minitask} name={minitask.mini_task_name} status={minitask.status} level={minitask.level} />\r\n            </Fade>;\r\n        });\r\n        const user_minitask_favourite_list = user_minitask_favourite.map((minitask, i) => {\r\n            return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1500 } : {})}>\r\n                <Minitask minitask={minitask} name={minitask.mini_task_name} status={minitask.status} level={minitask.level} />\r\n            </Fade>;\r\n        });\r\n        return (\r\n            <Box mt={1}>\r\n                {isLoading ?\r\n                    <Box p={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    </Box>\r\n                    :\r\n                    <React.Fragment>\r\n                        <AppBar position=\"static\" style={{backgroundColor:\"white\", color: \"#3B3B3B\"}}>\r\n                            <Tabs value={tab} onChange={this.handleChangeTab}\r\n                             aria-label=\"simple tabs example\" centered>\r\n                                <Tab label=\"Luyện tập\" />\r\n                                <Tab label=\"Yêu thích\" />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel value={tab} index={0}>\r\n                            <Paper\r\n                            // style={{\r\n                            //     minHeight: 250,\r\n                            //     // overflowY: \"auto\",\r\n                            //     display: \"flex\",\r\n                            //     flexDirection: \"column\"\r\n                            // }}\r\n                            >\r\n                                <Grid container xs={12}>\r\n                                    <Grid container item style={{ flexGrow: 1 }}>\r\n                                        <Box p={2}>\r\n                                            <Typography noWrap variant=\"h6\" component=\"h1\">Luyện tập</Typography>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Box p={2}>\r\n                                    <Grid container spacing={3}>\r\n                                        {this.renderMinitaskInfo(\"easy\", user_practice_info.easy)}\r\n                                        {this.renderMinitaskInfo(\"medium\", user_practice_info.medium)}\r\n                                        {this.renderMinitaskInfo(\"hard\", user_practice_info.hard)}\r\n                                        {/* {this.renderMinitaskInfo(\"easy\",(user_practice_info.total))} */}\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box mx={2}>\r\n                                    <Divider />\r\n                                </Box>\r\n                                <Grid container>\r\n                                    <Grid item xs={7}>\r\n                                        <Box p={2}>\r\n                                            <Typography variant=\"h6\" component=\"h1\">Đã tham gia ({user_minitask.length})</Typography>\r\n                                        </Box>\r\n                                        <Box mb={2}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    {minitaskList}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        {/* <Box p={2}>\r\n                                    <Typography variant=\"h6\" component=\"h1\">Thích ({user_minitask_favourite_list.length})</Typography>\r\n                                </Box>\r\n                                <Box mb={2}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            {user_minitask_favourite_list}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box> */}\r\n                                        <Paper style={{ backgroundColor: \"#FAFAFA\" }}>\r\n                                            <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"h5\">SỐ BÀI ĐÃ LÀM</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {chartInfo.easy === 0 && chartInfo.medium === 0 && chartInfo.hard === 0 ?\r\n                                                <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Typography variant=\"button\">Bạn chưa thực hiện bài thực hành nào</Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                :\r\n                                                <Chart\r\n                                                    data={chartData}\r\n                                                >\r\n                                                    <PieSeries\r\n                                                        valueField=\"value\"\r\n                                                        argumentField=\"key\"\r\n                                                        innerRadius={0.6}\r\n                                                    />\r\n                                                    {/* <Title\r\n                                                text=\"SỐ BÀI ĐÃ LÀM\"\r\n                                            /> */}\r\n                                                    <Animation />\r\n                                                </Chart>\r\n                                            }\r\n                                            <Box display=\"flex\" justifyContent=\"center\" p={2} alignItems=\"center\">\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#9CCC65\" }}>\r\n                                                        Easy: {chartInfo.easy + \"/\" + chartInfo.total_easy}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#42A5F5\" }}>\r\n                                                        Medium: {chartInfo.medium + \"/\" + chartInfo.total_medium}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#FF7043\" }}>\r\n                                                        Hard: {chartInfo.hard + \"/\" + chartInfo.total_hard}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </TabPanel>\r\n                        <TabPanel value={tab} index={1}>\r\n                            <Box mb={2}>\r\n                                <Paper\r\n                                // style={{\r\n                                //     minHeight: 250,\r\n                                //     // overflowY: \"auto\",\r\n                                //     display: \"flex\",\r\n                                //     flexDirection: \"column\"\r\n                                // }}\r\n                                >\r\n                                    <Box p={2}>\r\n                                        <Typography variant=\"h6\" component=\"h1\">Thích ({user_minitask_favourite_list.length})</Typography>\r\n                                    </Box>\r\n                                    {user_minitask_favourite_list.length === 0 ?\r\n                                        <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                            <Box>\r\n                                                <Typography variant=\"h2\">Bạn chưa thích bài nào</Typography>\r\n                                            </Box>\r\n                                        </Box>\r\n                                        :\r\n                                        <Box p={2}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    {user_minitask_favourite_list}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    }\r\n                                </Paper>\r\n                            </Box>\r\n                        </TabPanel>\r\n                    </React.Fragment>\r\n                }\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Practice;","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Divider from \"@material-ui/core/Divider\";\r\nimport Certificate from \"./Certificate\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport Course from './Course';\r\nimport Practice from './Practice';\r\nimport Slide from '@material-ui/core/Fade';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n// const styles = {};\r\n\r\nclass PrintBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitasks: [],\r\n      openDialogCertificate: false,\r\n      isLoading: true,\r\n      certificateViewStart: {},\r\n      certificate: {},\r\n      review_point: 5000,\r\n      user_codepoint: 0,\r\n      isLoadingCert: false,\r\n      user_course: [],\r\n      user_practice_info: {},\r\n    };\r\n  }\r\n\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      // axios\r\n      //   .get(`http://localhost:8081/api/v1/curd/configs/byname/hocode`)\r\n      //   .then(res => {\r\n      //     console.log(res.data);\r\n      //     const certificateConfig = res.data;\r\n\r\n      //     this.setState({ review_point: certificateConfig.review_point });\r\n      //   }),\r\n      axios.get(\"http://localhost:8081/auth/userinfo\").then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_codepoint: res.data.codepoint });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/auth/viewcert`).then(res => {\r\n        const certificate = res.data;\r\n        console.log(res.data);\r\n        this.setState({ certificateViewStart: certificate });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/auth/usercourseProfile`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_course: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_practice_info: res.data })\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  getCertificate = async () => {\r\n    this.setState({ isLoadingCert: true });\r\n    this.setState({\r\n      openDialogCertificate: true\r\n    });\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/auth/reviewcert`).then(res => {\r\n        const certificate = res.data;\r\n        console.log(res.data);\r\n        this.setState({ certificateViewStart: certificate });\r\n        this.setState({ isLoadingCert: false });\r\n\r\n      })\r\n    ]);\r\n  };\r\n  handleDialogCertificateOpen = () => {\r\n    this.setState({\r\n      openDialogCertificate: true\r\n    });\r\n    //this.getCertificate();\r\n  };\r\n  handleDialogCertificateCheck = () => {\r\n\r\n    this.getCertificate();\r\n  };\r\n\r\n  handleDialogCertificateClose = () => {\r\n    this.setState({ openDialogCertificate: false });\r\n  };\r\n\r\n  renderButtonCertificate(certificateViewStart) {\r\n    if (certificateViewStart.cert !== undefined) {\r\n      if (certificateViewStart.cert.status === \"Inactive\" || certificateViewStart.cert.status === \"\") {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateCheck}\r\n          >\r\n            Xét chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n      else if (certificateViewStart.cert.status === \"Active\") {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateOpen}\r\n          >\r\n            Xem chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateOpen}\r\n            disabled={true}\r\n          >\r\n            Đang xét chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  renderDialog = (certificate) => {\r\n    if (certificate.cert !== undefined) {\r\n      if (certificate.cert.status === \"Inactive\" || certificate.cert.status === \"\") {\r\n        return (\r\n          <DialogContent dividers>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{ marginLeft: 4, textAlign: \"center\" }}\r\n            >\r\n              Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n              {this.state.review_point}\r\n            </Typography>\r\n          </DialogContent>\r\n        )\r\n      }\r\n      else if (certificate.cert.status === \"Active\") {\r\n        return (<>\r\n\r\n          <DialogContent dividers>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Certificate\r\n                  ref={el => (this.CertificateRef = el)}\r\n                  Certificate={this.state.certificateViewStart}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.handleDialogCertificateClose}\r\n          >\r\n            <Grid\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <ReactToPrint\r\n                trigger={() => (\r\n                  <Button\r\n                    style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    In chứng chỉ\r\n                  </Button>\r\n                )}\r\n                content={() => this.CertificateRef}\r\n              />\r\n            </Grid>\r\n          </DialogTitle>\r\n        </>)\r\n      }\r\n      else {\r\n        return (\r\n          <DialogContent dividers>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{ marginLeft: 4, textAlign: \"center\" }}\r\n            >\r\n              Đã gửi yêu cầu xét chứng chỉ.\r\n            </Typography>\r\n          </DialogContent>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const { user_course, user_practice_info } = this.state;\r\n    const courseList = user_course.map((course, i) => {\r\n      return <Slide in={true} direction=\"down\" {...(true ? { timeout: 1500 } : {})}>\r\n        <Course desc={course.course_desc} id={course.id} name={course.course_name} backgroundImage={course.background_image} rating={course.rating_value} />\r\n      </Slide>\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                style={{ height: \"100%\", maxHeight: \"352px\" }}\r\n              >\r\n                <Grid item xs={12} sm={4} md={4}>\r\n                  <Paper\r\n                    style={{\r\n                      height: \"100%\",\r\n                      maxHeight: \"320px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\"\r\n                    }}\r\n                  >\r\n                    <Grid container direction=\"row\">\r\n                      <Grid item xs={12} md={12} sm={12}>\r\n                        <Grid item xs={12} md={12} sm={12}>\r\n                          <Box display=\"flex\" p={1} bgcolor=\"grey.300\">\r\n                            <Box mr={1} mt={1} flexGrow={1}>\r\n                              <PersonIcon fontSize=\"large\" />\r\n                            </Box>\r\n                            <Box mt={1} flexGrow={6}>\r\n                              <Typography variant=\"h5\">Thông tin cá nhân</Typography>\r\n                            </Box>\r\n                            {/* <Box>\r\n                              <IconButton color=\"primary\" aria-label=\"Edit\">\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </Box> */}\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} sm={12}>\r\n                          <Grid container xs={12}>\r\n                            <Grid item xs={4} md={4} sm={4} borderColor=\"grey.500\">\r\n                              <Box p={1}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Contemplative Reptile\"\r\n                                  height=\"100\"\r\n                                  src={this.props.user.avatar}\r\n                                  title=\"Contemplative Reptile\"\r\n                                />\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item xs={8} md={8} sm={8} borderColor=\"grey.500\">\r\n                              <Grid item container xs={12} md={12} sm={12}>\r\n                                <Typography noWrap variant=\"overline\">\r\n                                  Họ và tên: {this.props.user.lastname}{\" \"}\r\n                                  {this.props.user.firstname}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item container xs={12} md={12} sm={12}>\r\n                                <Typography noWrap variant=\"overline\">Email: {this.props.user.email}</Typography>\r\n                              </Grid>\r\n                              <Grid item container xs={12} md={12} sm={12} zeroMinWidth>\r\n                                <Typography noWrap variant=\"overline\">Điểm: {this.props.user.codepoint}</Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={12} sm={12}>\r\n                        <Box mx={1}>\r\n                          {this.renderButtonCertificate(this.state.certificateViewStart)}\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={12} sm={12}>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                          style={{ marginLeft: 4, textAlign: \"center\" }}\r\n                        >\r\n                          Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n                          {this.state.review_point}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={8}>\r\n                  <Paper\r\n                    style={{\r\n                      minHeight: 350,\r\n                      overflowY: \"auto\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\"\r\n                    }}\r\n                  >\r\n                    <Grid container>\r\n                      <Grid item container style={{ flexGrow: 1 }}>\r\n                        <Box mx={2} mt={1}>\r\n                          <Typography noWrap variant=\"h6\">Học tập</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Box p={2}>\r\n                      <Grid container spacing={2}>\r\n                        {courseList.length === 0 ?\r\n                          <Box p={1}>\r\n                            <Typography variant=\"h3\">Bạn chưa tham gia khóa học nào</Typography>\r\n                          </Box>\r\n                          :\r\n                          courseList\r\n                        }\r\n                      </Grid>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n                <Dialog\r\n                  maxWidth={false}\r\n                  open={this.state.openDialogCertificate}\r\n                  onClose={this.handleDialogCertificateClose}\r\n                  aria-labelledby=\"customized-dialog-title\"\r\n                >\r\n                  {\" \"}\r\n                  {this.state.isLoadingCert === true ? (\r\n                    <div\r\n                      className=\"sweet-loading\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        overflow: \"hidden\"\r\n                      }}\r\n                    >\r\n                      <HashLoader\r\n                        sizeUnit={\"px\"}\r\n                        size={50}\r\n                        color={\"#AEA8A8\"}\r\n                        loading={this.state.isLoadingCert}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                      this.renderDialog(this.state.certificateViewStart)\r\n                    )}\r\n                </Dialog>\r\n              </Grid>\r\n              <Box mt={2}>\r\n                <Grid container xs={12}>\r\n                  <Grid item xs={12}>\r\n                    <Practice user_practice_info={user_practice_info} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </React.Fragment>\r\n          )\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(null, { withTheme: true })(\r\n  connect(mapStateToProps, {})(PrintBody)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./taskItem.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"20px\",\r\n    overflow: \"hidden\",\r\n    marginBottom: \"50px\",\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.2) 0px 0px 0px 0px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px\"\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"8px\",\r\n    backgroundColor: \"#dddddd\",\r\n    padding: \"5px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\n\r\n\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass TaskItem extends Component {\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n    var { task } = this.props;\r\n    if (minitask.status === \"hoanthanh\") {\r\n      return (\r\n        // <Link\r\n        //   to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n        //   style={{\r\n        //     display: \"flex\",\r\n        //     textDecoration: \"none\",\r\n        //     color: \"#595959\",\r\n        //     alignItems: \"center\",\r\n        //     margin: \"auto\"\r\n        //   }}\r\n        // >\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n          <Grid container item xs={4} sm={4} spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n              <Typography container noWrap style={{ flexGrow: 1, wordBreak: \"break-all\" }}>\r\n                <Link\r\n                  to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n                  style={{\r\n                    textDecoration: \"none\"\r\n                  }}\r\n                >\r\n                  {minitask.mini_task_name}\r\n                </Link>\r\n              </Typography>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2} spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            <Tooltip title=\"Số đậu\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  fontSize: 12,\r\n                  margin: \"0px 4px\",\r\n                  color: \"#4978cc\",\r\n                  // marginLeft: 10,\r\n                  height: 30\r\n                }}\r\n                className=\"centerDiv\"\r\n              >\r\n                <div>\r\n                  <p\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      verticalAlign: \"middle\",\r\n                      lineHeight: \"30px\",\r\n                      margin: 0\r\n                    }}\r\n                  >\r\n                    {minitask.code_point}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <EmojiNatureIcon style={{ fontSize: 24, marginRight: 1 }} />\r\n                </div>\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\" item xs={2} sm={2} spacing={1} >\r\n            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n              <div className=\"level-minitask\" style={{ marginLeft: 10 }}>\r\n                {\" \"}\r\n                {this.renderLevelMinitaskChip(minitask)}\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2} direction=\"row\">\r\n            <Tooltip title=\"Hoàn thành\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  width: \"20px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  // marginLeft: 10\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ width: \"100%\" }}\r\n                  src={require(\"../icons/hoanthanh.svg\")}\r\n                  alt=\"Kiwi standing on oval\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2}>\r\n            <Tooltip title=\"Số lượt làm còn lại\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: 0\r\n                }}\r\n\r\n              > {minitask.numbers_doing > 0 ? (\r\n                <p><b style={{ color: \"red\" }}>{minitask.numbers_doing}</b> <i>&nbsp;lượt</i></p>\r\n              ) : (<b><i style={{ color: \"red\" }}>Hết lượt</i></b>)}\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        // </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri === true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{ width: \"1em\" }}>\r\n            <img\r\n              style={{ width: \"100%\" }}\r\n              src={require(\"../icons/user.svg\")}\r\n              alt=\"Kiwi standing on oval\"\r\n            />\r\n          </div>\r\n        </a>\r\n      );\r\n    } else if (\r\n      minitask.status === \"chuahoanthanh\" &&\r\n      minitask.vitri === false\r\n    ) {\r\n      return (\r\n        // <Link\r\n        //   to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n        //   style={{\r\n        //     display: \"flex\",\r\n        //     textDecoration: \"none\",\r\n        //     color: \"#595959\",\r\n        //     alignItems: \"center\",\r\n        //     margin: \"auto\"\r\n        //   }}\r\n        // >\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n          <Grid container item xs={12} sm={4} md={4} spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n            <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n              <Typography container noWrap style={{ flexGrow: 1, wordBreak: \"break-all\" }}>\r\n                <Link\r\n                  to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    fontWeight: 400\r\n                  }}\r\n                >\r\n                  {minitask.mini_task_name}\r\n                </Link>\r\n              </Typography>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2} spacing={1} >\r\n            <Tooltip title=\"Số đậu\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  fontSize: 12,\r\n                  margin: \"0px 4px\",\r\n                  color: \"#4978cc\",\r\n                  marginLeft: 10\r\n                }}\r\n              >\r\n                {minitask.code_point}\r\n                <EmojiNatureIcon style={{ fontSize: 16, marginRight: 1 }} />\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2} spacing={1} >\r\n            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n              <div className=\"level-minitask\" style={{ marginLeft: 10 }}>\r\n                {\" \"}\r\n                {this.renderLevelMinitaskChip(minitask)}\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2}>\r\n            <Tooltip title=\"Chưa hoàn thành\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  width: \"20px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  // marginLeft: 10\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#F5F5F5\",\r\n                    borderRadius: \"50%\"\r\n                  }}\r\n                  src={require(\"../icons/chuahoanthanh.svg\")}\r\n                  alt=\"Kiwi standing on oval\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid container item xs={2} sm={2}>\r\n            <Tooltip title=\"Số lượt làm còn lại\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: 0\r\n                }}\r\n\r\n              > {minitask.numbers_doing > 0 ?\r\n                (\r\n                  <p>\r\n                    <b style={{ color: \"red\" }}>\r\n                      {minitask.numbers_doing}\r\n                    </b>\r\n                    <i>&nbsp;lượt</i>\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    <b>\r\n                      <i style={{ color: \"red\" }}>Hết lượt</i>\r\n                    </b>\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        // </Link>\r\n      );\r\n    } else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"1em\" }}>\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                src={require(\"../icons/padlock-unlock.svg\")}\r\n                alt=\"Kiwi standing on oval\"\r\n              />\r\n            </div>\r\n            <div className=\"hidden\" style={{ display: \"none\" }}>\r\n              {minitask.point_unlock}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes, task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n           \r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width: \"200px\",\r\n                boxShadow:\r\n                  \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              <Typography variant=\"button\">\r\n                {task.task_name}\r\n              </Typography>\r\n              {/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          >\r\n            {\" \"}\r\n            {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                borderRadius: \"20px\"\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            // container\r\n            direction=\"column\"\r\n            style={{\r\n              // padding: \"10px 0\",\r\n              background: \"white\",\r\n              // boxShadow:\r\n              //   \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {/* danh sách mini task */}\r\n            {task.minitasks.map(minitask => (\r\n              <Grid\r\n                item\r\n                className={`${classes.MiniTaskItem}`}\r\n                key={minitask.id}\r\n                style={{\r\n                  // width:\"100%\",\r\n                  // verticalAlign:\"middle\"\r\n                }}\r\n              >\r\n                {this.renderMiniItem(minitask)}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass UserRank extends Component {\r\n    render() {\r\n        let { user, rank, isCurrentUser } = this.props;\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Divider light />\r\n                {/* <Box p={1}> */}\r\n                    <Box p={1} display=\"flex\" style={{backgroundColor:  isCurrentUser ? \"#F1F1F1\" : \"\"}}>\r\n                        <Box p={1} style={{ width: '10%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {rank}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar alt=\"Cindy Baker\" src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.user_info.avt : user.user_info.avatar} />\r\n                        <Box p={1} style={{ width: '34%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {user.user_info.firstname + \" \" + user.user_info.lastname}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {user.user_point}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                {/* </Box> */}\r\n                <Divider light />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserRank;","import React, { Component } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport UserRank from \"./UserRank\";\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CourseLeaderBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseLeaderBoard: [],\r\n            isLoading: true,\r\n            currentUser: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:8081/api/v1/auth/getCourseLeaderBoard/${this.props.courseId}`).then(res => {\r\n            this.setState({ courseLeaderBoard: res.data, isLoading: false, currentUser: this.props.user });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, courseLeaderBoard } = this.state;\r\n        const leaderBoard = courseLeaderBoard.map((user, index) => {\r\n            return <UserRank user={user} rank={index + 1} isCurrentUser={user.user_info.id === this.props.user.id} />\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    isLoading ?\r\n                        <React.Fragment>\r\n                            <div\r\n                                className=\"sweet-loading\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    width: \"100%\",\r\n                                    height: \"50vh\"\r\n                                }}\r\n                            >\r\n                                <HashLoader\r\n                                    sizeUnit={\"px\"}\r\n                                    size={50}\r\n                                    color={\"#AEA8A8\"}\r\n                                    loading={isLoading}\r\n                                />\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Fade in={!isLoading} {...(true ? { timeout: 1000 } : {})}>\r\n                                <Box bgcolor=\"white\" boxShadow={2} mb={3}>\r\n                                    <Box display=\"flex\">\r\n                                        <Box p={1} style={{ width: '10%' }} >\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                #\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '36%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Tên người dùng\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '30%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Điểm\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider light />\r\n                                    {courseLeaderBoard.length!==0 ? leaderBoard : \r\n                                    <Box p={3}>\r\n                                        <Typography variant=\"h2\">Chưa có người dùng nào tham gia</Typography>\r\n                                    </Box>}\r\n                                </Box>\r\n                            </Fade>\r\n                        </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.rootReducer.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null) (CourseLeaderBoard);","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { matchPath } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { randomColor } from \"../course/CourseItem\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\n\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CourseLeaderBoard from '../courseLeaderBoard/CourseLeaderBoard';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      p={1}\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Fade in={!(value !== index)} {...(true ? { timeout: 1000 } : {})}>{children}</Fade>}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    height: 150,\r\n    width: \"100%\"\r\n  },\r\n\r\n  TasksContainer: {\r\n    // paddingTop: 30,\r\n\r\n    // minHeight: \"87vh\"\r\n  }\r\n};\r\nconst getParams = pathname => {\r\n  const course = matchPath(pathname, {\r\n    path: `/profile/courses/:courseId/tasks`\r\n  });\r\n  return (course && course.params) || {};\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      isLoading: true,\r\n      course: {},\r\n      courseId: \"\",\r\n      totalMinitask: 0,\r\n      coursPassInfo: {},\r\n      courseStatus: '',\r\n      userCourse: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      value: 0,\r\n      // value to check show form reasons\r\n      showForm: false,\r\n      reason: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ reason: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({ showForm: false });\r\n\r\n    let location = this.props.location;\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    newcourse.status = \"Pedding\";\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n\r\n    // get course name \r\n    var nameCourse = this.state.course.course_name;\r\n    // eslint-disable-next-line no-useless-concat\r\n    let msg_deny = \"Subject: Thông báo từ Hocode\\r\\n\" + \"Khóa học \" + nameCourse + \" của bạn không được ban quản trị xét duyệt.\\r\\n\"\r\n    let reasonsText = \"Lí do: \" + this.state.reason\r\n    var content = msg_deny + reasonsText\r\n    console.log(msg_deny)\r\n    this.handleSendEmail(content)\r\n\r\n    alert('Thông báo đã gửi đi !');\r\n    event.preventDefault();\r\n  }\r\n  componentWillUnmount() {\r\n    this.stop();\r\n  }\r\n\r\n  handleChangeValue = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    const currentParams = getParams(location.pathname);\r\n    console.log(currentParams);\r\n\r\n    this.setState({ courseId: currentParams.courseId });\r\n\r\n    axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${currentParams.courseId}`).then(res => {\r\n      console.log(\"[CoursePass]\")\r\n      this.setState({ coursPassInfo: res.data, courseId: currentParams.courseId });\r\n      console.log(res.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:8081/api/v1/totalMinitask/${currentParams.courseId}`).then(res => {\r\n      this.setState({ totalMinitask: res.data })\r\n    });\r\n\r\n    axios.get(`http://localhost:8081/api/v1/auth/usercourse`).then(res => {\r\n      var isFound = false;\r\n      for (var i = 0; i < res.data.course_info.length; i++) {\r\n        if (res.data.course_info[i].course_id === currentParams.courseId) {\r\n          isFound = true;\r\n        }\r\n        if (isFound) {\r\n          this.setState({ userCourse: res.data.course_info[i].code_point });\r\n          break;\r\n        }\r\n      }\r\n      if (!isFound) {\r\n        this.setState({ userCourse: 0 });\r\n      }\r\n      console.log(this.state.userCourse);\r\n    });\r\n\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const tasks = res.data;\r\n        let tasks1 = tasks.reverse();\r\n        this.setState({ tasks: tasks1, isLoading: false });\r\n      });\r\n\r\n\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/courses/${currentParams.courseId}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const course = res.data;\r\n        var code;\r\n        if ((new Date() < new Date(course.start_time))) {\r\n          code = -1;\r\n        }\r\n        if ((new Date() > new Date(course.start_time)) && (new Date() < new Date(course.end_time))) {\r\n          code = 0;\r\n        }\r\n        if ((new Date() > new Date(course.end_time))) {\r\n          code = 1;\r\n        }\r\n        this.setState({ course: course, courseStatus: code });\r\n      });\r\n\r\n    this.interval = setInterval(() => {\r\n      const date = this.calculateCountdown(this.state.courseStatus === -1 ? this.state.course.start_time : this.state.course.end_time);\r\n      date ? this.setState(date) : this.stop();\r\n    }, 1000);\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n\r\n  }\r\n\r\n  onClickRating(val) {\r\n    let location = this.props.location;\r\n\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    if (newcourse.rating === null) newcourse.rating = [];\r\n    newcourse.rating.push(val);\r\n    newcourse.rating_value = average(newcourse.rating);\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      years: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n      diff -= timeLeft.years * 365.25 * 86400;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n      timeLeft.days = Math.floor(diff / 86400);\r\n      diff -= timeLeft.days * 86400;\r\n    }\r\n    if (diff >= 3600) { // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = '0' + value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // covert string utf8 to bytes array\r\n  string2Bin(str) {\r\n    var utf8 = unescape(encodeURIComponent(str));\r\n    var result = [];\r\n    for (var i = 0; i < utf8.length; i++) {\r\n      result.push(utf8.charCodeAt(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  // handle send email after click buttons. \r\n  handleSendEmail(msg) {\r\n    var to_mail = []\r\n    // to_mail.push(\"nqhien026@gmail.com\")\r\n    // to_mail.push(\"16110070@student.hcmute.edu.vn\")\r\n    to_mail.push(this.state.course.user_create)\r\n    var Message = this.string2Bin(msg)\r\n    var mail = {}\r\n    mail[\"Message\"] = Message\r\n    mail[\"To\"] = to_mail\r\n    console.log(mail)\r\n    axios\r\n      .post(\r\n        `http://localhost:8081/api/v1/sendmail`,\r\n        mail\r\n      )\r\n      .then(response => {\r\n\r\n      });\r\n  }\r\n\r\n  handleBtnAccepted() {\r\n    let location = this.props.location;\r\n\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    newcourse.status = \"Active\";\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n\r\n    // get course name \r\n    var nameCourse = this.state.course.course_name;\r\n    let msg_accept = \"Khóa học\" + nameCourse + \" của bạn đã được ban quản trị xét duyệt thành công\"\r\n    console.log(msg_accept)\r\n    this.handleSendEmail(msg_accept)\r\n  }\r\n\r\n  handleBtnDeny() {\r\n    this.setState({ showForm: true })\r\n\r\n  }\r\n\r\n  // show alert \r\n  showAlert() {\r\n    alert(\"Thông tin kiểm duyệt đã gửi cho người tạo khóa học !\")\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({ showForm: false })\r\n  }\r\n  // show form reasons \r\n  showFormReasons = () => {\r\n    return (\r\n      <div style={{ borderRadius: \"5px\", backgroundColor: \"#f2f2f2\", padding: \"20px\", margin: \"0 auto\" }} className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>Góp ý:</label>\r\n          <textarea\r\n            style={{\r\n              height: 200,\r\n              width: \"100%\", padding: \"12px\",\r\n              border: \"1px solid #ccc\",\r\n              borderTopLeftRadius: 4,\r\n              boxSizing: \"border-box\",\r\n              marginTop: 6,\r\n              marginBottom: 16,\r\n              resize: \"vertical\"\r\n            }} id=\"reasons\" name=\"reasons\" value={this.state.reason} onChange={this.handleChange} />\r\n          <input\r\n            style={{\r\n              backgroundColor: \"#4CAF50\",\r\n              color: \"white\",\r\n              padding: \"12px 12px\",\r\n              border: \"none\",\r\n              borderRadius: \"4px\",\r\n              cursor: PointerEvent,\r\n            }}\r\n            type=\"submit\" value=\"Submit\" placeholder=\"Ý kiến góp ý...\" />\r\n          <button style={{\r\n            backgroundColor: \"#4CAF50\",\r\n            color: \"white\",\r\n            padding: \"12px 12px\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: PointerEvent,\r\n            position: \"relative\", marginLeft: \"10px\"\r\n          }} onClick={() => this.handleCancel()} >Cancel</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks, course, courseStatus, value, days, hours, min, sec } = this.state;\r\n    const { isLoading } = this.state;\r\n    let courseLoop;\r\n    if (courseStatus === -1) {\r\n      if (this.props.user.role === \"admin\" || this.props.user.role === \"mod\") {\r\n        courseLoop = tasks.map(task => (\r\n          <TaskItem key={task.id} task={task} courseId={this.state.courseId} />\r\n        ))\r\n      }\r\n      else {\r\n        courseLoop =\r\n          <React.Fragment>\r\n            <Box justifyContent=\"center\">\r\n              <Typography align=\"center\" variant=\"h3\">\r\n                Course hiện tại chưa được mở vui lòng quay lại vào {new Date(course.start_time)\r\n                .toLocaleDateString('vi-VN', { year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit' })\r\n                        .replace(/T/, ' ').replace(/\\..+/, '')} nhé! <InsertEmoticonIcon />\r\n              </Typography>\r\n            </Box>\r\n          </React.Fragment>\r\n      }\r\n    }\r\n    else {\r\n      courseLoop = tasks.map(task => (\r\n        <TaskItem key={task.id} task={task} courseId={this.state.courseId} />\r\n      ))\r\n    }\r\n\r\n    let timer;\r\n    if (courseStatus === 0) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" flexGrow={1} color=\"#ef5350\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Đang diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" color=\"#f44336\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              Còn lại &nbsp;{this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === -1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#212121\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Sắp diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === 1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"h5\" display=\"block\" gutterBottom>\r\n            Tình trạng: &nbsp;\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"#757575\" display=\"block\" gutterBottom>\r\n            Kết thúc\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            {new Date(course.end_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n          </Typography>\r\n        </Box>\r\n      </React.Fragment>\r\n    }\r\n\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        {/* <Card className={classes.card}>\r\n</Card> */}\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12} style={{ marginBottom: 0 }}>\r\n                <Paper >\r\n                  <Grid container style={{ padding: 20 }} spacing={2}>\r\n                    <Grid item xs={4} sm={4}>\r\n                      <Card>\r\n                        <CardMedia\r\n                          style={{ height: 120, borderRadius: 8 }}\r\n                          image={this.state.course.background_image}\r\n                          title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                          {timer}\r\n                          <Box display=\"flex\" color=\"#5c6bc0\" justifyContent=\"flex-end\">\r\n                            <Typography variant=\"h5\">\r\n                              {this.state.userCourse ? this.state.userCourse : 0} <EmojiNatureIcon />\r\n                            </Typography>\r\n                          </Box>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={8}>\r\n                      <Box display=\"flex\">\r\n                        <Box flexGrow={1} mt={1} mb={2}>\r\n                          <Typography variant=\"h3\" component=\"h3\" style={{fontWeight: 400}}>\r\n                            {course.course_name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box mt={3} mb={2}>\r\n                          {course.status === \"Active\" ? null : (\r\n                            <Box display=\"flex\">\r\n                              <Box p={1}>\r\n                                <Button size=\"small\"\r\n                                  variant=\"contained\"\r\n                                  aria-label=\"small outlined button group\"\r\n                                  color=\"primary\"\r\n                                  onClick={\r\n                                    () => { this.handleBtnAccepted(); this.showAlert(); }\r\n                                  }>\r\n                                  Duyệt khóa học\r\n                                </Button>\r\n                              </Box>\r\n                              <Box p={1}>\r\n                                <Button size=\"small\"\r\n                                  variant=\"contained\"\r\n                                  aria-label=\"small outlined button group\"\r\n                                  color=\"secondary\"\r\n                                  onClick={\r\n                                    () => { this.handleBtnDeny() }\r\n                                  }>\r\n                                  Góp ý\r\n                                </Button>\r\n                              </Box>\r\n                            </Box>\r\n                          )}\r\n                        </Box>\r\n                      </Box>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        container\r\n                        style={{ justifyContent: \"space-between\" }}\r\n                      >\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            className={classes.smallAvatar}\r\n                            style={{ backgroundColor: randomColor() }}\r\n                          >\r\n                            {\" \"}\r\n                            {course.user_create\r\n                              ? course.user_create.charAt(0).toUpperCase()\r\n                              : \"H\"}\r\n                          </Avatar>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{ marginLeft: 6, fontWeight: 600 }}\r\n                          >\r\n                            {/* {course.total_minitask} */}\r\n                            {course.user_create !== \"\"\r\n                              ? course.user_create\r\n                              : \"Hocode\"}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                          }}\r\n                        >\r\n                          <Rating\r\n                            name=\"a\"\r\n                            value={course.rating_value}\r\n                            read-only=\"true\"\r\n                            precision={0.5}\r\n                            size=\"large\"\r\n                            onChange={(event, newValue) => {\r\n                              this.onClickRating(newValue);\r\n                            }}\r\n                          />\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{ marginLeft: 4, fontWeight: 600 }}\r\n                          >\r\n                            {/* {course.total_minitask} */}\r\n                            Đánh giá({course.rating ? course.rating.length : 0})\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                          }}\r\n                        >\r\n                          <Box display=\"flex\">\r\n                            <LaptopIcon fontSize=\"medium\" />\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"textSecondary\"\r\n                              component=\"p\"\r\n                              style={{ marginLeft: 7, fontSize: 15, fontWeight: 500 }}\r\n                            >\r\n                              {/* {course.total_minitask} */}\r\n                              {this.state.totalMinitask} bài học\r\n                            </Typography>\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} style={{ paddingTop: '15px'}}>\r\n                          <Typography style={{fontSize: 15, color: \"#757575\", fontWeight: 400, lineHeight: \"25.5px\"}}>\r\n                            {course.course_desc}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\"\r\n                        }}\r\n                      >\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid xs={12} justify=\"center\" >\r\n                <AppBar position=\"static\" style={{ backgroundColor: \"#FAFAFA\", color: \"#242424\" }}>\r\n                  <Tabs value={value} onChange={this.handleChangeValue} variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Bài tập\" />\r\n                    <Tab label=\"Xếp hạng\" />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                  <Box display=\"flex\" justifyContent=\"center\" p={1} className=\"Hello\">\r\n                    <Grid item xs={12} sm={6} >\r\n                      {courseLoop}\r\n                    </Grid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <Box display=\"flex\" justifyContent=\"center\" p={1} className=\"Hello\">\r\n                    <Grid item xs={12} sm={12} >\r\n                      <CourseLeaderBoard courseId={this.state.courseId} />\r\n                    </Grid>\r\n                  </Box>\r\n                </TabPanel>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        {this.state.showForm ? this.showFormReasons() : null}\r\n      </Grid>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst average = list => list.reduce((prev, curr) => prev + curr) / list.length;\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(TaskBody));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\"\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight: \"unset\",\r\n    height: \"25px\",\r\n    \"&:focus\": {\r\n      // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\nfunction CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: 3 }}>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{ color: \"#282828\" }}\r\n      />\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <AccountBoxIcon style={{ fontSize: 16 }} />\r\n\r\n          <Link\r\n            to=\"/profile/account\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={() => {\r\n              setAnchorEl(null);\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 12,\r\n                marginLeft: \"3px\",\r\n                textDecoration: \"none\"\r\n              }}\r\n            >\r\n              Thông tin cá nhân\r\n            </p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <SearchIcon style={{ fontSize: 16 }} />\r\n\r\n          <Link\r\n            to=\"/searchcert\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={() => {\r\n              setAnchorEl(null);\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 12,\r\n                marginLeft: \"3px\",\r\n                textDecoration: \"none\"\r\n              }}\r\n            >\r\n              Tra chứng chỉ\r\n            </p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n          <ExitToAppIcon style={{ fontSize: 16 }} />\r\n          <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(CustomizedMenus);\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import Typography from \"@material-ui/core/Typography\";\r\n//import Paper from \"@material-ui/core/Paper\";\r\n//import InputBase from \"@material-ui/core/InputBase\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport \"./appbarcontent.css\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\n//import IconButton from \"@material-ui/core/IconButton\";\r\nconst styles = theme => ({\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  },\r\n  mobileHide: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\nclass AppBarContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {/* <Typography variant=\"h6\" noWrap style={{ borderRadius: \"30px\" }}>\r\n              {\" \"}\r\n            \r\n              <Paper className={classes.searchComponent}>\r\n                <InputBase\r\n                  className={classes.inputSearchComponent}\r\n                  placeholder=\"Tìm kiếm khóa học,...\"\r\n                  inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                />\r\n                <IconButton\r\n                  className={classes.iconButtonSearchComponent}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n            </Typography> */}\r\n\r\n            {this.props.user.role === \"mod\" ||\r\n            this.props.user.role === \"admin\" ? (\r\n              <Link\r\n                to=\"/profile/minitasks/createminitask\"\r\n                style={{ textDecoration: \"none\",\r\n              \r\n              \r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n              >\r\n                <Fab\r\n                  //className={classes.mobileHide}\r\n                  variant=\"extended\"\r\n                  aria-label=\"like\"\r\n                  style={{\r\n                    height: \"32px\",\r\n                    fontSize: \"10px\",\r\n                    background: \"#dbe4f8\",\r\n                    color: \"#1f74be\",\r\n                    marginLeft: 10\r\n                  }}\r\n                >\r\n                  <NavigationIcon style={{ fontSize: 14, marginRight: 2 }} />\r\n                  <div className=\"dangBaiTap\">Đăng bài thực hành</div>\r\n                </Fab>\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                margin: \"0px 4px\",\r\n                color: \"#4978cc\",\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div>\r\n              Số đậu: {this.props.user.codepoint}\r\n</div>              <div>\r\n              \r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"#595959\",\r\n                // fontFamily: \"Yanone Kaffeesatz, sans-serif\",\r\n                fontSize: \"20px\",\r\n\r\n                padding: \"5px\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <div>{this.props.user.firstname} </div>\r\n            </div>\r\n            <Avatar\r\n              className={classes.mobileHide}\r\n              style={{ width: \"30px\", height: \"30px\", marginLeft: 10 }}\r\n              alt=\"Remy Sharp\"\r\n              src={this.props.user.avatar}\r\n            />\r\n            <UserMenu />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(AppBarContent)\r\n);\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: 151\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  }\r\n});\r\nclass NavRight extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      daily_minitask: {},\r\n      isLoading: true,\r\n      books: [],\r\n      events: [],\r\n      openDialogReadmore: false,\r\n      bookcontent: \"\",\r\n      booktitlet: \"\",\r\n      bookImage: \"\"\r\n    };\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  handleClickDialogReadmoreOpen = (bookcontent, bookImage, booktitlet) => {\r\n    this.setState({\r\n      openDialogReadmore: true,\r\n      bookcontent: bookcontent,\r\n      bookImage: bookImage,\r\n      booktitlet: booktitlet\r\n    });\r\n  };\r\n\r\n  handleDialogReadmoreClose = () => {\r\n    this.setState({ openDialogReadmore: false });\r\n  };\r\n  componentDidMount() {\r\n    this.props.getUser();\r\n    this.getApi();\r\n  }\r\n  limitText(text, limitNum) {\r\n    let newText = text;\r\n    if (text.length > limitNum) {\r\n      newText = text.substring(0, limitNum);\r\n    }\r\n    return newText;\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const itemCard = (listitem, type, time) => (\r\n      <Grid\r\n        xs\r\n        item\r\n        // style={{\r\n        //   flexDirection: \"column\",\r\n        //   justifyContent: \"center\",\r\n        //   display: \"flex\"\r\n        // }}\r\n      >\r\n        <p style={{fontWeight:\"bold\"}}>{type === \"books\" ? \"Sách lập trình\" : \"\"} {type === \"events\" ? \"Sự kiện nổi bật\" : \"\"}</p>\r\n        \r\n\r\n        <Carousel indicators={false} interval={time}>\r\n          {/* <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Sách đề xuất\r\n          </Typography> */}\r\n          {listitem.map(book => {\r\n            return (\r\n              <React.Fragment key={book.id}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                  <Grid\r\n                    style={{\r\n                      marginTop: 10,\r\n                      marginBottom: 10\r\n                    }}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          if (type === \"books\") {\r\n                            this.handleClickDialogReadmoreOpen(\r\n                              book.content,\r\n                              book.image,\r\n                              book.title\r\n                            );\r\n                          }\r\n                          if (type === \"events\") {\r\n                            window.open(book.link, \"_blank\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        {/* <img\r\n                         \r\n                          alt=\"complex\"\r\n                          src={book.image}\r\n                        /> */}\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: type === \"books\" ? \"200px\" : \"60px\",\r\n                            // objectFit: \"cover\",\r\n                            background: `url(${book.image}) no-repeat center`,\r\n                            backgroundSize: \"cover\"\r\n                          }}\r\n                        ></div>\r\n                        <CardContent>\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h2\"\r\n                            style={{\r\n                              height: 55,\r\n                              overflow: \"hidden\",\r\n                              wordBreak: \"break-word\"\r\n                            }}\r\n                          >\r\n                            {book.title}\r\n                          </Typography>\r\n\r\n                          {book.content.length > 100 ? (\r\n                            <React.Fragment>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                                style={{\r\n                                  height: 48,\r\n                                  overflow: \"hidden\",\r\n                                  wordBreak: \"break-word\"\r\n                                }}\r\n                              >\r\n                                {this.limitText(book.content, 100)}...\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            book.content\r\n                          )}\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        <Dialog\r\n          open={this.state.openDialogReadmore}\r\n          onClose={this.handleDialogReadmoreClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.handleDialogReadmoreClose}\r\n          >\r\n            {this.state.booktitlet}\r\n          </DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  background: `url(${this.state.bookImage}) no-repeat center`,\r\n                  backgroundSize: \"cover\",\r\n                  height: \"300px\"\r\n                }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                xs={8}\r\n                style={{\r\n                  padding: \"16px\"\r\n                }}\r\n              >\r\n                {/* <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.booktitlet}\r\n\r\n                </DialogContentText> */}\r\n\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.bookcontent}\r\n                </DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          // alignItems=\"center\"\r\n          style={{ height: \"100%\",flexWrap:\"unset\" }}\r\n        >\r\n          {typeof this.state.books !== \"undefined\" &&\r\n          this.state.books.length > 0\r\n            ? itemCard(this.state.books, \"books\", 8000)\r\n            : null}\r\n\r\n          {typeof this.state.events !== \"undefined\" &&\r\n          this.state.events.length > 0\r\n            ? itemCard(this.state.events, \"events\", 12000)\r\n            : null}\r\n\r\n          {/* <Grid style={{ flexGrow: 1 }}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <div style={{ fontWeight: \"bold\" }}>Sự kiện nổi bật</div>{\" \"}\r\n                <Carousel>\r\n                  {this.state.events.map(event => {\r\n                    return (\r\n                      <React.Fragment key={event.id}>\r\n                        <Grid\r\n                          style={{\r\n                            border: \"1px solid #0000001f\",\r\n                            borderRadius: \"4px\",\r\n                            marginTop: 10,\r\n                            marginBottom: 10\r\n                          }}\r\n                        >\r\n                          <Card className={classes.card}>\r\n                            <a\r\n                              href={event.link}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              <CardActionArea>\r\n                                <img\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    height: \"100\",\r\n                                    objectFit: \"cover\"\r\n                                  }}\r\n                                  alt=\"complex\"\r\n                                  src={event.image}\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography\r\n                                    gutterBottom\r\n                                    variant=\"h5\"\r\n                                    component=\"h2\"\r\n                                  >\r\n                                    {event.title}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                  >\r\n                                    {event.content}\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </a>\r\n                          </Card>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </Carousel>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid> */}\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(NavRight)\r\n);\r\n","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\n// import Avatar from '@material-ui/core/Avatar'\r\nimport { Link } from \"react-router-dom\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport axios from \"axios\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Minitask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isUserLikeMinitask: true,\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskFavourite/${this.props.minitask.id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.data.id === \"\") {\r\n                    this.setState({ isUserLikeMinitask: false });\r\n                }\r\n            });\r\n    }\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    handleUserLikeMinitask = () => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/handleLikeMinitask/${this.props.minitask.id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            });\r\n        this.setState({ isUserLikeMinitask: !this.state.isUserLikeMinitask });\r\n    }\r\n\r\n    render() {\r\n        const { minitask } = this.props;\r\n        const { isUserLikeMinitask } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Slide in={true} direction=\"right\" {...(true ? { timeout: 1550 } : {})}>\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <Grid xs={12} container style={{ backgroundColor: \"\" }} borderRadius={16} justify=\"center\" alignItems=\"center\">\r\n                                <Grid xs={2}>\r\n                                    <Box p={1} ml={1}>\r\n                                        {this.renderStatus(minitask.status)}\r\n                                    </Box>\r\n                                </Grid>\r\n                                {/* <Grid xs={1}>\r\n                                    <Box p={2}>\r\n                                        <Typography variant=\"h6\">\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid> */}\r\n                                <Grid item container xs={5} md={5} sm={5}>\r\n                                    <Box p={1}>\r\n                                        <Link to={`/minitask/${minitask.id}`} style={{ textDecoration: 'none' }}>\r\n                                            <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n                                                <Typography noWrap variant=\"h6\" style={{ color: \"#0088CC\" }}>\r\n                                                    {minitask.name_func}\r\n                                                </Typography>\r\n                                            </Tooltip>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={3}>\r\n                                    <Box p={1}>\r\n                                        {this.renderLevel(minitask.level)}\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={2}>\r\n                                    <Box display=\"flex\" justifyContent=\"flex-end\" p={1}>\r\n                                        <Box>\r\n                                            {!isUserLikeMinitask ?\r\n                                                <StarBorderRoundedIcon fontSize=\"large\" style={{ cursor: \"pointer\", }} onClick={this.handleUserLikeMinitask} />\r\n                                                :\r\n                                                <StarIcon fontSize=\"large\" style={{ cursor: \"pointer\", color: \"#FCB829\" }} onClick={this.handleUserLikeMinitask} />\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Box p={1}>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <img style={{ position: \"absolute\", zIndex: 1, borderRadius: '50%' }} width=\"50px\"\r\n                                        src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/level-avatars/User-05.svg?v=3\" alt=\"\" srcset=\"\" />\r\n                                    <img width=\"44px\" height=\"45px\" style={{ borderRadius: '50%', marginLeft: 3, marginTop: 1 }}\r\n                                        src=\"https://codelearnstorage.s3.amazonaws.com/CodeCamp/CodeCamp/Upload/Avatar/f52dd2000202428db182bacf9e92ab3c.png\" alt=\"Duy\" />\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                            <Box>\r\n                                <Typography variant=\"caption\">vanduyit027@gamail.com</Typography>\r\n                            </Box>\r\n                        </Box> */}\r\n                        </Paper>\r\n                    </Grid>\r\n                </Slide>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    PieSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nimport Minitask from './Minitask';\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass HeaderPracticePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            allTask: [],\r\n            minitaskList: [],\r\n            page: 1,\r\n            chartInfo: [],\r\n            isLoadingData: true,\r\n            totalPage: 0,\r\n            searchKeyWord: \"\",\r\n            status: '',\r\n            level: '',\r\n            tempData: [],\r\n            isLoadingFilterData: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ isLoadingFilterData: true })\r\n        axios.get(`http://localhost:8081/api/v1/curd/getAllMinitask/${this.state.page - 1}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskList: res.data, tempData: res.data, isLoadingFilterData: false });\r\n            });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getTotalMinitask`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ totalPage: res.data % 16 === 0 ? Math.floor(res.data / 16) : Math.floor(res.data / 16) + 1 });\r\n            });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`)\r\n            .then(res => {\r\n                console.info(res.data)\r\n                const chartInfo = res.data;\r\n                const data = [\r\n                    { key: 'Medium', value: chartInfo.medium },\r\n                    { key: 'Hard', value: chartInfo.hard },\r\n                    { key: 'Easy', value: chartInfo.easy },\r\n                ];\r\n\r\n                const allTask = [\r\n                    { key: 'Todo', value: chartInfo.todo - (chartInfo.solved + chartInfo.attempted) },\r\n                    { key: 'Attempted', value: chartInfo.attempted },\r\n                    { key: 'Solved', value: chartInfo.solved },\r\n                ];\r\n\r\n                this.setState({\r\n                    data,\r\n                    allTask,\r\n                    chartInfo,\r\n                    isLoadingData: false\r\n                }, () => {\r\n                    console.log(this.state.data);\r\n                    console.log(this.state.allTask);\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChangePage = (event, value) => {\r\n        this.setState({ isLoadingData: true });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getAllMinitask/${value - 1}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskList: res.data, page: value, isLoadingData: false });\r\n            });\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        // const { searchKeyWord, status, level } = this.state;\r\n        // if (searchKeyWord.trim() === \"\" && status === \"\" && level === \"\") {\r\n        //     this.setState({minitaskList: this.state.tempData});\r\n        // } else {\r\n        //     // this.setState({isFilter: true});\r\n        // }\r\n    }\r\n\r\n    handleChangeStatus = (event) => {\r\n        this.setState({ isLoadingFilterData: true });\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${this.state.searchKeyWord}/${event.target.value}/${this.state.level}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ status: event.target.value, minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    handleChangeLevel = (event) => {\r\n        this.setState({ isLoadingFilterData: true, });\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${this.state.searchKeyWord}/${this.state.status}/${event.target.value}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ level: event.target.value, minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    handleChangeKeyword = (event) => {\r\n        this.setState({ searchKeyWord: event.target.value, isLoadingFilterData: true });\r\n        console.log(event.target.value);\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${event.target.value}/${this.state.status}/${this.state.level}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data: chartData, allTask: chartAllTask, minitaskList, chartInfo, isLoadingData, page, totalPage,\r\n            searchKeyWord, status, level, isLoadingFilterData } = this.state;\r\n\r\n        const list = minitaskList.map((minitask, index) => {\r\n            return <Minitask index={index} minitask={minitask} />\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isLoadingData ?\r\n                    <div\r\n                        className=\"sweet-loading\"\r\n                        style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            width: \"100%\",\r\n                            height: \"100vh\"\r\n                        }}\r\n                    >\r\n                        <HashLoader\r\n                            sizeUnit={\"px\"}\r\n                            size={50}\r\n                            color={\"#AEA8A8\"}\r\n                            loading={isLoadingData}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <Box>\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={1}>\r\n                                <Grid item xs={9}>\r\n                                    <Box>\r\n                                        <img src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/content/training.jpg\"\r\n                                            width=\"100%\"\r\n                                            height=\"250px\" alt=\"banner\" />\r\n                                    </Box>\r\n                                    <Box style={{\r\n                                        marginTop: \"-5px\",\r\n                                        backgroundColor: \"#FFFFFF\",\r\n                                    }}>\r\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                            <Grid item xs={2} >\r\n                                                <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <img src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/ChallengesIcon.svg\"\r\n                                                            width=\"50px\" height=\"50px\" alt=\"\" srcset=\"\" />\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={4} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl style={{ width: '100%' }}>\r\n                                                        <TextField id=\"outlined-basic\"\r\n                                                            placeholder=\"Nhập nội dung tìm kiếm\"\r\n                                                            variant=\"outlined\"\r\n                                                            value={searchKeyWord}\r\n                                                            onChange={this.handleChangeKeyword}\r\n                                                            InputProps={{\r\n                                                                startAdornment: (\r\n                                                                    <InputAdornment position=\"start\">\r\n                                                                        <SearchIcon />\r\n                                                                    </InputAdornment>\r\n                                                                ),\r\n                                                            }}\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl variant=\"filled\" style={{ width: \"100%\" }}>\r\n                                                        <InputLabel id=\"demo-simple-select-filled-label\">Trạng thái</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-filled-label\"\r\n                                                            id=\"demo-simple-select-filled\"\r\n                                                            value={status}\r\n                                                            onChange={this.handleChangeStatus}\r\n                                                        >\r\n                                                            {/* <MenuItem value=\"\">\r\n                                                                <em>Tar</em>\r\n                                                            </MenuItem> */}\r\n                                                            <MenuItem value={\"\"}>Trạng thái</MenuItem>\r\n                                                            <MenuItem value={\"done\"}>Đã hoàn thành</MenuItem>\r\n                                                            <MenuItem value={\"tried\"}>Chưa hoàn thành</MenuItem>\r\n                                                            <MenuItem value={\"normal\"}>Chưa làm</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl variant=\"filled\" style={{ width: \"100%\" }}>\r\n                                                        <InputLabel id=\"demo-simple-select-filled-label\">Cấp độ</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-filled-label\"\r\n                                                            id=\"demo-simple-select-filled\"\r\n                                                            value={level}\r\n                                                            onChange={this.handleChangeLevel}\r\n                                                        >\r\n                                                            {/* <MenuItem value=\"\">\r\n                                                                <em>Tar</em>\r\n                                                            </MenuItem> */}\r\n                                                            <MenuItem value={\"\"}>Cấp độ</MenuItem>\r\n                                                            <MenuItem value={\"easy\"}>Đơn giản</MenuItem>\r\n                                                            <MenuItem value={\"medium\"}>Trung bình</MenuItem>\r\n                                                            <MenuItem value={\"hard\"}>Phức tạp</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        {isLoadingFilterData ?\r\n                                            <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Box>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                    <Box>\r\n                                                        <Typography variant=\"overline\">\r\n                                                            Đang tải\r\n                                                    </Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            :\r\n                                            minitaskList.length === 0 ?\r\n                                                <Box p={5} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Typography variant=\"h2\">Không có dữ liệu</Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                :\r\n                                                <Grid container xs={12} spacing={2}>\r\n                                                    {list}\r\n                                                </Grid>\r\n                                        }\r\n                                        {status === \"\" && level === \"\" && searchKeyWord.trim() === \"\" ?\r\n                                            <Fade in={!isLoadingData} {...(true ? { timeout: 1400 } : {})}>\r\n                                                <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Pagination count={totalPage} page={page} onChange={this.handleChangePage} />\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Fade>\r\n                                            :\r\n                                            \"\"\r\n                                        }\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Box >\r\n                                        <Paper>\r\n                                            <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"h5\">THỐNG KÊ CHUNG</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Chart\r\n                                                data={chartAllTask}\r\n                                            >\r\n                                                <PieSeries\r\n                                                    valueField=\"value\"\r\n                                                    argumentField=\"key\"\r\n                                                />\r\n                                                {/* <Title\r\n                                                    text=\"THỐNG KÊ CHUNG\"\r\n                                                /> */}\r\n                                                <Animation />\r\n                                            </Chart>\r\n                                            <Grid container xs={12}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={3} sm={3} md={3}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#42A5F5\", fontWeight: 800 }}>\r\n                                                        To do: {chartInfo.todo - (chartInfo.solved + chartInfo.attempted)}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={5} sm={5} md={5}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#9CCC65\", fontWeight: 800 }}>\r\n                                                        Solved: {chartInfo.solved + \"/\" + chartInfo.todo}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={4} sm={4} md={4}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#FF7043\", fontWeight: 800 }}>\r\n                                                        Attempted: {chartInfo.attempted}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Paper style={{ backgroundColor: \"#FAFAFA\" }}>\r\n                                            <Box p={1}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\">\r\n                                                    <Typography noWrap variant=\"h5\">SỐ BÀI ĐÃ HOÀN THÀNH</Typography>\r\n                                                </Grid>\r\n                                            </Box>\r\n                                            {chartInfo.easy === 0 && chartInfo.medium === 0 && chartInfo.hard === 0 ?\r\n                                                <Box p={1}>\r\n                                                    <Grid container justify=\"center\" alignContent=\"center\">\r\n                                                        <Typography noWrap variant=\"h5\">Bạn chưa thực hiện bài thực hành nào</Typography>\r\n                                                    </Grid>\r\n                                                </Box>\r\n                                                :\r\n                                                <Chart\r\n                                                    data={chartData}\r\n                                                >\r\n                                                    <PieSeries\r\n                                                        valueField=\"value\"\r\n                                                        argumentField=\"key\"\r\n                                                        innerRadius={0.6}\r\n                                                    />\r\n                                                    {/* <Title\r\n                                                text=\"SỐ BÀI ĐÃ LÀM\"\r\n                                            /> */}\r\n                                                    <Animation />\r\n                                                </Chart>\r\n                                            }\r\n                                            <Grid container xs={12}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={3} sm={3} md={3}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#9CCC65\", fontWeight: 800 }}>\r\n                                                        Easy: {chartInfo.easy + \"/\" + chartInfo.total_easy}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={5} sm={5} md={5}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#42A5F5\", fontWeight: 800 }}>\r\n                                                        Medium: {chartInfo.medium + \"/\" + chartInfo.total_medium}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={4} sm={4} md={4}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#FF7043\", fontWeight: 800 }}>\r\n                                                        Hard: {chartInfo.hard + \"/\" + chartInfo.total_hard}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderPracticePage;","import React, { Component } from 'react';\r\nimport HeaderPracticePage from './HeaderPracticePage';\r\n\r\nclass PracticePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderPracticePage />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PracticePage;","import React, { Component } from 'react';\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport axios from 'axios';\r\n\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nclass Room extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { fight } = this.props;\r\n        console.log(fight);\r\n        var code;\r\n        if ((new Date() < new Date(fight.time_start))) {\r\n            code = -1;\r\n        }\r\n        if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n            code = 0;\r\n        }\r\n        if ((new Date() > new Date(fight.time_end))) {\r\n            code = 1;\r\n        }\r\n        this.setState({ contestStatus: code });\r\n        this.interval = setInterval(() => {\r\n            const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n            date ? this.setState(date) : this.stop();\r\n        }, 1000);\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    renderJoinContestButton = () => {\r\n        const { contestStatus } = this.state;\r\n        const { fight } = this.props;\r\n        if (fight.is_user_register) {\r\n            if (contestStatus === 0 || contestStatus === -1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E8505B\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />}\r\n                    component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Xem chi tiết</Typography>\r\n                </Button>\r\n            } else if (contestStatus === 1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đã kết thúc</Typography>\r\n                </Button>\r\n            }\r\n        } else {\r\n            if (contestStatus === 1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đã kết thúc</Typography>\r\n                </Button>\r\n            } else {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đăng ký ngay</Typography>\r\n                </Button>\r\n            }\r\n        }\r\n    }\r\n\r\n    handleJoinFight = () => {\r\n        const { fight } = this.props;\r\n        axios.post(`http://localhost:8081/api/v1/curd/jointFight/${fight.id}/`).then(res => {\r\n            // console.log(res.data);\r\n            this.props.enqueueSnackbar('Đăng ký thành công', {\r\n                variant: 'success',\r\n            });\r\n        });\r\n    }\r\n\r\n    renderContestStatus = () => {\r\n        const { contestStatus } = this.state;\r\n        const { fight } = this.props;\r\n        if (contestStatus === -1) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#777777\" }}>\r\n                Bắt đầu {new Date(fight.time_start).getDay() + \" tháng \" + new Date(fight.time_start).getMonth().toLocaleString()} <EventNoteIcon style={{ fontSize: 19 }}/>\r\n            </Typography>\r\n        } else if (contestStatus === 0) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#439555\" }}>\r\n                Đang diển ra\r\n            </Typography>\r\n        } else if (contestStatus === 1) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#E8505B\" }}>\r\n                Kết thúc\r\n            </Typography>\r\n        }\r\n    }\r\n\r\n    renderUserFightButton = () => {\r\n        const { fight } = this.props;\r\n        return <Grid container spacing={2} justify=\"flex-end\" alignItems=\"flex-end\">\r\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" justifyContent=\"center\" xs={12}>\r\n                <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }}\r\n                    startIcon={<CreateIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/update-contest/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Chỉnh sửa</Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" xs={12}>\r\n                <Box my={1}>\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />}\r\n                        component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                        <Typography variant=\"button\" style={{ color: \"white\" }}>Xem chi tiết</Typography>\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>;\r\n    }\r\n\r\n    render() {\r\n        const { fight, isUserRoom } = this.props;\r\n\r\n        return (\r\n            <SnackbarProvider maxSnack={1}>\r\n                <Box my={2} boxShadow={4} borderRadius={16} style={{ backgroundColor: \"white\" }}>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={12} sm={3} md={3}>\r\n                            <Box display=\"flex\" justifyContent=\"center\">\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Fight image\"\r\n                                    height=\"200\"\r\n                                    src={fight.backgroud_img}\r\n                                    title=\"Fight image\"\r\n                                    style={{ borderRadius: 16 }}\r\n                                />\r\n                                {/* <img src=\"https://assets.leetcode.com/static_assets/public/images/LeetCode_Cup.png\"\r\n                                width=\"100px\"\r\n                                height=\"100px\" alt=\"banner\" /> */}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5} md={5}>\r\n                            <Box mx={2}>\r\n                                <Box mt={1}>\r\n                                    <Typography style={{ fontSize: 25, fontWeight: 600, color: \"#459556\" }}>{fight.fight_name}</Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography noWrap style={{ fontSize: 15, fontWeight: 200 }}>\r\n                                        {fight.fight_desc}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container item xs={12} sm={4} md={4}>\r\n                            <Grid xs={12} container>\r\n                                <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-start\">\r\n                                    <Box mx={4} mt={2}>\r\n                                        {this.renderContestStatus()}\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-start\">\r\n                                    <Box mx={4} display=\"flex\" style={{ color: \"#777777\" }}>\r\n                                        <Box mr={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <PersonIcon fontSize=\"small\" />\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#777777\" }}>{fight.numbers_std} thí sinh</Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-end\">\r\n                                <Box mx={3} my={2}>\r\n                                    {\r\n                                        isUserRoom ?\r\n                                            this.renderUserFightButton()\r\n                                            :\r\n                                            this.renderJoinContestButton()\r\n                                    }\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </SnackbarProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(Room);","import React, { Component } from 'react';\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Typography,\r\n    Button,\r\n    Slide,\r\n    CardMedia\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import {\r\n//     Pagination\r\n// } from '@material-ui/lab';\r\n\r\nimport Room from './Room';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={1}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nclass RoomPracticePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            tab: 0,\r\n            isLoading: true,\r\n            publicFightPages: '',\r\n            currentPublicFightPage: 0,\r\n            privateFightPages: '',\r\n            currentPrivateFightPage: 0,\r\n            publicFights: [],\r\n            privateFights: [],\r\n            fight_user: [],\r\n            fight_user_joined: [],\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currentPublicFightPage } = this.state;\r\n        axios.get(`http://localhost:8081/api/v1/curd/fights/public/${currentPublicFightPage}/`).then(res => {\r\n            this.setState({ publicFights: res.data });\r\n            axios.get(`http://localhost:8081/api/v1/curd/privateFights`).then(res => {\r\n                this.setState({ privateFights: res.data });\r\n                axios.get(`http://localhost:8081/api/v1/curd/fightsByUser`).then(res => {\r\n                    this.setState({ fight_user: res.data });\r\n                    axios.get(`http://localhost:8081/api/v1/curd/getUserFight`).then(res => {\r\n                        console.log(res.data);\r\n                        this.setState({ fight_user_joined: res.data, isLoading: false });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChangeTab = (event, newValue) => {\r\n        this.setState({ tab: newValue });\r\n    }\r\n\r\n    render() {\r\n        const { tab, publicFights, privateFights, fight_user, isLoading, fight_user_joined } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n\r\n        const publicFightsList = publicFights.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        const privateFightsList = privateFights.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        const fight_user_list = fight_user.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} isUserRoom={true} /></Slide>\r\n        });\r\n\r\n        const fight_user_joined_list = fight_user_joined.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid className=\"banner\" container xs={12} justify=\"center\" style={{borderRadius: 8}}>\r\n                    <Grid xs={12} sm={6} md={6}>\r\n                        <Box mt={4} display=\"flex\" justifyContent=\"center\">\r\n                            <img src=\"https://assets.leetcode.com/static_assets/public/images/LeetCode_Cup.png\"\r\n                                // width=\"100%\"\r\n                                height=\"60px\" alt=\"banner\" />\r\n                        </Box>\r\n                        <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                            <Typography style={{ fontSize: 30, fontWeight: 200, color: \"#b3b3b3\" }}>\r\n                                <span style={{ fontSize: 30, fontWeight: 200, color: \"#FFFFFF\" }}>Đấu trường </span> Hocode\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box mb={4} display=\"flex\" justifyContent=\"center\">\r\n                            <Typography style={{ fontSize: 18, fontWeight: 200, color: \"#b3b3b3\" }}>\r\n                                Hãy cùng chiến đấu mỗi tuần cùng Hocode nhé\r\n                            </Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box my={2} display=\"flex\" justifyContent=\"center\">\r\n                    <Box flexGrow={1}>\r\n                        <Typography style={{ fontSize: 28, fontWeight: 460 }}>Chiến trường</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button variant=\"contained\" style={{ backgroundColor: \"#F1B729\" }} component={Link} to={`/profile/create-contest`}\r\n                            startIcon={<AddBoxIcon style={{ color: \"white\" }} />}>\r\n                            <Typography variant=\"button\" style={{ color: \"white\" }}>Tạo cuộc thi</Typography>\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                {/* <Grid container xs={12}> */}\r\n                <AppBar position=\"static\" style={{ backgroundColor: \"white\", color: \"black\" }}>\r\n                    <Tabs value={tab} onChange={this.handleChangeTab} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Công khai\" />\r\n                        <Tab label=\"Riêng tư\" />\r\n                        <Tab label={`Đã tham gia (${fight_user_joined_list.length})`} />\r\n                        <Tab label=\"Cuộc thi của bạn\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={tab} index={0}>\r\n                    {publicFightsList}\r\n                    {/* <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <Pagination count={3} page={1} />\r\n                        </Box>\r\n                    </Box> */}\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    {privateFightsList.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        privateFightsList\r\n                    }\r\n                    {/* <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <Pagination count={3} page={1} />\r\n                        </Box>\r\n                    </Box> */}\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={2}>\r\n                    {fight_user_joined_list.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        fight_user_joined_list\r\n                    }\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={3}>\r\n                    {fight_user_list.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        fight_user_list\r\n                    }\r\n                </TabPanel>\r\n                {/* </Grid> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoomPracticePage;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    // Button,\r\n    TextField,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Paper,\r\n    InputBase, Divider, Slider, IconButton,\r\n    Table,\r\n    Button,\r\n    Tooltip,\r\n    Chip,\r\n    TableBody, TableCell, TableHead, TableRow,\r\n    Slide,\r\n    CardMedia\r\n} from \"@material-ui/core\";\r\n\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport axios from \"axios\";\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nclass CreateRoomPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            start_time: new Date(),\r\n            isStartTimeValid: true,\r\n            start_time_error_message: \"\",\r\n            end_time: new Date(),\r\n            isEndTimeValid: true,\r\n            end_time_error_message: \"\",\r\n            minitaskBank: [],\r\n            tempMinitaskList: [],\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            minitaskDesc: \"\",\r\n            open: false,\r\n            sliderValue: [0, 200],\r\n            sortByLevel: 40,\r\n            isOpenError: false,\r\n            errorMessage: \"\",\r\n            // Fight field\r\n            fight_name: \"\",\r\n            numbers_std: \"\",\r\n            fight_desc: \"\",\r\n            backgroud_img: \"\",\r\n            time_start: \"\",\r\n            time_end: \"\",\r\n            // validate\r\n            isFightNameError: false,\r\n            fight_name_error: \"\",\r\n            isFightDescError: false,\r\n            fight_desc_error: \"\",\r\n            isFightBackGroundImgError: false,\r\n            fight_backgroundImg_error: \"\",\r\n            isFightNumStdError: false,\r\n            fight_numStd_error: \"\",\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n            this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n        });\r\n    }\r\n\r\n    onChangeFightName = (e) => {\r\n        const fight_name = e.target.value;\r\n        this.setState({ fight_name })\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightDesc = (e) => {\r\n        const fight_desc = e.target.value;\r\n        this.setState({ fight_desc })\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightBackgroundImg = (e) => {\r\n        const backgroud_img = e.target.value;\r\n        this.setState({ backgroud_img })\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeNumStd = (e) => {\r\n        const numbers_std = e.target.value;\r\n        this.setState({ numbers_std })\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderLevelMinitaskChip(minitask) {\r\n        if (minitask === \"easy\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#76d38e\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Easy\"}\r\n                />\r\n            );\r\n        } else if (minitask === \"medium\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#1d97c6\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Medium\"}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#CB3837\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Hard\"}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    onChangeSearch = (event) => {\r\n        const keyword = event.target.value;\r\n        // console.log\r\n        if (keyword === \"\") {\r\n            axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n            });\r\n        }\r\n        else {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}/`).then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStartTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { end_time } = this.state;\r\n        if (new Date(end_time) - new Date(e._d) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { start_time } = this.state;\r\n        console.log(new Date(e._d) - new Date(start_time))\r\n        if (new Date(e._d) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    getMinitaskDesc = (id) => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n            console.log(res.data.mini_task_desc);\r\n            this.setState({\r\n                minitaskDesc: res.data.mini_task_desc,\r\n                open: true\r\n            });\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    checkFilterCondition = (minitask, sortByLevel) => {\r\n        const code_point_Range = this.state.sliderValue;\r\n        if (sortByLevel === \"all\") {\r\n            if (minitask.code_point >= code_point_Range[0] &&\r\n                minitask.code_point <= code_point_Range[1]) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (minitask.level === sortByLevel &&\r\n            minitask.code_point >= code_point_Range[0] &&\r\n            minitask.code_point <= code_point_Range[1]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChangeSlider = (event, value) => {\r\n        this.setState({\r\n            sliderValue: value,\r\n        }, () => {\r\n            const level = this.state.sortByLevel;\r\n            if (level === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeSort = (event) => {\r\n        this.setState({\r\n            tempMinitaskList: []\r\n        }, () => {\r\n            if (event.target.value === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // import minitask to fight_minitask\r\n    getMinitaskFromBank = (minitask) => {\r\n        const { fight_minitask } = this.state;\r\n        const fight_minitask_temp = fight_minitask;\r\n        if (this.isMinitaskExist(minitask.id)) {\r\n            minitask[\"isNew\"] = true\r\n            fight_minitask_temp.push(minitask);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    // check if minitask already exist\r\n    isMinitaskExist = (id) => {\r\n        const { fight_minitask } = this.state;\r\n        for (var i = 0; i < fight_minitask.length; i++) {\r\n            if (fight_minitask.id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // remove minitask from fight_minitask\r\n    removeMinitask(id) {\r\n        const fight_minitask_temp = this.state.fight_minitask;\r\n        var i = -1;\r\n\r\n        fight_minitask_temp.forEach((minitask, index) => {\r\n            if (id.isNew === true) {\r\n                if (minitask.id === id.id) {\r\n                    console.log(minitask.id);\r\n                    i = index;\r\n                }\r\n            }\r\n            else if (id.isNew === undefined && id.id === minitask.id) {\r\n                // call api here\r\n\r\n            }\r\n        });\r\n        console.log(i);\r\n        if (i !== -1) {\r\n            fight_minitask_temp.splice(i, 1);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        }\r\n    }\r\n\r\n    // Validate data\r\n    validate = async () => {\r\n        const { fight_name, fight_desc, backgroud_img, numbers_std, end_time, start_time } = this.state;\r\n        // Fight name\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n        // Fight desc\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n        // Fight background img\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n        // Fight nums std\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n        // Fight start time, end time\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    // save fight\r\n    saveFight = async () => {\r\n        await Promise.all([\r\n            this.validate(),\r\n        ]).then(() => {\r\n            const { isFightNameError, isFightDescError, isFightBackGroundImgError, isFightNumStdError, isEndTimeValid, isStartTimeValid, fight_minitask\r\n            } = this.state;\r\n            console.log(fight_minitask.length);\r\n            if (isFightNameError || isFightDescError || isFightBackGroundImgError || isFightNumStdError || !isEndTimeValid || !isStartTimeValid || fight_minitask.length === 0) {\r\n                this.setState({\r\n                    isOpenError: true,\r\n                    errorMessage: \"Dữ liệu ko hợp lệ\"\r\n                });\r\n            } else {\r\n                // call api here\r\n                const { end_time, start_time, fight_name, numbers_std, fight_desc, backgroud_img, fight_minitask } = this.state;\r\n                console.log(start_time);\r\n                axios.post(`http://localhost:8081/api/v1/curd/fights`, {\r\n                    \"_id\": \"\",\r\n                    \"fight_name\": fight_name,\r\n                    \"numbers_std\": parseInt(numbers_std),\r\n                    \"fight_desc\": fight_desc,\r\n                    \"backgroud_img\": backgroud_img,\r\n                    \"time_start\": start_time,\r\n                    \"time_end\": end_time,\r\n                    \"user_created\": \"\",\r\n                    \"del\": false,\r\n                    \"fight_type\": \"private\"\r\n                }).then(res => {\r\n                    for (var x = 0; x < fight_minitask.length; x++) {\r\n                        axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, {\r\n                            \"_id\": \"\",\r\n                            \"fight_id\": res.data.id,\r\n                            \"minitask_id\": fight_minitask[x].id\r\n                        }).then(res => {\r\n                        });\r\n                    }\r\n                    this.props.enqueueSnackbar('Tạo cuộc thi thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModalError = () => {\r\n        this.setState({ isOpenError: false })\r\n    }\r\n\r\n    render() {\r\n        const { start_time, end_time, isEndTimeValid, isStartTimeValid, end_time_error_message, start_time_error_message, isOpenError, errorMessage,\r\n            // Fight name\r\n            fight_name,\r\n            isFightNameError,\r\n            fight_name_error,\r\n            // Fight Desc\r\n            fight_desc,\r\n            isFightDescError,\r\n            fight_desc_error,\r\n            // Fight backgournd Img\r\n            backgroud_img,\r\n            isFightBackGroundImgError,\r\n            fight_backgroundImg_error,\r\n            // Fight num std\r\n            numbers_std,\r\n            isFightNumStdError,\r\n            fight_numStd_error,\r\n        } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <SnackbarProvider maxSnack={1}>\r\n                    <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n                        <Box p={2}>\r\n                            <MDReactComponent text={this.state.minitaskDesc} />\r\n                        </Box>\r\n                    </Modal>\r\n                    <Modal visible={isOpenError} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n                        <Box p={2}>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h6\">Lỗi</Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h2\">{errorMessage}</Typography>\r\n                            </Box>\r\n                            {/* <MDReactComponent text={errorMessage} /> */}\r\n                        </Box>\r\n                    </Modal>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Tạo cuộc thi</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Box p={2}>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Tên cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\" label=\"Tên cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={fight_name}\r\n                                                error={isFightNameError}\r\n                                                helperText={fight_name_error}\r\n                                                onChange={this.onChangeFightName}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Mô tả cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Mô tả cuộc thi\" multiline\r\n                                                rows={4} variant=\"outlined\" fullWidth\r\n                                                value={fight_desc}\r\n                                                error={isFightDescError}\r\n                                                helperText={fight_desc_error}\r\n                                                onChange={this.onChangeFightDesc}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ảnh</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Ảnh cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={backgroud_img}\r\n                                                error={isFightBackGroundImgError}\r\n                                                helperText={fight_backgroundImg_error}\r\n                                                onChange={this.onChangeFightBackgroundImg}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid container item xs={5} sm={5} md={5} justify=\"center\">\r\n                                            <Box mx={2} border={2}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Ảnh cuộc thi\"\r\n                                                    height=\"200\"\r\n                                                    image={backgroud_img===\"\"?\"https://icye.vn/Images/images/contest.jpg\":backgroud_img}\r\n                                                    title=\"Ảnh cuộc thi\"\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày bắt đầu</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    label=\"Ngày bắt đầu\"\r\n                                                    helperText={start_time_error_message}\r\n                                                    error={!isStartTimeValid}\r\n                                                    ampm={false}\r\n                                                    disablePast\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={start_time}\r\n                                                    onChange={this.handleStartTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Số lượng người tham gia</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField style={{ minWidth: 200 }} id=\"outlined-basic\" label=\"Số lượng người tham gia\" type=\"number\" min=\"1\" variant=\"outlined\"\r\n                                                value={numbers_std}\r\n                                                error={isFightNumStdError}\r\n                                                helperText={fight_numStd_error}\r\n                                                onChange={this.onChangeNumStd}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày kết thúc</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    disablePast\r\n                                                    helperText={end_time_error_message}\r\n                                                    error={!isEndTimeValid}\r\n                                                    label=\"Ngày kết thúc\"\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={end_time}\r\n                                                    onChange={this.handleEndTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Loại cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <FormControl variant=\"outlined\" style={{ minWidth: 200 }}>\r\n                                                <InputLabel id=\"demo-simple-select-outlined-label\">Loại cuộc thi</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                                    id=\"demo-simple-select-outlined\"\r\n                                                    value={2}\r\n                                                    disabled\r\n                                                    // onChange={handleChange}\r\n                                                    label=\"Loại cuộc thi\"\r\n                                                >\r\n                                                    {/* <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem> */}\r\n                                                    {/* <MenuItem value={1}>Công khai</MenuItem> */}\r\n                                                    <MenuItem value={2}>Riêng tư</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Thêm thách thức</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Grid xs={12} container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper >\r\n                                        <Box height={449} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                                            <Box display=\"flex\">\r\n                                                <Box p={1} flexGrow={1}>\r\n                                                    <Typography variant=\"h5\" gutterBottom>\r\n                                                        Thách thức ({this.state.fight_minitask.length})\r\n                                                </Typography>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    {this.state.fight_minitask.length > 0 ?\r\n                                                        <Button variant=\"contained\" color=\"#b39ddb\" onClick={this.saveMinitaskList}>Import</Button> :\r\n                                                        \"\"\r\n                                                    }\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {this.state.fight_minitask.length > 0 ?\r\n                                                <div style={{ overflow: 'auto', minHeight: '350px', backgroundColor: \"white\" }}>\r\n                                                    <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow style={{\r\n                                                                backgroundColor: \"#ffred5f5\",\r\n                                                                height: \"5px\"\r\n                                                            }}>\r\n                                                                <TableCell>Tên thách thức</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                                                <TableCell align=\"right\">Điểm</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                                                <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {this.state.fight_minitask.map(row => (\r\n                                                                <Silde in={true} direction=\"left\" {...(true ? { timeout: 100 } : {})}>\r\n                                                                    <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                                            {row.mini_task_name}\r\n                                                                        </TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                                <div style={{ marginLeft: 10 }}>\r\n                                                                                    {this.renderLevelMinitaskChip(row.level)}\r\n                                                                                </div>\r\n                                                                            </Tooltip>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Xóa</Button>\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </Silde>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                                :\r\n                                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                                    Chưa có thách thức nào.\r\n                                            </Typography>}\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Box p={2} boxShadow={2}>\r\n                                        <Box p={1}>\r\n                                            <Grid xs={12} container justify=\"center\" spacing={2}>\r\n                                                <Grid xs={5} item>\r\n                                                    <Paper component=\"form\">\r\n                                                        <IconButton aria-label=\"search\">\r\n                                                            <SearchIcon />\r\n                                                        </IconButton>\r\n                                                        <InputBase\r\n                                                            placeholder=\"Search\"\r\n                                                            inputProps={{ 'aria-label': 'search google maps' }}\r\n                                                            onChange={this.onChangeSearch}\r\n                                                        />\r\n                                                        <Divider orientation=\"vertical\" />\r\n                                                    </Paper>\r\n                                                </Grid>\r\n                                                <Grid xs={3} bgcolor=\"white\" item>\r\n                                                    <FormControl fullWidth={true}>\r\n                                                        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-label\"\r\n                                                            id=\"demo-simple-select\"\r\n                                                            value={this.state.sortByLevel}\r\n                                                            onChange={this.onChangeSort}\r\n                                                        >\r\n                                                            <MenuItem value={10}>Easy</MenuItem>\r\n                                                            <MenuItem value={20}>Medium</MenuItem>\r\n                                                            <MenuItem value={30}>Hard</MenuItem>\r\n                                                            <MenuItem value={40}>All</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                <Grid xs={4} bgcolor=\"white\" item>\r\n                                                    <Typography id=\"range-slider\" gutterBottom>\r\n                                                        Code point\r\n                                            </Typography>\r\n                                                    <Slider\r\n                                                        value={this.state.sliderValue}\r\n                                                        onChange={this.onChangeSlider}\r\n                                                        valueLabelDisplay=\"auto\"\r\n                                                        aria-labelledby=\"range-slider\"\r\n                                                        min={0}\r\n                                                        max={200}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                                            <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                <TableHead style={{ backgroundColor: \"#F1F1F1\", minHeight: \"50px\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell></TableCell>\r\n                                                        <TableCell>Tên thách thức</TableCell>\r\n                                                        <TableCell align=\"right\">Điểm</TableCell>\r\n                                                        <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                        <TableCell align=\"right\"></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.tempMinitaskList.map(row => (\r\n                                                        <TableRow key={row.task_name}>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    size=\"small\"\r\n                                                                    startIcon={<ArrowBackIcon />}\r\n                                                                    aria-label=\"move selected right\"\r\n                                                                    onClick={() => this.getMinitaskFromBank(row)}\r\n                                                                >\r\n                                                                    {/* &lt; */}\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                <Typography style={{ fontWeight: 700, fontSize: 14 }}>\r\n                                                                    {row.mini_task_name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                            <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                            <TableCell align=\"right\">\r\n                                                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                    <div style={{ marginLeft: 10 }}>\r\n                                                                        {/* {row.level} */}\r\n                                                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                                                    </div>\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box p={2}>\r\n                                <Button variant=\"contained\" onClick={this.saveFight} style={{ backgroundColor: \"#7BC043\", color: \"white\" }}>\r\n                                    Lưu\r\n                            </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                </SnackbarProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(CreateRoomPage);","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    // Button,\r\n    TextField,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Paper,\r\n    InputBase, Divider, Slider, IconButton,\r\n    Table,\r\n    Button,\r\n    Tooltip,\r\n    Chip,\r\n    TableBody, TableCell, TableHead, TableRow,\r\n    Slide,\r\n    CardMedia,\r\n    Backdrop, CircularProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { matchPath } from \"react-router-dom\";\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nclass UpdateFightPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            start_time: new Date(),\r\n            isStartTimeValid: true,\r\n            start_time_error_message: \"\",\r\n            end_time: new Date(),\r\n            isEndTimeValid: true,\r\n            end_time_error_message: \"\",\r\n            minitaskBank: [],\r\n            tempMinitaskList: [],\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            minitaskDesc: \"\",\r\n            open: false,\r\n            sliderValue: [0, 200],\r\n            sortByLevel: 40,\r\n            isOpenError: false,\r\n            errorMessage: \"\",\r\n            isUpdating: false,\r\n            // Fight field\r\n            id: \"\",\r\n            fight_name: \"\",\r\n            numbers_std: \"\",\r\n            fight_desc: \"\",\r\n            backgroud_img: \"\",\r\n            time_start: \"\",\r\n            time_end: \"\",\r\n            // validate\r\n            isFightNameError: false,\r\n            fight_name_error: \"\",\r\n            isFightDescError: false,\r\n            fight_desc_error: \"\",\r\n            isFightBackGroundImgError: false,\r\n            fight_backgroundImg_error: \"\",\r\n            isFightNumStdError: false,\r\n            fight_numStd_error: \"\",\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n            this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n        });\r\n\r\n        axios.get(`http://localhost:8081/api/v1/curd/getOneFight/${id}`).then(res => {\r\n            const fight = res.data;\r\n            this.setState({\r\n                id: fight.id,\r\n                fight_name: fight.fight_name,\r\n                numbers_std: fight.numbers_std,\r\n                fight_desc: fight.fight_desc,\r\n                backgroud_img: fight.backgroud_img,\r\n                start_time: fight.time_start,\r\n                end_time: fight.time_end,\r\n            });\r\n            axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(res => {\r\n                const fight_minitask = res.data;\r\n                this.setState({\r\n                    fight_minitask,\r\n                    isLoading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/update-contest/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    onChangeFightName = (e) => {\r\n        const fight_name = e.target.value;\r\n        this.setState({ fight_name })\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightDesc = (e) => {\r\n        const fight_desc = e.target.value;\r\n        this.setState({ fight_desc })\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightBackgroundImg = (e) => {\r\n        const backgroud_img = e.target.value;\r\n        this.setState({ backgroud_img })\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeNumStd = (e) => {\r\n        const numbers_std = e.target.value;\r\n        this.setState({ numbers_std })\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderLevelMinitaskChip(minitask) {\r\n        if (minitask === \"easy\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#76d38e\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Easy\"}\r\n                />\r\n            );\r\n        } else if (minitask === \"medium\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#1d97c6\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Medium\"}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#CB3837\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Hard\"}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    onChangeSearch = (event) => {\r\n        const keyword = event.target.value;\r\n        // console.log\r\n        if (keyword === \"\") {\r\n            axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n            });\r\n        }\r\n        else {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}/`).then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStartTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { end_time } = this.state;\r\n        if (new Date(end_time) - new Date(e._d) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { start_time } = this.state;\r\n        console.log(new Date(e._d) - new Date(start_time))\r\n        if (new Date(e._d) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    getMinitaskDesc = (id) => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n            console.log(res.data.mini_task_desc);\r\n            this.setState({\r\n                minitaskDesc: res.data.mini_task_desc,\r\n                open: true\r\n            });\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    checkFilterCondition = (minitask, sortByLevel) => {\r\n        const code_point_Range = this.state.sliderValue;\r\n        if (sortByLevel === \"all\") {\r\n            if (minitask.code_point >= code_point_Range[0] &&\r\n                minitask.code_point <= code_point_Range[1]) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (minitask.level === sortByLevel &&\r\n            minitask.code_point >= code_point_Range[0] &&\r\n            minitask.code_point <= code_point_Range[1]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChangeSlider = (event, value) => {\r\n        this.setState({\r\n            sliderValue: value,\r\n        }, () => {\r\n            const level = this.state.sortByLevel;\r\n            if (level === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeSort = (event) => {\r\n        this.setState({\r\n            tempMinitaskList: []\r\n        }, () => {\r\n            if (event.target.value === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // import minitask to fight_minitask\r\n    getMinitaskFromBank = (minitask) => {\r\n        const { fight_minitask } = this.state;\r\n        const fight_minitask_temp = fight_minitask;\r\n        if (this.isMinitaskExist(minitask.id)) {\r\n            minitask[\"isNew\"] = true\r\n            fight_minitask_temp.push(minitask);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    // check if minitask already exist\r\n    isMinitaskExist = (id) => {\r\n        const { fight_minitask } = this.state;\r\n        for (var i = 0; i < fight_minitask.length; i++) {\r\n            if (fight_minitask.id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // remove minitask from fight_minitask\r\n    removeMinitask(id) {\r\n        const fight_minitask_temp = this.state.fight_minitask;\r\n        var i = -1;\r\n\r\n        fight_minitask_temp.forEach((minitask, index) => {\r\n            if (id.isNew === true) {\r\n                if (minitask.id === id.id) {\r\n                    console.log(minitask.id);\r\n                    i = index;\r\n                }\r\n            }\r\n            else if (id.isNew === undefined && id.id === minitask.id) {\r\n                // call api here\r\n                axios.delete(`http://localhost:8081/api/v1/curd/delminitask/${this.state.id}/${id.id}`).then(res => {\r\n                    fight_minitask_temp.splice(i, 1);\r\n                    this.setState({ fight_minitask: fight_minitask_temp });\r\n                    this.props.enqueueSnackbar('Xóa thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        console.log(i);\r\n        if (i !== -1) {\r\n            fight_minitask_temp.splice(i, 1);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        }\r\n    }\r\n\r\n    // Validate data\r\n    validate = async () => {\r\n        const { fight_name, fight_desc, backgroud_img, numbers_std, end_time, start_time } = this.state;\r\n        // Fight name\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n        // Fight desc\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n        // Fight background img\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n        // Fight nums std\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n        // Fight start time, end time\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    // save fight\r\n    saveFight = async () => {\r\n        this.setState({ isUpdating: true })\r\n        await Promise.all([\r\n            this.validate(),\r\n        ]).then(() => {\r\n            const { isFightNameError, isFightDescError, isFightBackGroundImgError, isFightNumStdError, isEndTimeValid, isStartTimeValid, fight_minitask\r\n            } = this.state;\r\n            console.log(fight_minitask.length);\r\n            if (isFightNameError || isFightDescError || isFightBackGroundImgError || isFightNumStdError || !isEndTimeValid || !isStartTimeValid || fight_minitask.length === 0) {\r\n                this.setState({\r\n                    isOpenError: true,\r\n                    errorMessage: \"Dữ liệu ko hợp lệ\",\r\n                    isUpdating: false,\r\n                });\r\n            } else {\r\n                // call api here\r\n                const { end_time, start_time, fight_name, numbers_std, fight_desc, backgroud_img, fight_minitask, id } = this.state;\r\n                console.log(start_time);\r\n                axios.put(`http://localhost:8081/api/v1/curd/fights/${id}`, {\r\n                    \"_id\": id,\r\n                    \"fight_name\": fight_name,\r\n                    \"numbers_std\": parseInt(numbers_std),\r\n                    \"fight_desc\": fight_desc,\r\n                    \"backgroud_img\": backgroud_img,\r\n                    \"time_start\": start_time,\r\n                    \"time_end\": end_time,\r\n                    \"user_created\": \"\",\r\n                    \"del\": false,\r\n                    \"fight_type\": \"private\"\r\n                }).then(res => {\r\n                    for (var x = 0; x < fight_minitask.length; x++) {\r\n                        if (fight_minitask[x].isNew === true) {\r\n                            axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, {\r\n                                \"_id\": \"\",\r\n                                \"fight_id\": res.data.id,\r\n                                \"minitask_id\": fight_minitask[x].id\r\n                            }).then(res => {\r\n\r\n                            });\r\n                        }\r\n                    }\r\n                    this.setState({ isUpdating: false })\r\n                    this.props.enqueueSnackbar('Chỉnh sửa cuộc thi thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModalError = () => {\r\n        this.setState({ isOpenError: false })\r\n    }\r\n\r\n    render() {\r\n        const { start_time, end_time, isEndTimeValid, isStartTimeValid, end_time_error_message, start_time_error_message, isOpenError, errorMessage,\r\n            isLoading,\r\n            isUpdating,\r\n            // Fight name\r\n            fight_name,\r\n            isFightNameError,\r\n            fight_name_error,\r\n            // Fight Desc\r\n            fight_desc,\r\n            isFightDescError,\r\n            fight_desc_error,\r\n            // Fight backgournd Img\r\n            backgroud_img,\r\n            isFightBackGroundImgError,\r\n            fight_backgroundImg_error,\r\n            // Fight num std\r\n            numbers_std,\r\n            isFightNumStdError,\r\n            fight_numStd_error,\r\n        } = this.state;\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop open={isUpdating} style={{ zIndex: 999 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <SnackbarProvider maxSnack={1}>\r\n                    <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n                        <Box p={2}>\r\n                            <MDReactComponent text={this.state.minitaskDesc} />\r\n                        </Box>\r\n                    </Modal>\r\n                    <Modal visible={isOpenError} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n                        <Box p={2}>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h6\">Lỗi</Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h2\">{errorMessage}</Typography>\r\n                            </Box>\r\n                            {/* <MDReactComponent text={errorMessage} /> */}\r\n                        </Box>\r\n                    </Modal>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Chỉnh sửa cuộc thi</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Box p={2}>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Tên cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\" label=\"Tên cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={fight_name}\r\n                                                error={isFightNameError}\r\n                                                helperText={fight_name_error}\r\n                                                onChange={this.onChangeFightName}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Mô tả cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Mô tả cuộc thi\" multiline\r\n                                                rows={4} variant=\"outlined\" fullWidth\r\n                                                value={fight_desc}\r\n                                                error={isFightDescError}\r\n                                                helperText={fight_desc_error}\r\n                                                onChange={this.onChangeFightDesc}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ảnh</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Ảnh cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={backgroud_img}\r\n                                                error={isFightBackGroundImgError}\r\n                                                helperText={fight_backgroundImg_error}\r\n                                                onChange={this.onChangeFightBackgroundImg}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid container item xs={5} sm={5} md={5} justify=\"center\">\r\n                                            <Box mx={2} border={2}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Ảnh cuộc thi\"\r\n                                                    height=\"200\"\r\n                                                    image={backgroud_img === \"\" ? \"https://icye.vn/Images/images/contest.jpg\" : backgroud_img}\r\n                                                    title=\"Ảnh cuộc thi\"\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày bắt đầu</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    label=\"Ngày bắt đầu\"\r\n                                                    helperText={start_time_error_message}\r\n                                                    error={!isStartTimeValid}\r\n                                                    ampm={false}\r\n                                                    disablePast\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={start_time}\r\n                                                    onChange={this.handleStartTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Số lượng người tham gia</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField style={{ minWidth: 200 }} id=\"outlined-basic\" label=\"Số lượng người tham gia\" type=\"number\" min=\"1\" variant=\"outlined\"\r\n                                                value={numbers_std}\r\n                                                error={isFightNumStdError}\r\n                                                helperText={fight_numStd_error}\r\n                                                onChange={this.onChangeNumStd}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày kết thúc</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    disablePast\r\n                                                    helperText={end_time_error_message}\r\n                                                    error={!isEndTimeValid}\r\n                                                    label=\"Ngày kết thúc\"\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={end_time}\r\n                                                    onChange={this.handleEndTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Loại cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <FormControl variant=\"outlined\" style={{ minWidth: 200 }}>\r\n                                                <InputLabel id=\"demo-simple-select-outlined-label\">Loại cuộc thi</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                                    id=\"demo-simple-select-outlined\"\r\n                                                    value={2}\r\n                                                    disabled\r\n                                                    // onChange={handleChange}\r\n                                                    label=\"Loại cuộc thi\"\r\n                                                >\r\n                                                    {/* <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem> */}\r\n                                                    {/* <MenuItem value={1}>Công khai</MenuItem> */}\r\n                                                    <MenuItem value={2}>Riêng tư</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Thêm thách thức</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Grid xs={12} container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper >\r\n                                        <Box height={449} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                                            <Box display=\"flex\">\r\n                                                <Box p={1} flexGrow={1}>\r\n                                                    <Typography variant=\"h5\" gutterBottom>\r\n                                                        Thách thức ({this.state.fight_minitask.length})\r\n                                                </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {this.state.fight_minitask.length > 0 ?\r\n                                                <div style={{ overflow: 'auto', minHeight: '350px', backgroundColor: \"white\" }}>\r\n                                                    <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow style={{\r\n                                                                backgroundColor: \"#ffred5f5\",\r\n                                                                height: \"5px\"\r\n                                                            }}>\r\n                                                                <TableCell>Tên thách thức</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                                                <TableCell align=\"right\">Điểm</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                                                <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {this.state.fight_minitask.map(row => (\r\n                                                                <Silde in={true} direction=\"left\" {...(true ? { timeout: 100 } : {})}>\r\n                                                                    <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                                            {row.mini_task_name}\r\n                                                                        </TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                                <div style={{ marginLeft: 10 }}>\r\n                                                                                    {this.renderLevelMinitaskChip(row.level)}\r\n                                                                                </div>\r\n                                                                            </Tooltip>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Xóa</Button>\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </Silde>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                                :\r\n                                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                                    Chưa có thách thức nào.\r\n                                            </Typography>}\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Box p={2} boxShadow={2}>\r\n                                        <Box p={1}>\r\n                                            <Grid xs={12} container justify=\"center\" spacing={2}>\r\n                                                <Grid xs={5} item>\r\n                                                    <Paper component=\"form\">\r\n                                                        <IconButton aria-label=\"search\">\r\n                                                            <SearchIcon />\r\n                                                        </IconButton>\r\n                                                        <InputBase\r\n                                                            placeholder=\"Search\"\r\n                                                            inputProps={{ 'aria-label': 'search google maps' }}\r\n                                                            onChange={this.onChangeSearch}\r\n                                                        />\r\n                                                        <Divider orientation=\"vertical\" />\r\n                                                    </Paper>\r\n                                                </Grid>\r\n                                                <Grid xs={3} bgcolor=\"white\" item>\r\n                                                    <FormControl fullWidth={true}>\r\n                                                        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-label\"\r\n                                                            id=\"demo-simple-select\"\r\n                                                            value={this.state.sortByLevel}\r\n                                                            onChange={this.onChangeSort}\r\n                                                        >\r\n                                                            <MenuItem value={10}>Easy</MenuItem>\r\n                                                            <MenuItem value={20}>Medium</MenuItem>\r\n                                                            <MenuItem value={30}>Hard</MenuItem>\r\n                                                            <MenuItem value={40}>All</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                <Grid xs={4} bgcolor=\"white\" item>\r\n                                                    <Typography id=\"range-slider\" gutterBottom>\r\n                                                        Code point\r\n                                            </Typography>\r\n                                                    <Slider\r\n                                                        value={this.state.sliderValue}\r\n                                                        onChange={this.onChangeSlider}\r\n                                                        valueLabelDisplay=\"auto\"\r\n                                                        aria-labelledby=\"range-slider\"\r\n                                                        min={0}\r\n                                                        max={200}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                                            <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                <TableHead style={{ backgroundColor: \"#F1F1F1\", minHeight: \"50px\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell></TableCell>\r\n                                                        <TableCell>Tên thách thức</TableCell>\r\n                                                        <TableCell align=\"right\">Điểm</TableCell>\r\n                                                        <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                        <TableCell align=\"right\"></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.tempMinitaskList.map(row => (\r\n                                                        <TableRow key={row.task_name}>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    size=\"small\"\r\n                                                                    startIcon={<ArrowBackIcon />}\r\n                                                                    aria-label=\"move selected right\"\r\n                                                                    onClick={() => this.getMinitaskFromBank(row)}\r\n                                                                >\r\n                                                                    {/* &lt; */}\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                <Typography style={{ fontWeight: 700, fontSize: 14 }}>\r\n                                                                    {row.mini_task_name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                            <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                            <TableCell align=\"right\">\r\n                                                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                    <div style={{ marginLeft: 10 }}>\r\n                                                                        {/* {row.level} */}\r\n                                                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                                                    </div>\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box p={2}>\r\n                                <Button startIcon={<SaveIcon />} variant=\"contained\" onClick={this.saveFight} style={{ backgroundColor: \"#7BC043\", color: \"white\" }}>\r\n                                    Lưu\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                </SnackbarProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(UpdateFightPage);","import React, { Component } from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    renderChinhPhucButton = (contestStatus, isUserJoinFight, minitask_id) => {\r\n        if (isUserJoinFight) {\r\n            if (contestStatus === 0) {\r\n                return <Box>\r\n                    <Button variant=\"contained\" component={Link} to={`/minitask/${minitask_id}`} style={{ backgroundColor: \"#4FA34F\", color: \"white\" }}>\r\n                        <Typography style={{ color: \"white\", fontWeight: 500 }} >Chinh phục</Typography>\r\n                    </Button>\r\n                </Box>\r\n            } else {\r\n                return \"\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { status, level, name, minitask, } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box mx={2}>\r\n                    <Divider />\r\n                    <Box my={1}>\r\n                        <Grid container xs={12}>\r\n                            <Grid container item xs={1} sm={1} md={1} alignContent=\"center\" justify=\"center\">\r\n                                {this.renderStatus(status)}\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8} md={8}>\r\n                                <Grid container mx={2} xs={12}>\r\n                                    <Grid container item xs={12} md={12} sm={12}>\r\n                                        <Typography noWrap style={{ color: \"#0373BB\", fontWeight: \"500\", fontSize: 18 }}>{name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container mx={2} xs={12}>\r\n                                    <Grid item xs={4} md={4} sm={4}>\r\n                                        <Typography variant=\"button\">Điểm: {minitask.code_point}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8} md={8} sm={8}>\r\n                                        <Typography variant=\"button\">Độ khó: </Typography> {this.renderLevel(level)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid container item xs={3} sm={3} md={3} justify=\"center\" alignContent=\"center\">\r\n                                {\r\n                                    this.renderChinhPhucButton(contestStatus, isUserJoinFight, minitask.id)\r\n                                }\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Box>\r\n                    <Divider />\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nclass UserRank extends Component {\r\n    componentDidMount(){\r\n        console.log(this.props.user);\r\n    }\r\n    render() {\r\n        const { user, rank, isCurrentUser } = this.props;\r\n        return (\r\n            <Grid container xs={12} wrap=\"nowrap\" spacing={2} style={{backgroundColor: isCurrentUser?\"#F1F1F1\":\"\"}}>\r\n                <Grid item xs={1} md={1} sm={1}>\r\n                    <Typography style={{fontWeight:350, fontSize:16}}>{rank+1}</Typography>\r\n                </Grid>\r\n                <Grid item xs={7} md={7} sm={7} wrap=\"nowrap\">\r\n                    <Typography style={{fontWeight:350, fontSize:16}} noWrap>{user.email}</Typography>\r\n                </Grid>\r\n                <Grid item container justify=\"center\"  xs={4} md={4} sm={4}>\r\n                    <Typography style={{fontWeight:350, fontSize:16}}>{user.point}</Typography>\r\n                </Grid>\r\n                {/* <Grid item container xs={4} md={4} sm={4}>\r\n                    <Typography noWrap style={{fontWeight:350, fontSize:16}}>{new Date(user.finished_time).toLocaleTimeString() === \"06:42:04\"}</Typography>\r\n                </Grid> */}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserRank;","import React, { Component } from 'react';\r\n\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    // AppBar,\r\n    // Tabs,\r\n    // Tab,\r\n    Typography,\r\n    Button,\r\n    Divider,\r\n    Paper,\r\n    TextField,\r\n    Chip,\r\n    Avatar,\r\n    Fade,\r\n    CardMedia,\r\n    Slide,\r\n} from \"@material-ui/core\";\r\n\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\n// import {Link} from \"react-router-dom\";\r\n\r\nimport Minitask from \"./Minitask\";\r\nimport UserRank from './UserRank';\r\n\r\n// import Modal from 'react-awesome-modal';\r\nimport axios from 'axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\nimport { matchPath } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { connect } from \"react-redux\";\r\nimport Notfoundpage from './Notfoundpage';\r\n\r\n\r\nimport { sendMsg } from \"../../websocket\";\r\n\r\n// import { connectWebSocket } from \"../../websocket\"\r\nimport { withRouter } from 'react-router-dom'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass RoomDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            isOpenSearchFriend: false,\r\n            users: [],\r\n            email: '',\r\n            invitedUsers: [],\r\n            isLoadingSearch: false,\r\n            fight: {},\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            users_fight: [],\r\n            isUserJoinFight: '',\r\n            minitaskList: [],\r\n            firstIdMinitask: \"\",\r\n            isLoadingStartBtn: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(res => {\r\n            this.setState({ fight: res.data }, () => {\r\n                var code;\r\n                const { fight } = this.state;\r\n                if ((new Date() < new Date(fight.time_start))) {\r\n                    code = -1;\r\n                }\r\n                if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n                    // Đang diển ra\r\n                    code = 0;\r\n                }\r\n                if ((new Date() > new Date(fight.time_end))) {\r\n                    code = 1;\r\n                }\r\n                this.setState({ contestStatus: code });\r\n                this.interval = setInterval(() => {\r\n                    const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n                    date ? this.setState(date) : this.stop();\r\n                }, 1000);\r\n                // Get list minitask\r\n                axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(res => {\r\n                    const fight_minitask = res.data;\r\n                    const completed = res.data;\r\n                    this.setState({ minitaskList: completed, firstIdMinitask: completed[0].id })\r\n                    console.log(this.state.minitaskList);\r\n                    console.log(this.state.firstIdMinitask);\r\n                    this.setState({\r\n                        fight_minitask,\r\n                    }, () => {\r\n                        axios.get(`http://localhost:8081/api/v1/curd/user-fight/${id}`).then(user => {\r\n                            const users_fight = user.data;\r\n                            console.log(users_fight);\r\n                            this.setState({\r\n                                users_fight: user.data,\r\n                                invitedUsers: user.data,\r\n                            }, () => {\r\n                                axios.get(`http://localhost:8081/api/v1/curd/isUserJoinFight/${id}/`).then(isUserJoin => {\r\n                                    console.log(isUserJoin);\r\n                                    this.setState({\r\n                                        isUserJoinFight: isUserJoin.data,\r\n                                        isLoading: false\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n        // Websocket\r\n        // connectWebSocket((msg) => {\r\n        //     // alert(\"hello\")\r\n        //     console.log(msg.data);\r\n        // });\r\n\r\n        // axios\r\n        //     .get(`http://localhost:8081/api/v1/curd/listminitaskfight/5ea6ec54e939f21a5432ba66`)\r\n        //     .then(res => {\r\n        //         const completed = res.data;\r\n        //         this.setState({ minitaskList: completed, firstIdMinitask: completed[0].id})\r\n        //         console.log(this.state.minitaskList);\r\n        //         console.log(this.state.firstIdMinitask);\r\n        //     });\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/contest-detail/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    // handle search user\r\n    handleSearchUser = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({ email, isLoadingSearch: true }, () => {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchUser/${email}/`).then(res => {\r\n                this.setState({\r\n                    users: res.data,\r\n                    isLoadingSearch: false,\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    headerLeaderBoard = () => {\r\n        return <Grid container xs={12} wrap=\"nowrap\" spacing={2}>\r\n            <Grid item xs={1} md={1} sm={1}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>#</Typography>\r\n            </Grid>\r\n            <Grid item xs={7} md={7} sm={7} wrap=\"nowrap\">\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Tên đăng nhập</Typography>\r\n            </Grid>\r\n            <Grid item container justify=\"center\" xs={4} md={4} sm={4}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Điểm</Typography>\r\n            </Grid>\r\n            {/* <Grid item xs={4} md={4} sm={4}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Thời gian</Typography>\r\n            </Grid> */}\r\n        </Grid>;\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    handleOpenSearchUserModal = () => {\r\n        this.setState({ isOpenSearchFriend: true });\r\n    }\r\n\r\n    checkUserInInvitedList = (id) => {\r\n        const invitedUsers = this.state.invitedUsers;\r\n        console.log(invitedUsers);\r\n        for (var i = 0; i < invitedUsers.length; i++) {\r\n            if (invitedUsers[i].id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleInviteUser = (user) => {\r\n        const { invitedUsers, users_fight, fight } = this.state;\r\n        console.log(fight.numbers_std);\r\n        console.log(users_fight.length);\r\n        if (users_fight.length < fight.numbers_std) {\r\n            if (this.checkUserInInvitedList(user.id)) {\r\n                user.isNew = true;\r\n                invitedUsers.push(user);\r\n                this.setState({ invitedUsers });\r\n            } else {\r\n                this.props.enqueueSnackbar('Người dùng đã được mời', {\r\n                    variant: 'warning',\r\n                });\r\n            }\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'warning',\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteUserFromInvitedList = (deleted_user) => {\r\n        const { invitedUsers, fight } = this.state;\r\n        const { user } = this.props;\r\n        var i = -1;\r\n\r\n        console.log(deleted_user.id);\r\n\r\n        if(deleted_user.email !== user.email){\r\n            invitedUsers.forEach((user, index) => {\r\n                if (user.id === deleted_user.id) {\r\n                    i = index;\r\n                }\r\n            });\r\n        } else {\r\n            this.props.enqueueSnackbar('Không thể xóa Host', {\r\n                variant: 'warning',\r\n            });\r\n        }\r\n        if (i !== -1) {\r\n            invitedUsers.splice(i, 1);\r\n            this.setState({ invitedUsers });\r\n            if (!deleted_user.isNew) {\r\n                // kick user\r\n                axios.delete(`http://localhost:8081/api/v1/curd/kick-user-out-fight/${deleted_user.id}/${fight.id}/`).then(res => {\r\n                    if (res.data === \"ok\") {\r\n                        this.send(fight.id);\r\n                        this.props.enqueueSnackbar('Xóa thành công', {\r\n                            variant: 'success',\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                this.props.enqueueSnackbar('Xóa thành công', {\r\n                    variant: 'success',\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModalError = (e) => {\r\n        this.setState({ isOpenSearchFriend: false });\r\n    }\r\n\r\n    send = (id) => {\r\n\r\n        console.log(\"send\");\r\n\r\n        sendMsg(JSON.stringify({\r\n            fight_id: id,\r\n            user_id: \"\",\r\n            minitask_id: \"\",\r\n            point: 0,\r\n            request: \"get-leader-board\",\r\n        }))\r\n    }\r\n\r\n    handleJoinFight = () => {\r\n        const { users_fight, fight } = this.state;\r\n        if (users_fight.length < fight.numbers_std) {\r\n            axios.post(`http://localhost:8081/api/v1/curd/jointFight/${fight.id}/`).then(res => {\r\n                console.log(res.data);\r\n                const { users_fight } = this.state;\r\n                users_fight.push(res.data)\r\n                this.setState({ isUserJoinFight: true, users_fight }, () => {\r\n                    console.log(this.state.users_fight);\r\n                })\r\n                this.props.enqueueSnackbar('Đăng ký thành công', {\r\n                    variant: 'success',\r\n                });\r\n                this.send(fight.id);\r\n            });\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'warning',\r\n            });\r\n        }\r\n    }\r\n\r\n    renderInviteFriendButton = (user_created, contestStatus) => {\r\n        if (user_created === this.props.user.email) {\r\n            if (contestStatus !== 1) {\r\n                return <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#4FA34F\", color: \"white\" }} onClick={this.handleOpenSearchUserModal}\r\n                        startIcon={<PersonAddIcon style={{ color: \"white\" }} />}>\r\n                        <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                            Mời bạn\r\n                        </Typography>\r\n                    </Button>\r\n                </Fade>\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    inviteFriendByMail = () => {\r\n        const { users_fight, fight } = this.state;\r\n        console.log(users_fight);\r\n        if (users_fight.length <= fight.numbers_std) {\r\n            for (var i = 0; i < users_fight.length; i++) {\r\n                if (users_fight[i][\"isNew\"]) {\r\n                    if (users_fight.length <= fight.numbers_std) {\r\n                        users_fight[i][\"isNew\"] = false;\r\n                        this.send(fight.id);\r\n                        axios.post(`http://localhost:8081/api/v1/curd/jointFight_1/${fight.id}/${users_fight[i].id}/${users_fight[i].email}/`).then(res => {\r\n                            this.props.enqueueSnackbar(`Đã thêm ${res.data.email} vào cuộc thi!`, {\r\n                                variant: 'success',\r\n                            });\r\n                        });\r\n                        axios.post(`http://localhost:8081/api/v1/curd/invite-user`, {\r\n                            host: this.props.user.email,\r\n                            user: users_fight[i].email,\r\n                            link: `http://localhost:3000/profile/contest-detail/${fight.id}`\r\n                        }).then(res => {\r\n                            // console.log(res);\r\n                        });\r\n                    } else {\r\n                        this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                            variant: 'warning',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'success',\r\n            });\r\n        }\r\n    }\r\n\r\n    renderRegisterButton = (contestStatus, isUserJoinFight) => {\r\n        if (!isUserJoinFight) {\r\n            if (contestStatus !== 1) {\r\n                return <Box>\r\n                    <Fade in={!isUserJoinFight} {...(true ? { timeout: 1000 } : {})}>\r\n                        <Button variant=\"contained\" onClick={this.handleJoinFight} style={{ backgroundColor: \"#4F5060\" }}>\r\n                            <Typography variant=\"button\" style={{ color: \"white\" }}>Đăng ký ngay</Typography>\r\n                        </Button>\r\n                    </Fade>\r\n                </Box>;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    renderFighType = (fight_type) => {\r\n        if (fight_type === \"private\") {\r\n            return <Chip size=\"small\" label=\"Riêng tư\" style={{ backgroundColor: \"#C24535\", color: \"white\" }} />;\r\n        } else if (fight_type === \"public\") {\r\n            return <Chip size=\"small\" label=\"Công khai\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    handleClickStartButton = () => {\r\n        const { fight } = this.state;\r\n        this.setState({ isLoadingStartBtn: true })\r\n        axios.get(`http://localhost:8081/api/v1/curd/start-fight/${fight.id}`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ isLoadingStartBtn: false });\r\n            this.props.history.push(`/fight/${fight.id}/minitask/${this.state.firstIdMinitask}`)\r\n        });\r\n    }\r\n\r\n    renderStartButton = () => {\r\n        const { isUserJoinFight, contestStatus, isLoadingStartBtn } = this.state;\r\n        if (isUserJoinFight && contestStatus !== 1) {\r\n            return <Button variant=\"contained\" onClick={this.handleClickStartButton} style={{ backgroundColor: \"#DE1F45 \", color: \"white\" }}\r\n                // component={Link} to={`/fight/${fight.id}/minitask/${this.state.firstIdMinitask}`}\r\n                startIcon={<PlayArrowIcon style={{ color: \"white\" }} />}>\r\n                <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                    {\r\n                        isLoadingStartBtn ?\r\n                            <CircularProgress size={20} style={{ color: \"white\", fontSize: 10 }} /> : \"Bắt đầu\"\r\n                    }\r\n                </Typography>\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    handleClickViewLeaderBoard = () => {\r\n        const { fight } = this.state;\r\n        this.props.history.push(`/profile/fight-leader-board/${fight.id}`);\r\n    }\r\n\r\n    render() {\r\n        const { contestStatus, days, hours, min, sec, isOpenSearchFriend, email, users, invitedUsers, isLoadingSearch, fight, fight_minitask, isLoading, users_fight\r\n            , isUserJoinFight } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n        let timer;\r\n        if (contestStatus === 0) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#f44336\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                        Còn lại\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === -1) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#4caf50\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                        Sắp diển ra\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === 1) {\r\n            timer = <React.Fragment>\r\n                <Box display=\"flex\" color=\"#757575\">\r\n                    <Box mx={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            Kết thúc\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={1} display=\"flex\" color=\"#757575\">\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {new Date(fight.time_end).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </React.Fragment>\r\n        }\r\n\r\n        const userList = users.map((user, index) => {\r\n            return <Box display=\"flex\" p={1} onClick={() => this.handleInviteUser(user)}>\r\n                <Chip\r\n                    avatar={<Avatar alt=\"Ảnh đại diện\" src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar} />}\r\n                    label={user.email}\r\n                    variant=\"outlined\"\r\n                />\r\n            </Box>\r\n        });\r\n\r\n        const invitedUserList = invitedUsers.map((user, index) => {\r\n            return <Fade in={true}><Box p={1}>\r\n                <Chip\r\n                    avatar={<Avatar alt=\"Ảnh đại diện\" src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar} />}\r\n                    label={user.email}\r\n                    variant=\"outlined\"\r\n                    color={!user.isNew ? \"\" : \"primary\"}\r\n                    onDelete={() => this.handleDeleteUserFromInvitedList(user)}\r\n                />\r\n            </Box>\r\n            </Fade>;\r\n        });\r\n\r\n        const fight_minitask_list = fight_minitask.map((minitask, index) => {\r\n            return <Slide direction=\"right\" in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                <Minitask status={minitask.status} level={minitask.level} name={minitask.mini_task_name} minitask={minitask} isUserJoinFight={isUserJoinFight} contestStatus={contestStatus} />\r\n            </Slide>\r\n        });\r\n\r\n        const leaderBoard = users_fight.map((user, index) => {\r\n            return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1000 } : {})}>\r\n                <UserRank user={user} rank={index} isCurrentUser={this.props.user.email === user.email} />\r\n            </Fade>\r\n        });\r\n\r\n        if (!isUserJoinFight && fight.fight_type === \"private\" && this.props.user.email !== fight.user_created) {\r\n            return <Slide in={true} direction=\"down\" {...(true ? { timeout: 1000 } : {})} style={{ minWidth: 100 }}>\r\n                <Notfoundpage />\r\n            </Slide>\r\n        }\r\n\r\n        return (\r\n            <SnackbarProvider maxSnack={1}>\r\n                <Grid xs={12} style={{ position: 'relative', display: 'flex', justifyContent: 'flex-end', alignItems: \"flex-start\" }}>\r\n                    <Slide in={isOpenSearchFriend} direction=\"down\" {...(true ? { timeout: 1000 } : {})} style={{ minWidth: 100 }}>\r\n                        <Grid container xs={7} style={{ position: 'absolute', zIndex: 999 }} onClickAway={this.closeModalError}>\r\n                            <Grid item xs={6} md={6} sm={6}>\r\n                                <Box p={2} borderRadius={16} borderColor=\"grey.500\" border={4} style={{ width: '100%', height: 500, overflowY: \"auto\", overflowX: \"hidden\", backgroundColor: \"#FFFFFF\", }}>\r\n                                    <Box p={1}>\r\n                                        <TextField id=\"outlined-basic\" label=\"Tìm kiếm bạn bè\" variant=\"outlined\" fullWidth\r\n                                            value={email}\r\n                                            onChange={this.handleSearchUser}\r\n                                            InputProps={{\r\n                                                startAdornment: <SearchIcon position=\"start\"></SearchIcon>,\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box p={1}>\r\n                                        {isLoadingSearch ?\r\n                                            <Grid container justify=\"center\" justifyContent=\"center\">\r\n                                                <CircularProgress />\r\n                                            </Grid>\r\n                                            :\r\n                                            userList\r\n                                        }\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6} sm={6}>\r\n                                <Box borderRadius={16} borderColor=\"grey.500\" border={4} p={2} style={{ width: '100%', height: 500, backgroundColor: \"#FFFFFF\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                                    <Grid container xs={12}>\r\n                                        <Grid item container xs={4} md={4} sm={4}>\r\n                                            <Box p={1}>\r\n                                                <Typography style={{ fontWeight: 600, fontSize: 15 }}>Bạn bè ({invitedUserList.length})</Typography>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Divider />\r\n                                        <Grid item container xs={6} md={6} sm={6}>\r\n                                            <Box>\r\n                                                <Button variant=\"contained\" style={{ backgroundColor: \"#257885\", color: \"white\" }} onClick={this.inviteFriendByMail}\r\n                                                    startIcon={<SendIcon style={{ color: \"white\" }} />}>\r\n                                                    <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                                                        Gửi\r\n                                                    </Typography>\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item container xs={2} md={2} sm={2} justify=\"flex-end\">\r\n                                            <Box>\r\n                                                <IconButton aria-label=\"delete\" onClick={this.closeModalError}>\r\n                                                    <CloseIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12}>\r\n                                        <Box p={1}>\r\n                                            {invitedUserList}\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Divider />\r\n                    <Grid xs={12} style={{ zIndex: 1 }}>\r\n                        <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                            <Grid style={{ backgroundColor: \"white\", borderRadius: 8 }} container xs={12} justify=\"center\">\r\n                                <Grid xs={12} sm={3} md={3}>\r\n                                    <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"220\"\r\n                                            src={fight.backgroud_img}\r\n                                            title=\"Contemplative Reptile\"\r\n                                            style={{ borderRadius: 16 }}\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={9} md={9}>\r\n                                    <Box mx={2} mt={2} display=\"flex\">\r\n                                        <Grid container xs={12}>\r\n                                            <Grid container item xs={6} sm={6} md={6}>\r\n                                                <Typography style={{ fontSize: 35, fontWeight: 900, color: \"#353535 \" }}>\r\n                                                    {fight.fight_name} {this.renderFighType(fight.fight_type)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={6} sm={6} md={6} justify=\"flex-end\" alignContent=\"center\">\r\n                                                {this.renderRegisterButton(contestStatus, isUserJoinFight)}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mx={2} mb={8} display=\"flex\">\r\n                                        <Typography style={{ fontSize: 20, fontWeight: 300 }}>\r\n                                            {fight.fight_desc}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Box p={2} display=\"flex\">\r\n                                        <Grid container xs={12}>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                                                    {users_fight.length + \"/\" + fight.numbers_std} thí sinh\r\n                                            </Typography>\r\n                                            </Grid>\r\n                                            <Grid item container xs={2} justify=\"center\">\r\n                                                <Typography noWrap style={{ fontSize: 18, fontWeight: 550, color: \"#4F5060\" }}>\r\n                                                    Host: {fight.user_created}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item container xs={6} justify=\"center\" alignItems=\"center\">\r\n                                                <Grid>\r\n                                                    {timer}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} container justify=\"flex-end\" alignItems=\"center\">\r\n                                                {this.renderInviteFriendButton(fight.user_created, contestStatus)}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                {/* <Grid item xs={2}>\r\n                                    <Button variant=\"contained\" style={{ backgroundColor: \"#DE1F45 \", color: \"white\" }}\r\n                                        component={Link} to={`/fight/5ea6ec54e939f21a5432ba66/minitask/${this.state.firstIdMinitask}`}\r\n                                        startIcon={<PlayArrowIcon style={{ color: \"white\" }} />}>\r\n                                        <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                                            Bắt đầu\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Grid> */}\r\n                                {/* <Grid item xs={2}>\r\n                                    <Button variant=\"contained\" style={{ backgroundColor: \"#DE1F45 \", color: \"white\" }} \r\n                                            component={Link} to={`/fight/5ea6ec54e939f21a5432ba66/minitask/${this.state.firstIdMinitask}`}\r\n                                            startIcon={<PlayArrowIcon style={{ color: \"white\" }} />}>\r\n                                        <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                                            Bắt đầu\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Fade>\r\n                        <Divider />\r\n                        {\r\n                            contestStatus === -1 && this.props.user.email !== fight.user_created ?\r\n                                <Box mt={2}>\r\n                                    <Grid container xs={12} spacing={1}>\r\n                                        <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                            <Grid item xs={12} md={12} sm={12}>\r\n                                                <Paper>\r\n                                                    <Box p={1}>\r\n                                                        <Box my={1} display=\"flex\">\r\n                                                            <Box mx={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                                                <Box>\r\n                                                                    <EqualizerIcon fontSize=\"large\" />\r\n                                                                </Box>\r\n                                                            </Box>\r\n                                                            <Box mx={1}>\r\n                                                                <Typography style={{ fontWeight: 500, fontSize: 22 }}>Danh sách thí sinh</Typography>\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                        <Box my={1} p={1}>\r\n                                                            {this.headerLeaderBoard()}\r\n                                                            <Divider />\r\n                                                            <Box my={1}>\r\n                                                                {\r\n                                                                    leaderBoard.length === 0 ?\r\n                                                                        <Typography style={{ fontWeight: 200, fontSize: 18, color: \"gray\" }}>Chưa có người dùng tham gia</Typography> :\r\n                                                                        leaderBoard\r\n                                                                }\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </Fade>\r\n                                    </Grid>\r\n                                </Box>\r\n                                :\r\n                                <Box mt={1}>\r\n                                    <Grid container xs={12} spacing={1}>\r\n                                        <Grid item xs={7} md={7} sm={7} disable=\"true\">\r\n                                            <Paper>\r\n                                                <Box p={1}>\r\n                                                    <Grid container>\r\n                                                        <Grid container xs={1}>\r\n                                                            <Box ml={2}>\r\n                                                                <CodeIcon style={{ fontSize: 30 }}/>\r\n                                                            </Box>\r\n                                                        </Grid>\r\n                                                        <Grid container xs={7} justify=\"flex-start\">\r\n                                                            <Typography style={{ fontWeight: 600, fontSize: 22 }}>Thách thức ({fight_minitask.length})</Typography>\r\n                                                        </Grid>\r\n                                                        <Grid container xs={4} justify=\"flex-end\" alignItems=\"flex-end\">\r\n                                                            {this.renderStartButton()}\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Box my={1}>\r\n                                                        {\r\n                                                            fight_minitask_list.length === 0 ?\r\n                                                                <Typography style={{ fontWeight: 200, fontSize: 18, color: \"gray\" }}>Không có dữ liệu</Typography> :\r\n                                                                fight_minitask_list\r\n                                                        }\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs={5} md={5} sm={5}>\r\n                                            <Paper>\r\n                                                <Grid>\r\n                                                    <Box p={1}>\r\n                                                        <Box my={1} display=\"flex\">\r\n                                                            <Grid container xs={1}>\r\n                                                                <Box mx={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                                                    <Box>\r\n                                                                        <EqualizerIcon fontSize=\"large\" />\r\n                                                                    </Box>\r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                            <Grid container xs={7}>\r\n                                                                <Box mx={1}>\r\n                                                                    <Typography style={{ fontWeight: 600, fontSize: 22 }}>Danh sách thí sinh</Typography>\r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                            <Grid container xs={4} justify=\"flex-end\">\r\n                                                                <Fade in={true}>\r\n                                                                    <Box mx={1}>\r\n                                                                        <Button variant=\"contained\" onClick={this.handleClickViewLeaderBoard} style={{ backgroundColor: \"#007ABB\" }}>\r\n                                                                            <Typography style={{ fontSize: 15, fontWeight: 500, color: \"#FFFFFF\" }}>\r\n                                                                                Xếp hạng\r\n                                                                            </Typography>\r\n                                                                        </Button>\r\n                                                                    </Box>\r\n                                                                </Fade>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                        <Box my={1} p={1}>\r\n                                                            {this.headerLeaderBoard()}\r\n                                                            <Divider />\r\n                                                            <Box my={1}>\r\n                                                                {leaderBoard}\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </SnackbarProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.rootReducer.user\r\n});\r\n\r\nexport default withSnackbar(connect(mapStateToProps, null)(withRouter(RoomDetail)));","import React, { Component } from 'react';\r\nimport {\r\n    TableCell, Typography, Grid\r\n} from \"@material-ui/core\";\r\n\r\nclass MinitaskBoard extends Component {\r\n    render() {\r\n\r\n        const { minitask, index } = this.props;\r\n\r\n        return (\r\n            <TableCell align=\"center\">\r\n                <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography noWrap style={{ fontSize: 15, fontWeight: 600, color: \"white\" }}>\r\n                            BÀI {index + 1}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography noWrap style={{ fontSize: 15, fontWeight: 600, color: \"white\" }}>\r\n                            {minitask.mini_task_name}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </TableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinitaskBoard;","import React, { Component } from 'react';\r\nimport {\r\n    TableCell, Grid, Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nclass MinitaskBoardInfo extends Component {\r\n    render() {\r\n\r\n        const { status, tried, point } = this.props;\r\n\r\n        return (\r\n            <TableCell align=\"center\">\r\n                <Grid container justify=\"center\">\r\n                    {\r\n                        status===\"tried\" ? <ErrorOutlineIcon color=\"primary\" fontSize=\"medium\" /> : <DoneIcon style={{ color: \"#4FB834\" }} fontSize=\"medium\" />\r\n                    }\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 500 }}>\r\n                        {\r\n                            status === \"tried\" ? \"-\" : point\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography style={{ fontSize: 12, fontWeight: 400, color: \"#70757A\" }}>\r\n                        {tried} lần thử\r\n                    </Typography>\r\n                </Grid>\r\n            </TableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinitaskBoardInfo;","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass TopUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            widthAvt: 0,\r\n            heightAvt: 0,\r\n            medal: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { rank } = this.props;\r\n        if (rank === 1 + \"st\") {\r\n            this.setState({ widthAvt: 100, heightAvt: 100, medal: '#EAA30B' });\r\n        }\r\n        if (rank === 2 + \"nd\") {\r\n            this.setState({ widthAvt: 80, heightAvt: 80, medal: '#A7B1B1' });\r\n        }\r\n        if (rank === 3 + \"rd\") {\r\n            this.setState({ widthAvt: 60, heightAvt: 60, medal: '#CB8E66' });\r\n        }\r\n    }\r\n\r\n    renderTopUser = () => {\r\n        const { user, rank, leader_board_type, user_fight_info, coding_time } = this.props;\r\n        const { widthAvt, heightAvt, medal } = this.state;\r\n        if (leader_board_type === \"general\") {\r\n            return <Box display=\"flex\"\r\n                alignItems=\"flex-end\"\r\n                justifyContent=\"center\"\r\n                mt={2}\r\n                css={{ height: 200 }}\r\n            >\r\n                <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n                    <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n                        <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n                            src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {rank}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                            {user.firstname + \" \" + user.lastname}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box bgcolor={medal} style={{ height: '45px' }} justifyContent=\"flex-start\" alignItems=\"center\">\r\n                        <Box p={1}>\r\n                            <Typography variant=\"overline\" display=\"block\">\r\n                                Điểm: {user.codepoint}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>;\r\n        } else if (leader_board_type === \"fight\") {\r\n            // return <Box display=\"flex\"\r\n            //     alignItems=\"center\"\r\n            //     justifyContent=\"center\"\r\n            //     mt={2}\r\n            //     css={{ height: 200 }}\r\n            // >\r\n            //     <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n            //         <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n            //             <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n            //                 src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n            //         </Box>\r\n            //         <Box display=\"flex\" justifyContent=\"center\">\r\n            //             <Typography variant=\"h5\" component=\"h2\">\r\n            //                 {rank}\r\n            //             </Typography>\r\n            //         </Box>\r\n            //         <Box display=\"flex\" justifyContent=\"center\">\r\n            //             <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n            //                 {user.firstname + \" \" + user.lastname}\r\n            //             </Typography>\r\n            //         </Box>\r\n            //         <Box bgcolor={medal} p={1} style={{ height: '47px' }}>\r\n            //             <Grid container xs={12} justify=\"center\" alignItems=\"center\">\r\n            //                 <Grid xs={6} container justify=\"center\" alignItems=\"center\">\r\n            //                     <Box>\r\n            //                         <Typography variant=\"button\" display=\"block\">\r\n            //                             Điểm: {user_fight_info.point}\r\n            //                         </Typography>\r\n            //                     </Box>\r\n            //                 </Grid>\r\n            //                 <Grid xs={6} container justify=\"center\" alignItems=\"center\">\r\n            //                     <Box>\r\n            //                         <Typography variant=\"button\" display=\"block\">\r\n            //                             Thời gian: {coding_time}\r\n            //                         </Typography>\r\n            //                     </Box>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //         </Box>\r\n            //     </Box>\r\n            // </Box>;\r\n            return <Box display=\"flex\"\r\n                alignItems=\"flex-end\"\r\n                justifyContent=\"center\"\r\n                mt={4}\r\n                mb={1}\r\n                css={{ height: 200 }}\r\n            >\r\n                <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n                    <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n                        <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n                            src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {rank}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                            {user.firstname + \" \" + user.lastname}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box bgcolor={medal} display=\"flex\" style={{ height: '45px' }} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Box p={1}>\r\n                            <Typography variant=\"button\" display=\"block\">\r\n                                Điểm: {user_fight_info.point}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1}>\r\n                            <Typography variant=\"button\" display=\"block\">\r\n                                Thời gian: {coding_time}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // let { user, rank, leader_board_type } = this.props;\r\n        // let { widthAvt, heightAvt, medal } = this.state;\r\n        return (\r\n            <Grid xs={4} justify=\"center\" item>\r\n                {this.renderTopUser()}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopUser;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow, TableCell, TableBody, Typography, Divider,\r\n    Box, CardMedia, Paper,\r\n    Slide, Fade\r\n} from \"@material-ui/core\";\r\nimport MinitaskBoard from \"./MinitaskBoard\";\r\nimport MinitaskBoardInfo from \"./MinitaskBoardInfo\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { matchPath } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport TopUser from \"../leaderboard/TopUser\";\r\n\r\nimport { connectWebSocket, sendMsg } from \"../../websocket\";\r\n\r\nclass MainLeaderBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            fight: {},\r\n            leaderBoard: [],\r\n            fight_minitasks: [],\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            isLoading: true,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var id = this.getParams(this.props.location.pathname).id;\r\n        await Promise.all([\r\n            // Fight ID\r\n            connectWebSocket((msg) => {\r\n                // alert(\"hello\")\r\n                console.log(msg.data);\r\n                var data = JSON.parse(msg.data);\r\n                if (data.message === \"get-leader-board\") {\r\n                    console.log(\"get leader board change\");\r\n                    this.setState({\r\n                        leaderBoard: data.leader_board,\r\n                    })\r\n                }\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(res => {\r\n                this.setState({ fight: res.data }, () => {\r\n                    var code;\r\n                    const { fight } = this.state;\r\n                    if ((new Date() < new Date(fight.time_start))) {\r\n                        code = -1;\r\n                    }\r\n                    if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n                        // Đang diển ra\r\n                        code = 0;\r\n                    }\r\n                    if ((new Date() > new Date(fight.time_end))) {\r\n                        code = 1;\r\n                    }\r\n                    this.setState({ contestStatus: code });\r\n                    console.log(fight)\r\n                    this.interval = setInterval(() => {\r\n                        const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n                        date ? this.setState(date) : this.stop();\r\n                    }, 1000);\r\n                })\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(user => {\r\n                const fight = user.data;\r\n                console.log(fight);\r\n                this.setState({\r\n                    fight\r\n                });\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/user-fight-leader-board/${id}`).then(user => {\r\n                const users_fight = user.data;\r\n                console.log(users_fight);\r\n                this.setState({\r\n                    leaderBoard: user.data,\r\n                    isLoading: false,\r\n                });\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(user => {\r\n                const fight_minitasks = user.data;\r\n                this.setState({ fight_minitasks })\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    send = () => {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        console.log(\"send\");\r\n\r\n        sendMsg(JSON.stringify({\r\n            fight_id: id,\r\n            user_id: \"\",\r\n            minitask_id: \"\",\r\n            point: 0,\r\n            request: \"get-leader-board\",\r\n        }))\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/fight-leader-board/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    renderCodingTime = (miliSec) => {\r\n        var seconds = Math.floor((miliSec / 1000) % 60),\r\n            minutes = Math.floor((miliSec / (1000 * 60)) % 60),\r\n            hours = Math.floor((miliSec / (1000 * 60 * 60)) % 24);\r\n            var days = Math.floor(miliSec / (24 * 60 * 60 * 1000));\r\n\r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n        days = (days < 10) ? \"0\" + days : days;\r\n\r\n        return days + \":\" + hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n\r\n    renderRank = (rank) => {\r\n        if (rank === 1) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/1st.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else if (rank === 2) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/2nd.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else if (rank === 3) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/3rd.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else {\r\n            return <Typography noWrap style={{ fontSize: 15, fontWeight: 600 }}>\r\n                {rank}\r\n            </Typography>\r\n        }\r\n    }\r\n\r\n    renderFightUserMinitask = (minitasks) => {\r\n        const result = minitasks.map((minitask) => {\r\n            return <MinitaskBoardInfo status={minitask.status} point={minitask.point} tried={minitask.tried} />\r\n        });\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { leaderBoard, fight_minitasks, fight, contestStatus, days, hours, min, sec, isLoading } = this.state;\r\n\r\n        const fight_minitask_list = fight_minitasks.map((minitask, index) => {\r\n            return <MinitaskBoard minitask={minitask} index={index} />\r\n        });\r\n\r\n        let timer;\r\n        if (contestStatus === 0) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#f44336\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                        Còn lại\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === -1) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#4caf50\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                        Sắp diển ra\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === 1) {\r\n            timer = <React.Fragment>\r\n                <Box display=\"flex\" color=\"#757575\">\r\n                    <Box mx={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            Kết thúc\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={1} display=\"flex\" color=\"#757575\">\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {new Date(fight.time_end).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </React.Fragment>\r\n        }\r\n\r\n        const userList = leaderBoard.map((user) => {\r\n            return <TableBody>\r\n                <TableRow >\r\n                    <TableCell align=\"center\">\r\n                        <Grid container justify=\"center\">\r\n                            {this.renderRank(user.rank + 1)}\r\n                        </Grid>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Grid container>\r\n                            <Typography noWrap style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                {user.email}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </TableCell>\r\n                    {this.renderFightUserMinitask(user.fight_user_minitask)}\r\n                    <TableCell>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 21, fontWeight: 500, color: \"#E3524B\" }}>\r\n                                {user.point}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 14, fontWeight: 400, color: \"#70757A\", fontStyle: \"Italic\" }}>\r\n                                {\r\n                                    user.coding_time === -1 ? \"00:00:00:00\" :\r\n                                        this.renderCodingTime(user.coding_time)\r\n                                }\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 12, fontWeight: 400, color: \"#70757A\" }}>\r\n                                {user.tried} lần thử\r\n                            </Typography>\r\n                        </Grid>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    isLoading ?\r\n                        <div\r\n                            className=\"sweet-loading\"\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                width: \"100%\",\r\n                                height: \"100vh\"\r\n                            }}\r\n                        >\r\n                            <HashLoader\r\n                                sizeUnit={\"px\"}\r\n                                size={50}\r\n                                color={\"#AEA8A8\"}\r\n                                loading={this.state.isLoading}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <Grid>\r\n                            {/* <button onClick={this.send}>Hit</button> */}\r\n                            <Slide in={true} direction=\"down\" {...(true ? { timeout: 1500 } : {})}>\r\n                                <Paper>\r\n                                    <Box p={1}>\r\n                                        <Grid container justify=\"center\">\r\n                                            <Grid container xs={12} justify=\"center\">\r\n                                                <Box display=\"flex\" p={2}>\r\n                                                    <ShowChartIcon style={{ fontSize: 60, fontWeight: 250, color: \"gray\" }} />\r\n                                                    <Typography style={{ fontSize: 40, fontWeight: 400, color: \"#009688\" }}>\r\n                                                        {fight.fight_name}\r\n                                                    </Typography>\r\n                                                    <ShowChartIcon style={{ fontSize: 60, fontWeight: 250, color: \"gray\" }} />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid container xs={12} justify=\"center\">\r\n                                                <Box display=\"flex\">\r\n                                                    {timer}\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Paper>\r\n                            </Slide>\r\n                            {/* <Divider /> */}\r\n                            {\r\n                                leaderBoard.length >= 3 ?\r\n                                    <Box>\r\n                                        <Grid container justify=\"center\" spacing={1}>\r\n                                            <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}>\r\n                                                <TopUser\r\n                                                    leader_board_type=\"fight\"\r\n                                                    user={leaderBoard[1].user_info}\r\n                                                    user_fight_info={leaderBoard[1]}\r\n                                                    rank={2 + \"nd\"}\r\n                                                    coding_time={\r\n                                                        leaderBoard[1].coding_time === -1 ? \"00:00:00\" :\r\n                                                            this.renderCodingTime(leaderBoard[1].coding_time)\r\n                                                    }\r\n                                                />\r\n                                            </Slide>\r\n                                            <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                                                <TopUser\r\n                                                    leader_board_type=\"fight\"\r\n                                                    user={leaderBoard[0].user_info}\r\n                                                    user_fight_info={leaderBoard[0]}\r\n                                                    rank={1 + \"st\"}\r\n                                                    coding_time={\r\n                                                        leaderBoard[0].coding_time === -1 ? \"00:00:00\" :\r\n                                                            this.renderCodingTime(leaderBoard[0].coding_time)\r\n                                                    }\r\n                                                />\r\n                                            </Fade>\r\n                                            <Slide in={true} direction=\"left\" {...(true ? { timeout: 1500 } : {})}>\r\n                                                <TopUser\r\n                                                    leader_board_type=\"fight\"\r\n                                                    user={leaderBoard[2].user_info}\r\n                                                    user_fight_info={leaderBoard[2]}\r\n                                                    rank={3 + \"rd\"}\r\n                                                    coding_time={\r\n                                                        leaderBoard[2].coding_time === -1 ? \"00:00:00\" :\r\n                                                            this.renderCodingTime(leaderBoard[2].coding_time)\r\n                                                    }\r\n                                                />\r\n                                            </Slide>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    : \"\"\r\n                            }\r\n                            <TableContainer >\r\n                                <Slide in={true} direction=\"up\" {...(true ? { timeout: 1500 } : {})}>\r\n                                    <Paper>\r\n                                        <Box p={1}>\r\n                                            <Table aria-label=\"simple table\">\r\n                                                <TableHead style={{ backgroundColor: \"#39B9AA\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                HẠNG\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                TÊN ĐĂNG NHẬP\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                        {fight_minitask_list}\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                TỔNG ĐIỂM\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                {userList}\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Slide>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainLeaderBoard;","import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\n//import ReactAdmin from \"../adminPage/hocode/ReactAdmin\";\r\nimport BallotIcon from \"@material-ui/icons/Ballot\";\r\nimport CardMembershipIcon from \"@material-ui/icons/CardMembership\";\r\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../js/actions/authActions\";\r\nimport Account from \"./content/account/Account\";\r\nimport CourseBody from \"./content/course/CourseBody1\";\r\nimport CreateMiniTask from \"./content/minitask/CreateMiniTaskBody\";\r\n//import MinitaskEdit from \"./content/minitask/MinitaskEdit\";\r\nimport Overview from \"./content/overview/Overview\";\r\nimport PrintBody from \"./content/print/PrintBody\";\r\nimport TaskBody from \"./content/task/TaskBody\";\r\nimport AppBarContent from \"./header/AppBarContent\";\r\nimport NavRight from \"./navRight/NavRight\";\r\nimport PracticePage from \"../practicePage/PracticePage\";\r\nimport \"./profilepage.css\";\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport RoomPracticePage from '../roomPractice/RoomPracticePage';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CreateRoomPage from '../roomPractice/CreateRoomPage';\r\nimport UpdateFightPage from '../roomPractice/UpdateFightPage';\r\nimport RoomDetail from '../roomPractice/RoomDetail';\r\nimport MainLeaderBoard from '../roomPractice/MainLeaderBoard';\r\n\r\nconst drawerWidth = 240;\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    background: \"#fff\"\r\n  },\r\n  drawerMain: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  navRight: {\r\n    top: \"65px\",\r\n    order: 2,\r\n    width: \"210px\",\r\n    height: \"calc(100vh - 65px)\",\r\n    display: \"none\",\r\n    padding: \"16px 32px\",\r\n    position: \"relative\", // sticky\r\n    // marginTop: \"65px\",\r\n    overflow: \"hidden\",\r\n    flexShrink: 0,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\"\r\n    },\r\n    background: \"white\"\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    },\r\n    background: \"#fff\",\r\n    boxShadow: \"unset!important\",\r\n    borderBottom: \"1px solid rgba(76, 87, 102, .1)\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    borderRadius: \"unser !important\"\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    background: \"#EFECE9\"\r\n  },\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  }\r\n});\r\nclass ProfilePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: [],\r\n      mobileOpen: false,\r\n      menu: 1\r\n    };\r\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\r\n\r\n    // console.log(this.props.match.url);\r\n  }\r\n\r\n  handleDrawerToggle() {\r\n    this.setState({ mobileOpen: !this.state.mobileOpen });\r\n  }\r\n  onClickMenuItem(menu) {\r\n    return e => {\r\n      this.setState({\r\n        menu: menu\r\n      });\r\n    };\r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    console.log(this.props);\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, container } = this.props;\r\n    const { mobileOpen } = this.state;\r\n    let { path, url } = this.props.match;\r\n    console.log(\"[path]\");\r\n    console.log(path);\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const drawer = (\r\n      <div style={{ height: \"100%\", overflow: \"hidden\" }}>\r\n        <div\r\n          className={classes.toolbar}\r\n          style={{\r\n            borderBottom: \"1px solid rgba(76, 87, 102, .1)\",\r\n            minHeight: 65,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div className=\"logo\">\r\n            <Link to=\"/profile\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                alt=\"\"\r\n                style={{ height: \"30px\" }}\r\n              ></img>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <MenuList className=\"menuLeftDrawer\" style={{ height: \"100%\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            // justify=\"center\"\r\n            // alignItems=\"center\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Link to={`${url}/overview`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/overview` || pathname === `${url}` || pathname === `${url}/`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <AppsIcon style={{ fontSize: 18 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Trang chủ</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/practice`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/practice`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <KeyboardIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Luyện tập</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/course`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/course`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <ImportContactsIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Học tập</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/fight`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/fight`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <GroupIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Chiến đấu</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/print`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/print`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <CardMembershipIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>\r\n                  Nhật ký luyện tập\r\n                </p>\r\n              </MenuItem>\r\n            </Link>\r\n            {this.props.user.role === \"mod\" ||\r\n              this.props.user.role === \"admin\" ? (\r\n                <Link to={`/admin`}>\r\n                  <MenuItem\r\n                    selected={pathname === `${url}/admin`}\r\n                    onClick={this.onClickMenuItem(1)}\r\n                  >\r\n                    <BallotIcon style={{ fontSize: 16 }} />\r\n                    <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Quản lý</p>\r\n                  </MenuItem>\r\n                </Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n            {/* <Link to={`${url}/account`}>\r\n            <MenuItem\r\n              selected={pathname === `${url}/account`}\r\n              onClick={this.onClickMenuItem(1)}\r\n            >\r\n              <AccountBoxIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n            </MenuItem>\r\n          </Link> */}\r\n\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-end\",\r\n                marginBottom: \"65px\"\r\n              }}\r\n            >\r\n              <Link to={`${url}/account`}>\r\n                <MenuItem\r\n                  selected={pathname === `${url}/account`}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  <PowerSettingsNewIcon style={{ fontSize: 16 }} />\r\n                  <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Đăng xuất</p>\r\n                </MenuItem>\r\n              </Link>{\" \"}\r\n            </Grid>\r\n          </Grid>\r\n        </MenuList>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <AppBarContent />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav\r\n          className={` ${classes.drawerMain} drawerMain `}\r\n          aria-label=\"nav main\"\r\n        >\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <nav className={classes.navRight} aria-label=\"nav right\">\r\n          <NavRight />\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/overview`}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/practice`}>\r\n              <PracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/course`}>\r\n              <CourseBody url={url} />\r\n            </Route>\r\n            <Route path={`${path}/contest`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/courses/:courseId/tasks`}>\r\n              <TaskBody location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/print`}>\r\n              <PrintBody userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/contest-detail/:id`}>\r\n              <RoomDetail location={this.props.location} userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/fight`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            {/* <Route path={`${path}/admin`}>\r\n\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/overview`}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/practice`}>\r\n              <PracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/course`}>\r\n              <CourseBody url={url} />\r\n            </Route>\r\n            <Route path={`${path}/fight`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/courses/:courseId/tasks`}>\r\n              <TaskBody location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/print`}>\r\n              <PrintBody userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/fight-detail/:id`}>\r\n              <RoomDetail userData={this.props.user} />\r\n            </Route>\r\n            {/* <Route path={`${path}/admin`}>\r\n              <ReactAdmin />\r\n            </Route> */}\r\n            <Route path={`${path}/create-contest`}>\r\n              <CreateRoomPage />\r\n            </Route>\r\n            <Route path={`${path}/update-contest/:id`}>\r\n              <UpdateFightPage location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/account`}>\r\n              <Account />\r\n            </Route>\r\n            <Route exact path={`${path}/minitasks/createminitask`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <CreateMiniTask location={this.props.location} />\r\n              </Paper>\r\n            </Route>\r\n            <Route exact path={`${path}/fight-leader-board/:id`}>\r\n              <MainLeaderBoard location={this.props.location} />\r\n            </Route>\r\n            {/* <Route exact path={`${path}/minitasks/:minitasksId/edit`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <MinitaskEdit location={this.props.location} />\r\n              </Paper>\r\n            </Route> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { logoutUser })(ProfilePage)\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, registerUser, setCurrentUser } from \"../../js/actions/authActions\";\r\n\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport '../../App.css';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport axios from \"axios\";\r\n\r\n// import setAuthToken from \"../../js/utils/setAuthToken\";\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\n// import {\r\n//   FacebookShareCount,\r\n//   FacebookIcon,\r\n//   FacebookShareButton\r\n// } from \"react-share\";\r\n\r\nimport \"./LoginPage.css\";\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"5px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      remember: true,\r\n      isLoading: false,\r\n      errors: {},\r\n      // userDataRegister: {\r\n      //   email: \"\",\r\n      //   password: \"\",\r\n      //   firstName: \"\",\r\n      //   lastName: \"\",\r\n      //   avatar: \"\"\r\n      // }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleChange = name => event => {\r\n    this.setState({ ...this.state, [name]: event.target.checked });\r\n  };\r\n\r\n  onSubmitTest = e => {\r\n    this.setState({\r\n      email: \"thiennd@gmail.com\",\r\n      password: \"Thien123\"\r\n    });\r\n  };\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      remember: this.state.remember\r\n    };\r\n\r\n    var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n    loginF.then(val => {\r\n      this.setState({ isLoading: false });\r\n    });\r\n\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response);\r\n\r\n    const userData = {\r\n      email: response.email,\r\n      password: response.email + response.id,\r\n      firstName: response.name,\r\n      lastName: \"\",\r\n      avt: response.picture.data.url,\r\n      socialAccount: \"facebook\",\r\n      remember: true\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/isNewAccount\", userData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data === \"new\") {\r\n          axios\r\n            .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n            .then(res => {\r\n\r\n              console.log(userData);\r\n\r\n              var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n              loginF.then(val => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n            })\r\n        }\r\n        else {\r\n\r\n          var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n          loginF.then(val => {\r\n            this.setState({ isLoading: false });\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  responseGoogle = (response) => {\r\n    // console.log(response.Qt.jL);\r\n    console.log(response.profileObj.email);\r\n    console.log(response.accessToken);\r\n\r\n    const userData = {\r\n      email: response.profileObj.email,\r\n      avt: response.profileObj.imageUrl,\r\n      password: response.profileObj.email +\r\n        response.profileObj.googleId,\r\n      firstName: response.profileObj.givenName,\r\n      lastName: response.profileObj.familyName,\r\n      socialAccount: \"google\",\r\n      remember: true\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/isNewAccount\", userData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data === \"new\") {\r\n          axios\r\n            .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n            .then(res => {\r\n              console.log(res);\r\n\r\n              var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n              loginF.then(val => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n        }\r\n        else {\r\n          var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n          loginF.then(val => {\r\n            this.setState({ isLoading: false });\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log(userData);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n    // const primary = red[500]; // #F44336\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n            <div className=\"logo\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"80px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n            />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      value=\"remember\"\r\n                      color=\"primary\"\r\n                      onChange={this.handleChange(\"remember\")}\r\n                      checked={this.state.remember}\r\n                    />\r\n                  }\r\n                  label=\"Lưu tài khoản\"\r\n                />\r\n              </Grid>\r\n              {/* <Button variant=\"contained\" onClick={this.onSubmitTest}>\r\n                Tài khoản admin test\r\n              </Button> */}\r\n              {/* <Button variant=\"contained\" onClick={this.onSubmitTest}>\r\n                Tài khoản mod test\r\n              </Button> */}\r\n            </Grid>\r\n\r\n            {/* <Button fullWidth variant=\"contained\" onClick={this.onSubmitTest}>\r\n              Tài khoản admin test\r\n            </Button> */}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {this.state.isLoading ? (\r\n                <CircularProgress\r\n                  size={22}\r\n                  color=\"#fff\"\r\n                  style={{ margin: 2 }}\r\n                />\r\n              ) : (\r\n                  \"Đăng nhập\"\r\n                )}\r\n            </Button>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6} sm={3} ></Grid>\r\n              <Grid item xs={6} sm={3} ></Grid>\r\n              <Grid item xs={6} sm={3} >\r\n                <FacebookLogin\r\n                  isDisabled={false}\r\n                  appId=\"652851902151426\" //APP ID NOT CREATED YET\r\n                  fields=\"name,email,picture\"\r\n                  textButton=\"\"\r\n                  scope=\"public_profile, email, user_birthday\"\r\n                  returnScopes={true}\r\n                  size=\"small\"\r\n                  icon={<i className=\"fab fa-facebook-f icon ml-3 mt-1\"></i>}\r\n                  version=\"2.3\"\r\n                  cssClass=\"btnFacebook\"\r\n                  // icon=\"fa-facebook\"\r\n                  callback={this.responseFacebook}\r\n                // autoLoad={true}\r\n                />\r\n                {/* <FacebookLogin\r\n                  appId=\"652851902151426\" //APP ID NOT CREATED YET\r\n                  fields=\"name,email,picture\"\r\n                  textButton=\"Facebook\"\r\n                  size=\"small\"\r\n                  icon={<i className=\"fab fa-facebook-f icon ml-3 mt-1\"></i>}\r\n                  version=\"2.3\"\r\n                  cssClass=\"btnFacebook\"\r\n                  callback={this.responseFacebook}\r\n                // autoLoad={true}\r\n                /> */}\r\n                {/* <div class=\"fb-login-button\" style={{ 'float': 'left' }} data-width=\"\" data-size=\"large\" data-button-type=\"continue_with\" data-auto-logout-link=\"false\" data-use-continue-as=\"false\"></div> */}\r\n              </Grid>\r\n              <Grid item xs={6} sm={3}>\r\n                {/* <div class=\"ui-content align-icon-right\">\r\n              <span class=\"ui-text\">\r\n                <img class=\"social-btn-icon\" alt=\"Login with Facebook\" src=\"https://hrcdn.net/fcore/assets/facebook-colored-af4249157d.svg\" />\r\n              </span>\r\n            </div> */}\r\n                <GoogleLogin\r\n                  clientId=\"191659603798-o1h3pffa90vi6dkmufi1btf3t05vk8r7.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                  // scope=\"profile,email\"\r\n                  className=\"btnGoogle\"\r\n                  // buttonText=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Google\"\r\n                  buttonText=\"\"\r\n                  icon={false}\r\n                  onSuccess={this.responseGoogle}\r\n                  onFailure={this.responseGoogle}\r\n                // autoLoad={true}\r\n                />\r\n                {/* <div class=\"fb-login-button\" style={{ 'float': 'left' }} data-width=\"\" data-size=\"large\" data-button-type=\"continue_with\" data-auto-logout-link=\"false\" data-use-continue-as=\"false\"></div> */}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  {/* Quên tài khoản */}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body1\">\r\n                  {\"Nếu bạn chưa có tài khoản, Hãy đăng ký ngay\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\"></Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">\r\n                  <a\r\n                    href=\"https://docs.google.com/forms/d/e/1FAIpQLScGsL9g_Hot55sUbVHb0O7uBsWtkBrDE65fmETvflcxvuCdvw/viewform?usp=sf_link\"\r\n                    // variant=\"subtitle1\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    // ref={element => {\r\n                    //   if (element)\r\n                    //     element.style.setProperty(\r\n                    //       \"color\",\r\n                    //       \"#ff5722\",\r\n                    //       \"important\"\r\n                    //     );\r\n                    // }}\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                      color: \"#ff5722!important\"\r\n                    }}\r\n                  >\r\n                    Đăng ký trở thành giáo viên\r\n                  </a>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(mapStateToProps, { loginUser, registerUser, setCurrentUser })(LoginPage)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? ( // xet cho chô nay quyen voi username == giang moi dc cho vao router nay\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return ({\r\n    auth: state.rootReducer.auth,\r\n  })\r\n};\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass User extends Component {\r\n    render() {\r\n        let { user, rank } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Divider light />\r\n                <Box p={1}>\r\n                    <Box display=\"flex\" >\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {rank}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar alt=\"Cindy Baker\" src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                        <Box p={1} style={{ width: '34%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {user.firstname + \" \" + user.lastname}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {user.codepoint}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                <Divider light />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport User from './User';\r\nimport TopUser from './TopUser';\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nclass leaderboardPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            generalLeaderBoard: [],\r\n            isLoadingData: true,\r\n            topUser: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8081/api/v1/getGeneralLeaderBoard\").then(res => {\r\n            const generalLeaderBoard = res.data;\r\n            const topUser = this.state.topUser;\r\n            for (var i = 0; i < 3; i++) {\r\n                topUser.push(generalLeaderBoard[i]);\r\n            }\r\n            this.setState({ generalLeaderBoard, topUser, isLoadingData: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let leaderBoard = this.state.generalLeaderBoard.map((user, rank) => (<User rank={rank + 1} user={user} />));\r\n        let { isLoadingData, topUser } = this.state;\r\n        return (\r\n            <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                {isLoadingData ?\r\n                    <div style={{ display: 'flex', alignItems: \"center\", justifyContent: 'center', width: '100%', height: \"100%\" }}>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <Box>\r\n                                <HashLoader\r\n                                    sizeUnit={\"px\"}\r\n                                    size={50}\r\n                                    color={\"#AEA8A8\"}\r\n                                    loading={isLoadingData}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </div>\r\n                    :\r\n                    <Grid\r\n                        className=\"containerMain\"\r\n                        style={{\r\n                            height: \"inherit\",\r\n                            width: \"100%\",\r\n                            backgroundPosition: \"center\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"cover\"\r\n                        }}\r\n                    >\r\n                        <Grid\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                width: \"100%\",\r\n                                paddingTop: 0,\r\n                                height: \"inherit\",\r\n                                backgroundColor: \"whitesmoke\"\r\n                            }}\r\n                        >\r\n                            <Grid container className=\"header-homepage\" style={{ backgroundColor: \"white\" }}>\r\n                                <Grid\r\n                                    className=\"HeaderLeftHome\"\r\n                                    item\r\n                                    xs={12}\r\n                                    md={4}\r\n                                    sm={4}\r\n                                    style={{ marginBottom: 0 }}\r\n                                >\r\n                                    <Box p={2}>\r\n                                        <Link to=\"/profile\">\r\n                                            <img\r\n                                                src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                                                alt=\"\"\r\n                                                style={{ height: \"80px\" }}\r\n                                            ></img>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid\r\n                                    className=\"HeaderRightHome\"\r\n                                    item\r\n                                    xs={12}\r\n                                    md={8}\r\n                                    sm={8}\r\n                                    container\r\n                                >\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/searchcert\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#2b2b2b\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    paddingLeft: \"20px\",\r\n                                                    paddingRight: \"20px\",\r\n\r\n                                                    // width: \"155px\",\r\n                                                }}\r\n                                                startIcon={<SearchIcon />}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Tra Chứng Chỉ\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/leaderboard\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#6589F9\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    paddingLeft: \"20px\",\r\n                                                    paddingRight: \"20px\",\r\n\r\n                                                    // width: \"155px\",\r\n                                                }}\r\n                                                startIcon={<ShowChartIcon />}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Xếp hạng\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <a\r\n                                            href=\"/login\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#2196f3\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    fontSize: \"16px\",\r\n                                                    boxShadow: \"none\",\r\n                                                    width: \"125px\"\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Đăng nhập\r\n                                    </Button>\r\n                                        </a>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/signup\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#7bccd5\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    width: \"125px\"\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Đăng ký\r\n                                    </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box display=\"flex\" mt={2} justifyContent=\"flex-start\" >\r\n                                <Container fixed>\r\n                                    <Typography gutterBottom variant=\"h4\">\r\n                                        Bảng xếp hạng\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                </Container>\r\n                            </Box>\r\n                            <Box p={3}>\r\n                                <Container fixed>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container justify=\"center\" spacing={1}>\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[1]} rank={2 + \"nd\"} />\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[0]} rank={1 + \"st\"} />\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[2]} rank={3 + \"rd\"} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Container>\r\n                            </Box>\r\n                            <Container fixed>\r\n                                <Box bgcolor=\"white\" boxShadow={2} p={1} mb={3}>\r\n                                    <Box display=\"flex\" fontStyle=\"italic\">\r\n                                        <Box p={1} style={{ width: '33%' }} >\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                #\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '35%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Tên\r\n                                        </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '30%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Điểm\r\n                                        </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider light />\r\n                                    {leaderBoard}\r\n                                </Box>\r\n                            </Container>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default leaderboardPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport CoursePage from \"./components/coursePage/CoursePage\";\r\nimport TaskPage from \"./components/taskPage/TaskPage\";\r\nimport MiniTaskPage from \"./components/minitaskPage/MinitaskPageResponsive\";\r\nimport HomePage from \"./components/homePage/HomePage\";\r\nimport SignUpPage from \"./components/signUpPage1/SignUpPage\";\r\nimport SearchCertPage from \"./components/searchCertPage/SearchCertPage\";\r\nimport ReactMde from \"./components/minitaskPage/ReactMde\";\r\nimport CreateMiniTask from \"./components/createMinitaskPage/CreateMiniTaskPage\";\r\nimport ReactAdmin from \"./components/adminPage/hocode/ReactAdmin\";\r\nimport ProfilePage from \"./components/profilePage/ProfilePage\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/store.js\";\r\nimport LoginPage from \"./components/loginPage1/LoginPage\";\r\nimport { setCurrentUser, logoutUser } from \"./js/actions/authActions\";\r\nimport setAuthToken from \"./js/utils/setAuthToken\";\r\nimport PrivateRoute from \"./private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport LeaderBoard from \"./components/leaderboard/LeaderboardPage\";\r\nimport PracticePage from \"./components/practicePage/PracticePage\";\r\n// import RoomPracticePage from \"./components/roomPractice/RoomPracticePage\";\r\n\r\n// Check for token to keep user logged in/ xet khi load lai trang\r\nif (localStorage.AuthToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.AuthToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  //console.log(decoded);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Provider\r\n        // store={store}\r\n        store={store}\r\n      >\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={HomePage} />\r\n              <Route path=\"/home\" exact component={HomePage} />\r\n              <Route path=\"/leaderboard\" exact component={LeaderBoard} />\r\n              <Route path=\"/login\" exact component={LoginPage} />\r\n              <Route path=\"/signup\" exact component={SignUpPage} />\r\n              <Route path=\"/reactmde\" exact component={ReactMde} />\r\n              <Route path=\"/searchcert\" component={SearchCertPage} />\r\n\r\n              <PrivateRoute path=\"/courses\" exact component={CoursePage} />\r\n              <PrivateRoute path=\"/practice\" exact component={PracticePage} />\r\n              {/* <PrivateRoute path=\"/practice-with-friend\" component={RoomPracticePage} /> */}\r\n              <PrivateRoute\r\n                path=\"/courses/:courseId/tasks\"\r\n                component={TaskPage}\r\n              />\r\n              <PrivateRoute\r\n                path=\"/tasks/:minitaskId/:courseId/:taskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              <PrivateRoute\r\n                path=\"/minitask/:minitaskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              {/* Private route for fight page */}\r\n              <PrivateRoute\r\n                path=\"/fight/:fightId/minitask/:minitaskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              <Route path=\"/createminitask\" exact component={CreateMiniTask} />\r\n              <PrivateRoute path=\"/admin\" component={ReactAdmin} />\r\n              <PrivateRoute path=\"/profile\" component={ProfilePage} />\r\n              <Route render={() => <div>404 Page Not Found</div>} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    // dev code\r\n    console.log(process.env.NODE_ENV);\r\n} else {    \r\n    // production code\r\n    console.log(process.env.NODE_ENV)\r\n    Sentry.init({dsn: \"https://cd5ce2da28be4dcfaea42bfa2f637fba@sentry.io/1827293\"});\r\n}\r\n\r\nReactDOM.render(<SnackbarProvider><App /></SnackbarProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/giphy.eb842a55.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";"],"sourceRoot":""}