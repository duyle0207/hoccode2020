{"version":3,"sources":["components/minitaskPage/play-button.svg","components/profilePage/content/icons/hoanthanh.svg","components/profilePage/content/icons/user.svg","components/profilePage/content/icons/chuahoanthanh.svg","components/profilePage/content/icons/padlock-unlock.svg","components/coursePage/body/CourseItem.js","components/coursePage/body/CourseBody1.js","js/utils/setAuthToken.js","js/actions/authActions.js","js/actions/types.js","js/actions/userAction.js","components/coursePage/header/CourseHeader.js","components/coursePage/CoursePage.js","components/taskPage/body/TaskItem.js","components/taskPage/body/TaskBody.js","components/taskPage/header/TaskHeader.js","components/taskPage/TaskPage.js","components/minitaskPage/body/MiniTaskDesc.js","components/minitaskPage/header/UserMenu.js","components/minitaskPage/header/MiniTaskHeader.js","components/minitaskPage/body/ResultPanel.js","components/minitaskPage/body/TestsPanel.js","components/roomPractice/Notfoundpage.jsx","websocket/index.jsx","components/minitaskPage/MiniTaskPage.js","components/minitaskPage/body/CodeEditor.js","components/minitaskPage/MiniTaskPageNoSplit.js","components/minitaskPage/MinitaskPageResponsive.js","components/homePage/HomePage.js","common/regex.js","components/signUpPage1/SignUpPage.js","components/searchCertPage/SearchCertPage.js","components/minitaskPage/ReactMde.js","components/createMinitaskPage/body/CodeEditor.js","components/createMinitaskPage/body/CreateMiniTaskBody.js","components/createMinitaskPage/CreateMiniTaskPage.js","components/adminPage/hocode/auth/authProvider.js","components/adminPage/hocode/catchAll.js","components/adminPage/hocode/customRoutes.js","components/adminPage/hocode/dataProvider.js","components/adminPage/hocode/Menu.js","components/adminPage/hocode/utils.js","components/adminPage/hocode/MyLayout.js","components/adminPage/hocode/theme.js","components/adminPage/hocode/customActions/ModelBookEditToolbar.js","components/adminPage/hocode/filters/ModelBookFilter.js","components/adminPage/hocode/resources/ModelBook.js","components/adminPage/hocode/customActions/ModelCourseEditToolbar.js","components/adminPage/hocode/filters/ModelCourseFilter.js","components/adminPage/hocode/resources/ModelCourse.js","components/adminPage/hocode/customActions/ModelEventEditToolbar.js","components/adminPage/hocode/filters/ModelEventFilter.js","components/adminPage/hocode/resources/ModelEvent.js","components/profilePage/content/minitask/ReactMde.js","components/profilePage/content/minitask/CodeEditor.js","components/profilePage/content/minitask/ShowUnitTest.js","components/profilePage/content/minitask/CreateMiniTaskBody.js","components/profilePage/content/minitask/MinitaskEdit.js","components/adminPage/hocode/filters/ModelMinitaskFilter.js","components/adminPage/hocode/resources/ModelMinitask.js","components/adminPage/hocode/customActions/ModelTaskEditToolbar.js","components/adminPage/hocode/filters/ModelTaskFilter.js","components/adminPage/hocode/resources/ModelTask.js","components/adminPage/hocode/customActions/ModelCertEditToolbar.js","components/adminPage/hocode/filters/ModelCertFilter.js","components/adminPage/hocode/fields/ReviewField.js","components/adminPage/hocode/resources/ModelCert.js","components/adminPage/hocode/customActions/ModelUserEditToolbar.js","components/adminPage/hocode/filters/ModelUserFilter.js","components/adminPage/hocode/resources/ModelUser.js","components/adminPage/hocode/customActions/ModelFightEditToolbar.js","components/adminPage/hocode/filters/ModelFightFilter.js","components/adminPage/hocode/resources/ModelFight.js","js/reducers/authReducer.js","js/reducers/errorReducer.js","js/reducers/userReducer.js","js/reducers/index.js","js/store/store.js","components/adminPage/hocode/ReactAdmin.js","components/profilePage/content/account/Account.js","components/profilePage/content/course/CourseItem.js","components/profilePage/content/course/CourseBody1.js","components/profilePage/content/overview/CardUser.jsx","components/profilePage/content/overview/UserInfo.jsx","components/profilePage/content/overview/Minitask.jsx","components/profilePage/content/overview/Fight.jsx","components/profilePage/content/overview/Overview.js","components/profilePage/content/print/Certificate.js","components/profilePage/content/print/Course.jsx","components/profilePage/content/print/Minitask.jsx","components/profilePage/content/print/Practice.jsx","components/profilePage/content/print/PrintBody.js","components/profilePage/content/task/TaskItem.js","components/profilePage/content/courseLeaderBoard/UserRank.jsx","components/profilePage/content/courseLeaderBoard/CourseLeaderBoard.jsx","components/profilePage/content/task/TaskBody.js","components/profilePage/header/UserMenu.js","components/profilePage/header/AppBarContent.js","components/profilePage/navRight/NavRight.js","components/practicePage/Minitask.jsx","components/practicePage/HeaderPracticePage.jsx","components/practicePage/PracticePage.jsx","components/roomPractice/Room.jsx","components/roomPractice/RoomPracticePage.jsx","components/roomPractice/CreateRoomPage.jsx","components/roomPractice/UpdateFightPage.jsx","components/roomPractice/Minitask.jsx","components/roomPractice/UserRank.jsx","components/roomPractice/RoomDetail.jsx","components/roomPractice/MinitaskBoard.jsx","components/roomPractice/MinitaskBoardInfo.jsx","components/leaderboard/TopUser.jsx","components/roomPractice/MainLeaderBoard.jsx","components/profilePage/ProfilePage.js","components/loginPage1/LoginPage.js","private-route/PrivateRoute.js","components/leaderboard/User.jsx","components/leaderboard/LeaderboardPage.jsx","App.js","serviceWorker.js","index.js","components/minitaskPage/giphy.gif","components/coursePage/header/logo.png","components/taskPage/icons/hoanthanh.svg","components/taskPage/icons/user.svg","components/taskPage/icons/chuahoanthanh.svg","components/taskPage/icons/padlock-unlock.svg","components/taskPage/header/logo.png"],"names":["module","exports","CourseItem","this","props","classes","course","console","log","Grid","container","direction","style","height","display","justifyContent","alignItems","className","courseItem","item","width","overflow","src","background_image","objectFit","borderRadius","marginTop","alt","justify","padding","margin","textAlign","textTransform","color","fontWeight","fontFamily","course_name","task_solved","tasks_complete","task_count","Component","withStyles","boxShadow","background","cursor","CourseBody","state","courses","axios","get","then","res","data","setState","CourseContainer","xs","sm","map","key","id","textDecoration","to","paddingTop","minHeight","setAuthToken","token","defaults","headers","common","registerUser","userData","history","dispatch","post","push","catch","err","type","payload","response","setCurrentUser","user","logoutUser","localStorage","removeItem","submitUpdateMinitask","minitask_id","task_id","course_id","courseStatus","course_status","getUser","setUndefinedNextMinitask","undefined","CourseHeader","onLogout","e","preventDefault","bind","htmlFor","href","require","codepoint","firstname","onClick","connect","auth","rootReducer","errors","CoursePage","Fragment","TaskItem","minitask","status","flexGrow","mini_task_name","vitri","backgroundColor","point_unlock","task","md","marginBottom","zIndex","textOverflow","whiteSpace","task_name","minitasks","MiniTaskItem","renderMiniItem","TaskBody","tasks","courseId","TasksContainer","TaskHeader","TaskPage","params","match","MiniTaskDesc","DescContainer","Slide","in","timeout","Box","my","Typography","variant","minitaskName","marginRight","level","code_point","escapeHtml","source","mini_task_desc","renderers","linkReference","reference","$ref","children","heading","inlineCode","position","StyledMenu","paper","border","paddingLeft","paddingRight","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","palette","white","MenuItem","React","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","keepMounted","open","Boolean","onClose","fontSize","marginLeft","MiniTaskHeader","onBack","goBack","UserMenu","TabPanel","value","index","other","component","role","hidden","aria-labelledby","a11yProps","LinkTab","Tab","minWidth","useStyles","makeStyles","ResultPanel","setValue","unit_tests","result","flexDirection","Tabs","onChange","newValue","aria-label","label","overflowY","overflowX","unit_test","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","inputs","input","expected_output","stdout","errorRuntime","error","info","varian","substring","length","WASSUCCESSFUL","COMPLETEDIN","RUNCOUNT","GETFAILURECOUNT","GETALLFAILURE","testfail","DETAIL","renderResultPanel","TestsPanel","isLoading","sizeUnit","size","loading","renderTestsPanel","Notfoundpage","spacing","p","CardMedia","title","socket","WebSocket","connectWebSocket","cb","onopen","onmessage","msg","onclose","onerror","sendMsg","send","MiniTaskPage","JSON","stringify","fight_id","user_id","point","request","handleClickSnack","handleCloseSnack","handleChangeTheme","target","handleChangeAutoComplete","isAutocomplete","renderCodingTime","isUserCompleteFight","hourComplete","minuteComplete","secondComplete","hour","minute","second","userCode","isLoadingComponent","isUserStudy","isUserFight","numbers_doing","completedMinitask","user_minitask_practice","isLoadingCode","minitaskListId","minitaskUser","userFight","fightminitaskdone","startTime","contestStatus","isUserJoinFight","executeCode","submitCode","submitCodePractice","submitCodeFight","updateUserCode","resetCode","createFileTest","pathname","location","startsWith","fightId","miliSecComplete","Date","end_time","start_time","Math","floor","miliSec","seconds","minutes","hours","dt","IdMinitask","i","code","fight","time_start","time_end","isUserJoin","IdMinitaskDone","minitaskId","document","numbers","user_code","template_code","completed","setInterval","prevProps","formatCode","js_beautify","max_preserve_newlines","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","dismiss","DismissReason","cancel","junit4","output_type_func","includes","forEach","inputsFormat","name_func","test","stderr","taskId","backdrop","toast","containerId","listID","indexOf","newNumbers","put","today","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","newFightUser","newStatus","tried","btnSubmit","Button","startIcon","disabled","Snackbar","ContentProps","autoHideDuration","message","Divider","ButtonGroup","object","obj","Link","float","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","bgcolor","ml","InputLabel","Select","labelId","Checkbox","checked","inputProps","flexShrink","mt","mode","showPrintMargin","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","alignContent","renderPassedTestCount","next_minitask","enableMultiContainer","POSITION","TOP_RIGHT","CodeEditor","options","lineNumbers","highlightSelectionMatches","indentUnit","lineWrapping","dragDrop","autoCloseBrackets","spellcheck","autocorrect","extraKeys","MarkText","from","line","ch","css","onBeforeChange","editor","bottom","right","beautifyCode","MinitaskPageResponsive","minDeviceWidth","maxDeviceWidth","MiniTaskPageNoSplit","Copyright","align","isAuthenticated","nextProps","backgroundPosition","backgroundRepeat","backgroundSize","gutterBottom","paragraph","cardGrid","paddingBottom","card","regexEmail","regexPassword","CssTextField","borderBottomColor","borderColor","TextField","SignUpPage","isError","errorFormNew","errorForm","email","password","password2","onSubmit","messageError","trim","String","toLowerCase","firstName","lastName","newUser","socialAccount","val","Container","maxWidth","CssBaseline","borderBottom","form","noValidate","autoComplete","name","required","fullWidth","autoFocus","helperText","submit","body","avatar","SearchCertPage","onSubmitSearch","rows","Axios","searchID","handleChange","Paper","rootSearch","InputBase","placeholder","IconButton","iconButton","Table","table","TableHead","TableRow","TableCell","TableBody","row","scope","search_id","timestamp","toLocaleString","CircularProgress","viewBox","xmlns","fill","fillRule","transform","fillOpacity","cx","cy","rx","ry","d","searchIcon","pointerEvents","inputRoot","inputInput","search","flex","withTheme","ReactMde","handleMarkdownChange","spellChecker","inputList","input_type","input_name","join","readOnly","updateTemplateCode","selectStyles","menu","styles","CreateMiniTaskBody","coursesOption","tasksOption","createRef","courses_ref","tasks_ref","handleSimpleInputChange","onSelectChange","onCoursesSelectChange","onTasksSelectChange","handleSubmit","coursesFilter","filter","coursesoption","newMiniTask","select_value","current","find","inputListLength","arrayInput","index0","index1","CreateMiniTaskBodyContainer","ref","defaultValue","addInput","maxHeight","handleListInputNameChange","handleListInputTypeChange","addTest","handleInputTestChange","handleOutputTestChange","AUTH_LOGIN","username","Request","method","Headers","fetch","Error","statusText","json","decodedToken","decodeJwt","setItem","AUTH_LOGOUT","Promise","resolve","AUTH_ERROR","reject","AUTH_CHECK","getItem","AUTH_GET_PERMISSIONS","catchAll","Redirect","COMPOSITE_KEY_RESOURSES","PK_MAPPING","FILTER_LENGTHS","GET_MANY_FILTER","convertRESTRequestToHTTP","apiUrl","resource","url","query","pagination","page","perPage","sort","field","order","filterLengths","Object","keys","minLength","min","maxLength","max","slice","filterName","ids","convertHTTPResponseToREST","pk","has","hasOwnProperty","total","parseInt","dataProvider","httpClient","fetchUtils","fetchJson","a","Accept","id_token","set","ICONS","books","events","profile","certs","users","fights","changeIDToName","resources","getResources","onMenuClick","logout","hasList","MenuItemLink","primaryText","string","split","word","charAt","toUpperCase","leftIcon","Responsive","small","medium","MyLayout","Layout","Menu","createMuiTheme","primary","indigo","secondary","main","red","ModelBookEditToolbar","Toolbar","SaveButton","submitOnEnter","redirect","DeleteButton","ModelBookFilter","Filter","ModelBookList","List","filters","bulkActionButtons","Datagrid","sortable","ImageField","EditButton","ModelBookCreate","Create","SimpleForm","TextInput","resettable","multiline","ModelBookEdit","Edit","toolbar","ModelCourseEditToolbar","ModelCourseFilter","ModelCourseList","ChipField","DateField","validateCourseCreate","values","ModelCourseCreate","courseTypes","choicesCourse","rObj","course_type","validate","SelectInput","choices","utils","MomentUtils","format","clearable","ampm","disablePast","ModelCourseCreateForMod","endDateValidation","allValues","startDateValidation","ModelCourseEdit","ModelEventEditToolbar","ModelEventFilter","ModelEventList","ModelEventCreate","ModelEventEdit","jBeautify","js","template_code_format","indent_size","ShowUnitTest","optionsLevel","handleModalVariableOpen","isImportVariableOpen","renderTitle","handleShowError","isShowError","errContent","level_ref","handleRemoveInput","handleRemoveUnitTest","onLevelSelectChange","input_list","window","reload","splice","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","button","mx","level_ref_select","output_type_func_select","mr","MinitaskEdit","courses_option_select","task_option_select","minitasksId","found","element","found2","ModelMinitaskFilter","ModelMinitaskList","NumberField","ModelMinitaskCreate","ModelMinitaskEdit","ModelTaskEditToolbar","ModelTaskFilter","ModelTaskList","ModelTaskCreate","Skeleton","ModelTaskEdit","getMinitaskDesc","minitaskDesc","checkDuplicateMinitask","task_list","j","onChangeSearch","keyword","minitaskBank","tempMinitaskList","checkFilterCondition","sortByLevel","code_point_Range","sliderValue","onChangeSort","filterList","onChangeSlider","saveMinitaskList","task_minitask","isNew","isLoadingImportTask","temp_task_minitask","errorMessage","openErr","minitaskListFromBank","isOpenMessage","importedMinitask","getMinitaskFromBank","removeMinitask","isDuplicateMinitask","tasks_reverse","reverse","delete","Chip","Card","tableLayout","Tooltip","placement","renderLevelMinitaskChip","orientation","FormControl","Slider","valueLabelDisplay","visible","effect","onClickAway","closeModal","closeModalError","ModelCertEditToolbar","ModelCertFilter","ReviewField","record","reviewStatus","setReviewStatus","recordNew","agree","ModelCertList","xName","onChangeImage","fileReader","FileReader","readAsDataURL","files","onload","electronic_signature","dataUpdate","name_site","review_point","accept","Avatar","ModelCertCreate","ModelCertEdit","ModelUserList","ModelUserFilter","ModelUserCreate","NumberInput","ModelUserEdit","ModelUserEditToolbar","ModelFightEditToolbar","ModelFightFilter","ModelFightList","validateFightCreate","fight_name","backgroud_img","numbers_std","ModelFightCreate","DateTimeInput","ModelFightEdit","MinitaskListID","isEmpty","initialState","lastname","isUserLoading","combineReducers","action","createBrowserHistory","basename","store","authProvider","i18nProvider","defaultI18nProvider","locale","reducer","admin","adminReducer","formReducer","router","routerReducer","i18n","i18nReducer","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","createStore","USER_LOGOUT","compose","applyMiddleware","formMiddleware","routerMiddleware","thunk","run","createAdminStore","vietnameseMessages","ReactAdmin","Admin","appLayout","customRoutes","_","permissionslocal","Resource","list","create","edit","Account","getApi","image","changeUserInfo","setTimeout","urlPreview","handleChangeImage","toBase64","ImgToBase64","urlimage","URL","createObjectURL","image1","file","reader","mb","InputLabelProps","visibility","userId","randomColor","listColor","deepOrange","deepPurple","green","pink","random","totalMinitask","days","sec","coursePassInfo","isLoadingCourseInfo","liked","stop","interval","date","calculateCountdown","endDate","diff","parse","timeLeft","years","millisec","clearInterval","newcourse","prevState","numbers_like","chip","timer","addLeadingZeros","toISOString","replace","Rating","rating_value","read-only","precision","wordBreak","course_desc","total_minitask","minitask_solved","LinearProgress","isCodePass","user_code_point","light","boxSizing","handleCountLiked","FacebookShareButton","FacebookIcon","round","smallAvatar","lap_trinh_co_so_id","lap_trinh_nang_cao_id","giai_quyet_van_de_id","courseIsActived","coursesTemp","courseActived","lap_trinh_co_so_list","lap_trinh_nang_cao_list","giai_quyet_van_de_list","handleChangeSelect","courseFilter","renderCourseTypeTitle","onHandleSearch","CourseContainer1","InputProps","startAdornment","InputAdornment","img","CardUser","avt","BorderLinearProgress","lighten","bar","UserInfo","totalCourse","userCourse","minitaskInfo","fightInfo","solved","total_easy","total_hard","total_medium","total_private_joined_fight","total_public_joined_fight","total_private_fight","total_public_fight","Minitask","renderLevel","zeroMinWidth","noWrap","Fight","fight_desc","handleJoinFight","Overview","handleChangeTab","tab","course_info","c","completed_tasks_count","total_tasks_count","isLoadingCoursePassInfo","daily_minitasks","chartInfo","newestCourse","threeRandomMinitask","user_fight_info","twoNewestFights","daily_minitask","newestCourseList","threeRandomMinitaskList","twoNewestFightsList","AppBar","flexWrap","easy","hard","media","Certificate","top","cert","left","toLocaleDateString","config","Course","rating","backgroundImage","CardContent","renderStatus","ListItem","Practice","nums","renderMinitaskInfo","user_minitask","user_minitask_favourite","allTask","todo","attempted","user_practice_info","chartData","minitaskList","user_minitask_favourite_list","centered","valueField","argumentField","innerRadius","PrintBody","user_codepoint","certificate","certificateViewStart","user_course","getCertificate","isLoadingCert","openDialogCertificate","handleDialogCertificateOpen","handleDialogCertificateCheck","handleDialogCertificateClose","renderDialog","DialogContent","dividers","el","CertificateRef","DialogTitle","trigger","content","courseList","renderButtonCertificate","Dialog","verticalAlign","lineHeight","UserRank","rank","isCurrentUser","user_info","user_point","CourseLeaderBoard","courseLeaderBoard","currentUser","leaderBoard","fontStyle","getParams","matchPath","path","handleChangeValue","showFormReasons","borderTopLeftRadius","resize","reason","PointerEvent","handleCancel","coursPassInfo","showForm","currentParams","msg_deny","handleSendEmail","alert","isFound","tasks1","average","str","utf8","unescape","encodeURIComponent","charCodeAt","to_mail","user_create","Message","string2Bin","mail","msg_accept","courseLoop","handleBtnAccepted","showAlert","handleBtnDeny","onClickRating","indicatorColor","reduce","prev","curr","AppBarContent","Fab","mobileHide","searchComponent","inputSearchComponent","iconButtonSearchComponent","breakpoints","down","NavRight","handleClickDialogReadmoreOpen","bookcontent","bookImage","booktitlet","openDialogReadmore","handleDialogReadmoreClose","limitNum","newText","itemCard","listitem","time","indicators","book","CardActionArea","link","limitText","DialogContentText","details","cover","controls","componentDidMount","isUserLikeMinitask","handleUserLikeMinitask","HeaderPracticePage","isLoadingFilterData","tempData","totalPage","isLoadingData","handleChangePage","handleChangeStatus","searchKeyWord","handleChangeLevel","handleChangeKeyword","chartAllTask","srcset","Pagination","count","PracticePage","Room","renderJoinContestButton","is_user_register","enqueueSnackbar","renderContestStatus","getDay","renderUserFightButton","isUserRoom","maxSnack","withSnackbar","RoomPracticePage","publicFightPages","currentPublicFightPage","privateFightPages","currentPrivateFightPage","publicFights","privateFights","fight_user","fight_user_joined","publicFightsList","privateFightsList","fight_user_list","fight_user_joined_list","CreateRoomPage","onChangeFightName","isFightNameError","fight_name_error","onChangeFightDesc","isFightDescError","fight_desc_error","onChangeFightBackgroundImg","isFightBackGroundImgError","fight_backgroundImg_error","onChangeNumStd","isFightNumStdError","fight_numStd_error","handleStartTimeChange","_d","isStartTimeValid","start_time_error_message","isEndTimeValid","end_time_error_message","handleEndTimeChange","fight_minitask_temp","fight_minitask","isMinitaskExist","saveFight","isOpenError","x","DateTimePicker","inputVariant","showTodayButton","UpdateFightPage","isUpdating","renderChinhPhucButton","wrap","RoomDetail","handleSearchUser","isLoadingSearch","headerLeaderBoard","handleOpenSearchUserModal","isOpenSearchFriend","checkUserInInvitedList","invitedUsers","handleInviteUser","users_fight","handleDeleteUserFromInvitedList","deleted_user","renderInviteFriendButton","user_created","inviteFriendByMail","host","renderRegisterButton","renderFighType","fight_type","handleClickStartButton","isLoadingStartBtn","firstIdMinitask","renderStartButton","handleClickViewLeaderBoard","userList","invitedUserList","onDelete","fight_minitask_list","disable","withRouter","MinitaskBoard","MinitaskBoardInfo","TopUser","renderTopUser","leader_board_type","coding_time","widthAvt","heightAvt","medal","MainLeaderBoard","renderRank","renderFightUserMinitask","fight_minitasks","leader_board","fight_user_minitask","TableContainer","ProfilePage","mobileOpen","handleDrawerToggle","drawer","MenuList","selected","onClickMenuItem","dense","appBar","edge","menuButton","drawerMain","Hidden","smUp","implementation","Drawer","anchor","drawerPaper","ModalProps","xsDown","navRight","exact","up","mixins","LoginPage","onSubmitTest","remember","loginUser","responseFacebook","picture","responseGoogle","profileObj","accessToken","imageUrl","googleId","givenName","familyName","FormControlLabel","control","isDisabled","appId","fields","textButton","returnScopes","icon","version","cssClass","callback","clientId","buttonText","onSuccess","onFailure","rel","decoded","jwt_decode","rest","render","User","leaderboardPage","generalLeaderBoard","topUser","fixed","AuthToken","currentTime","now","exp","App","HomePage","LeaderBoard","CreateMiniTask","hostname","process","Sentry","dsn","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.334dfe5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play-button.8b3ac6fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport './hover.css';\r\nconst styles = {\r\n courseItem:{\r\n     borderRadius:'4px',\r\n     boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n     overflow:'hidden',\r\n     background: '#EEEEEE',\r\n     cursor:'pointer',\r\n     \r\n },\r\n};\r\nclass CourseItem extends Component {\r\n  render() {\r\n    const { classes,course } = this.props;\r\n    console.log(course)\r\n    return (\r\n      <Grid\r\n      container\r\n      direction=\"column\"\r\n      style={{height:\"100%\",display:'flex',justifyContent:'center',alignItems:'center'}}\r\n      className={`${classes.courseItem} hvr-bounce-in`}\r\n    >\r\n      <Grid\r\n        item\r\n        style={{  width: \"100%\", overflow: \"hidden\",display:'flex',justifyContent:'center',alignItems:'center' }}\r\n      >\r\n        <img\r\n          src={course.background_image}\r\n          style={{ width: \"50px\",objectFit:\"cover\", height:'50px',borderRadius:'50%',marginTop:\"10px\"}}\r\n          alt=\"\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justify=\"center\"\r\n        style={{ padding: \"10px 0\" }}\r\n      >\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              textTransform: \"uppercase\",\r\n              color: \"#595959\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            {course.course_name}\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              color: \"#909090\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            Task đã làm: {course.task_solved.tasks_complete}/{course.task_solved.task_count}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\"\r\nconst styles = {\r\n  CourseContainer: {\r\n    paddingTop: \"100px\",\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem:{\r\n    borderRadius:'4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow:'hidden',\r\n    background: '#EEEEEE',\r\n    cursor:'pointer',\r\n    \r\n},\r\n};\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n      const courses = res.data;\r\n      this.setState({ courses });\r\n    });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {courses} = this.state\r\n    return (\r\n      <Grid container className={classes.CourseContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={12} style={{ padding: \"0px 60px\" }}>\r\n          <div className = \"gallery\" >\r\n          {courses.map((course)=><Link className = \"item\"key={course.id} style={{textDecoration:'none'}}to={`/courses/${course.id}/tasks`}><CourseItem course={course}/></Link>)}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseBody);\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    console.log(\"SET TOKEN\");\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] =`Bearer ${token}`;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  return axios\r\n    .post(\"http://localhost:8081/api/v1/login\", userData)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n\r\n      const decoded = jwt_decode(token);\r\n      console.log('Decode: ',decoded);\r\n      console.log('token: ',token);\r\n      console.log(userData);\r\n      if (userData.remember) {\r\n        localStorage.setItem(\"AuthToken\", token);\r\n\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"permissions\", decoded.data.role);\r\n        setAuthToken(token); // set token ở header\r\n\r\n        // get user\r\n      }\r\n      console.log(decoded);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"AuthToken\");\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"permissions\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_CODEPOINT = \"ADD_CODEPOINT\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\";\r\nexport const SET_UNDEFINED_NEXT_MINITASK = \"SET_UNDEFINED_NEXT_MINITASK\";\r\n\r\nexport const CHANGE_LOADING = \"CHANGE_LOADING\";\r\nexport const UPDATE_LOCATION = \"UPDATE_LOCATION\";\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const submitUpdateMinitask = (minitask_id, task_id, course_id, courseStatus) => dispatch => {\r\n  console.log({minitask_id: minitask_id,\r\n    task_id: task_id,\r\n    course_id: course_id,\r\n    course_status: courseStatus})\r\n  axios\r\n    .post(`http://localhost:8081/api/v1/auth/updateusercourse/${course_id}`, {\r\n      minitask_id: minitask_id,\r\n      task_id: task_id,\r\n      course_id: course_id\r\n    })\r\n    .then(res => {\r\n      console.log(res.data)\r\n      dispatch({\r\n        type: ADD_CODEPOINT,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const changeUserInfo = (newUser, userId) => dispatch => {\r\n  console.log(newUser);\r\n  dispatch({\r\n    type: CHANGE_LOADING,\r\n    payload: true\r\n  });\r\n  axios\r\n    .post(\"http://localhost:8081/auth/userinfoupdate\", {\r\n      id: userId,\r\n      avatar: newUser.avatar,\r\n      password: newUser.password,\r\n      firstname: newUser.firstName,\r\n      lastname: newUser.lastName,\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: CHANGE_USER_INFO,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUser = () => dispatch => {\r\n  axios\r\n    .get(\"http://localhost:8081/auth/userinfo\")\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setUndefinedNextMinitask = () => dispatch => {\r\n  dispatch({\r\n    type: SET_UNDEFINED_NEXT_MINITASK,\r\n    payload: undefined\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport \"./courseHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass CourseHeader extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.onLogout = this.onLogout.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className=\"course-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"/\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(CourseHeader) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport CourseBody from './body/CourseBody1';\r\nimport CourseHeader from './header/CourseHeader';\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CourseHeader history={this.props.history}/>\r\n                <CourseBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {  Link } from \"react-router-dom\";\r\nimport \"./taskItem.css\";\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    marginBottom:'50px'\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"5px\",\r\n    backgroundColor: \"white\",\r\n    padding: \"5px 10px\",\r\n    paddingTop:'10px',\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\nclass TaskItem extends Component {\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n   \r\n    if (minitask.status === \"hoanthanh\" ) {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/hoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/user.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </a>\r\n      );\r\n    }\r\n    else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===false) {\r\n      return (\r\n        <Link\r\n        to={`/tasks/${minitask.id}`}\r\n        style={{\r\n          display: \"flex\",\r\n          textDecoration: \"none\",\r\n          color: \"#595959\",\r\n          fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n        }}\r\n      >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%',backgroundColor:'#F5F5F5',borderRadius:'50%'}} src={require('../icons/chuahoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          </Link>\r\n      );\r\n    }\r\n    else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n         \r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display:'flex'}}>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/padlock-unlock.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          <div className=\"hidden\" style={{display:'none'}}>{minitask.point_unlock}</div> \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes,task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`,\r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width:'200px',\r\n                fontFamily:`'Yanone Kaffeesatz', sans-serif`,\r\n                boxShadow:\"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              {task.task_name}{/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          > {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{ height: \"100%\", width: \"100%\",borderRadius: \"4px 4px 0 0\" }}\r\n              alt=\"\"\r\n            />\r\n          </Grid> \r\n          <Grid item container direction=\"column\" style={{ padding: \"10px 0\",background:'#EEEEEE',   boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\" }}> {/* danh sách mini task */}\r\n          {task.minitasks.map((minitask)=><Grid item className={`${classes.MiniTaskItem}`} key={minitask.id} > {this.renderMiniItem(minitask)}</Grid>)}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport axios from \"axios\";\r\nconst styles = {\r\n  TasksContainer: {\r\n    paddingTop: 100,\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  }\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/courses/${this.props.courseId}/tasks`)\r\n      .then(res => {\r\n        const tasks = res.data;\r\n        this.setState({ tasks });\r\n      });\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks } = this.state;\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={6} style={{ padding: \"0px 10px\" }}>\r\n          {tasks.map(task => (\r\n            <TaskItem key={task.id} task={task} courseId={this.props.courseId}/>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskBody);\r\n","import React, { Component } from \"react\";\r\nimport \"./taskHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass TaskHeader extends Component {\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"task-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"giang\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(TaskHeader) ;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TaskBody from './body/TaskBody';\r\nimport TaskHeader from './header/TaskHeader';\r\nclass TaskPage extends Component {\r\n   \r\n    render() {\r\n        const { match: { params } } = this.props;\r\n        //console.log(params);\r\n        return (\r\n            <React.Fragment>\r\n                <TaskHeader history={this.props.history} />\r\n                <TaskBody courseId={params.courseId}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskPage;","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"./minitaskdesc.css\";\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  DescContainer: {\r\n    background: \"#ffffff\",\r\n    position: \"relative\",\r\n    //overflowY: \"scroll\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    //overflowX: \"hidden\",\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    padding: \"10px 10px\"\r\n  }\r\n};\r\nclass MiniTaskDesc extends Component {\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.DescContainer}>\r\n        <Slide in={true} direction=\"right\" {...(true ? { timeout: 800 } : {})}>\r\n          <Box my={1}>\r\n            <Typography variant=\"h6\">{this.props.minitaskName}</Typography>\r\n          </Box>\r\n        </Slide>\r\n        <div style={{ fontFamily: ` \"Share Tech Mono\", monospace `, display: 'flex', color: '#44BFA3' }}>\r\n          <div style={{ flexGrow: 1, marginRight: 10 }}>Độ khó: {this.props.level}</div>\r\n          <div style={{ marginRight: '10px' }}>{this.props.code_point}</div>\r\n        </div>\r\n        <div className=\"md_desc\" style={{ padding: \"16px\" }}> {/* minitask description */}\r\n          <ReactMarkdown\r\n            escapeHtml={false}\r\n            source={this.props.mini_task_desc}\r\n            renderers={{\r\n              linkReference: reference => {\r\n                if (!reference.href) {\r\n\r\n                  return `[${reference.children[0].props.children}]`;\r\n                }\r\n                return <a href={reference.$ref}>{reference.children}</a>;\r\n              },\r\n              heading: props => {\r\n                return <p className=\"md_heading\">{props.children}</p>;\r\n              },\r\n              inlineCode: props => {\r\n                return <code className=\"md_code\">{props.children}</code>;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MiniTaskDesc);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{paddingLeft:'5px',paddingRight:\"5px\"}}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight:\"unset\",\r\n    \"&:focus\": {\r\n     // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\n\r\n function CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{color:\"#282828\"}}\r\n      />\r\n\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n            <AccountBoxIcon style={{fontSize:16}}/> \r\n            <Link to=\"/profile/account\" style={{textDecoration: \"none\"}}>\r\n            <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n            <ExitToAppIcon style={{fontSize:16}}/> \r\n            <p style={{fontSize:12,marginLeft:\"3px\"}}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(CustomizedMenus) ;","import ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport \"./minitaskHeader.css\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Slide from '@material-ui/core/Slide';\r\n// import Slide from '@material-ui/core/Slide';\r\n\r\nclass MiniTaskHeader extends Component {\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  onBack = e => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.history);\r\n    this.props.getUser();\r\n    console.log(this.props.user);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"minitask-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n        <Typography className=\"minitaskName_mobi\">{this.props.minitaskName}</Typography>{\" \"}\r\n        {/*minitask name */}\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"desktop-hide1\">\r\n            <div className=\"logo1\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"40px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"left-menu\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div\r\n              onClick={this.onBack}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              <KeyboardBackspaceIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Back</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div\r\n              className=\"code-point\"\r\n              style={{ fontSize: 14, margin: \"0px 4px\", color: \"#4978cc\" }}\r\n            >\r\n              Số Đậu: {this.props.user.codepoint}\r\n            </div>\r\n            <div className=\"nav-name\" style={{ fontSize: 14 }}>\r\n              {this.props.user.firstname}\r\n            </div>\r\n\r\n            <div className=\"nav_usermenu \">\r\n              <UserMenu />\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <PersonIcon style={{ fontSize: 16 }} />\r\n                <Link to=\"/profile\" style={{ fontSize: 14, marginLeft: \"3px\", textDecoration: \"none\", fontFamily: ' Nunito Sans, sans-serif' }} >Trang cá nhân</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                onClick={this.onBack}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <ExitToAppIcon style={{ fontSize: 16 }} />\r\n                <p\r\n                  style={{ fontSize: 14, marginLeft: \"3px\" }}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  Đăng xuất\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, getUser })(\r\n  MiniTaskHeader\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n    \r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n      component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function ResultPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(1);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n  const result = props.result;\r\n  console.log(result)\r\n  function renderResultPanel(result) {\r\n    if (result.stdout !== undefined ) {\r\n      if (result.error !== \"\") {\r\n        console.info(\"error\");\r\n        console.info(result.error);\r\n        return (\r\n          <React.Fragment>\r\n            <div\r\n              style={{\r\n                color: \"#ff1a1a\",\r\n                fontFamily: ` 'Share Tech Mono', monospace`,\r\n                fontSize: 14\r\n              }}\r\n            >\r\n              <Typography varian=\"caption\">{result.error.substring(0, result.error.length/2)}</Typography>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        if (result.stdout.WASSUCCESSFUL === \"true\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#19b280\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div> Thời gian test: {result.stdout.COMPLETEDIN}</div>\r\n                <div>Kết quả: Passed</div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        } else if (result.stdout.WASSUCCESSFUL === \"false\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#ff1a1a\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div>\r\n                  Số lượng test đúng:{\" \"}\r\n                  {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                  {result.stdout.RUNCOUNT}\r\n                </div>\r\n                <div>Kết quả: Failed</div>\r\n                {result.stdout.GETALLFAILURE.map((testfail, index) => {\r\n                  return <div key={index}>{testfail.DETAIL}</div>;\r\n                })}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    else if (result.errorRuntime !== undefined) {\r\n      return (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              color: \"#ff1a1a\",\r\n              fontFamily: ` 'Share Tech Mono', monospace`,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n           Code chạy quá lâu, vui lòng thử lại. \r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n     else {\r\n      return <div>chưa thực thi</div>;\r\n    }\r\n  }\r\n  function renderTestsPanel(result) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  /*function renderTestsPanel1(result){ // cái này chưa sửa, tạm thời cứ render ra kết quả ở result panel, test panel cứ hiển thị danh sách test\r\n     if (result.stdout !== undefined) { // if result is not {},  in test panel show description of tests after run code\r\n      return (\r\n        <React.Fragment>\r\n          <div>1/2 sample tests passed.</div>\r\n          {unit_tests.map((unit_test, index) => {\r\n            // unit_tests\r\n            return (\r\n              <ExpansionPanel key={index}>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                    <div style={{ flexGrow: 1 }}>Test {index + 1}</div>\r\n                    <div style={{ width: \"1em\" }}>\r\n                      <img\r\n                        style={{ width: \"100%\" }}\r\n                        src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                        alt=\"Kiwi standing on oval\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                  <div>\r\n                    <Grid container>\r\n                      <Grid item>Input: </Grid>\r\n                      <Grid item style={{ marginLeft: 10 }}>\r\n                        {unit_test.inputs.map((input, index) => (\r\n                          <div key={index}>\r\n                            param{index + 1}: {input.value}\r\n                          </div>\r\n                        ))}{\" \"}\r\n                        {//dùng key ở đây nguy hiểm \r\n                        }\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>Output: </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>\r\n                        Output mong đợi: {unit_test.expected_output}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      );\r\n    } \r\n  } */\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <Tabs\r\n        style={{ minHeight: \"30px\" }}\r\n        // variant=\"fullWidth\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"nav tabs example\"\r\n      >\r\n        <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)}  />\r\n        <LinkTab label=\"Kết quả\" href=\"/trash\" {...a11yProps(1)} />\r\n      </Tabs>\r\n      <div\r\n        className=\"scroll_test\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          overflowY: \"auto\",\r\n          overflowX: \"hidden\",\r\n          background: \"#f5f5f5\"\r\n        }}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          {renderTestsPanel(result)}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          {renderResultPanel(result)}\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n    style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n    component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function TestsPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0); // if have result, direct to result panel tab\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n\r\n  function renderTestsPanel(unit_tests) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          > param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {props.isLoading === true ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <div>\r\n            <div className=\"sweet-loading\">\r\n              <HashLoader\r\n              \r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={props.isLoading}\r\n              />\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Tabs\r\n            style={{ minHeight: \"60px\" }}\r\n            variant=\"fullWidth\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"nav tabs example\"\r\n          >\r\n            <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)} />\r\n          </Tabs>\r\n          <div\r\n            className=\"scroll_test\"\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n              background: \"#f5f5f5\"\r\n            }}\r\n          >\r\n            <TabPanel value={value} index={0}>\r\n              {renderTestsPanel(unit_tests)}\r\n            </TabPanel>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    CardMedia, Box,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nclass Notfoundpage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Box my={5}>\r\n                    <Grid xs={12} sm={12} md={12} container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                        <Grid xs={12} sm={6} md={6} container justify=\"flex-end\" alignItems=\"center\">\r\n                            <Box p={2}>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Contemplative Reptile\"\r\n                                    // height=\"50\"\r\n                                    // width=\"50\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    src={\"https://assets.leetcode.com/static_assets/public/images/404_face.png\"}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6} md={6} container justify=\"flex-start\" alignItems=\"center\">\r\n                            <Box p={2}>\r\n                                <Typography style={{ fontSize: 30, fontWeight: 100 }}>Không thấy nội dung này</Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notfoundpage;","// api/index.js\r\nvar socket = new WebSocket(\"ws://localhost:8081/ws\");\r\n\r\nlet connectWebSocket = cb => {\r\n  console.log(\"connecting\");\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"Successfully Connected\");\r\n  };\r\n\r\n  socket.onmessage = msg => {\r\n    console.log(msg);\r\n    cb(msg);\r\n  };\r\n\r\n  socket.onclose = event => {\r\n    console.log(\"Socket Closed Connection: \", event);\r\n  };\r\n\r\n  socket.onerror = error => {\r\n    console.log(\"Socket Error: \", error);\r\n  };\r\n};\r\n\r\nlet sendMsg = msg => {\r\n  socket.send(msg);\r\n};\r\n\r\nexport { connectWebSocket, sendMsg };","import React, { Component } from \"react\";\r\nimport Split from \"react-split\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\n// import CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport \"./minitask.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport js_beautify from \"js-beautify\";\r\n\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n//Code editor\r\nimport AceEditor from \"react-ace\";\r\n// import brace from 'brace';\r\nimport 'brace/theme/github';\r\nimport 'brace/theme/twilight';\r\nimport 'brace/theme/monokai';\r\n\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/snippets/java\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notfoundpage from '../roomPractice/Notfoundpage';\r\n// import Fade from '@material-ui/core/Fade';\r\n// import { getUser } from \"../../js/actions/userAction\";\r\n\r\nimport { sendMsg } from \"../../websocket\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true,\r\n      open: false,\r\n      isUserStudy: true,\r\n      isUserFight: false,\r\n      // variable for numbers of doing with get code point.\r\n      numbers_doing: 0,\r\n      completedMinitask: [],\r\n      theme: \"textmate\",\r\n      isAutocomplete: false,\r\n      user_minitask_practice: {},\r\n      isLoadingCode: true,\r\n      // stopwatch\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      //\r\n      minitaskListId: [],\r\n      minitaskUser: {},\r\n      userFight: {},\r\n      fightminitaskdone: [],\r\n      startTime: \" \",\r\n      //\r\n      contestStatus: '',\r\n      isUserJoinFight: '',\r\n      //\r\n      isUserCompleteFight: '',\r\n      // time complete\r\n      hourComplete: 0,\r\n      minuteComplete: 0,\r\n      secondComplete: 0,\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.submitCodePractice = this.submitCodePractice.bind(this);\r\n    this.submitCodeFight = this.submitCodeFight.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setUndefinedNextMinitask();\r\n\r\n    var { history } = this.props;\r\n    console.log(this.state.minitask);\r\n    var pathname = history.location.pathname;\r\n    console.log(pathname);\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    if (pathname.startsWith(\"/minitask\")) {\r\n      this.setState({ isUserStudy: false });\r\n    }\r\n\r\n    if (pathname.startsWith(\"/fight/\")) {\r\n      axios.get(`http://localhost:8081/api/v1/curd/is-user-done-fight/${params.fightId}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ isUserCompleteFight: res.data }, () => {\r\n          axios\r\n            .get(`http://localhost:8081/api/v1/curd/getone-userfight/${params.fightId}`)\r\n            .then(res => {\r\n              const { isUserCompleteFight } = this.state;\r\n              console.log(isUserCompleteFight);\r\n              if (isUserCompleteFight) {\r\n                var miliSecComplete = new Date(res.data.end_time) - new Date(res.data.start_time);\r\n\r\n                var secondComplete = Math.floor((miliSecComplete / 1000) % 60),\r\n                  minuteComplete = Math.floor((miliSecComplete / (1000 * 60)) % 60),\r\n                  hourComplete = Math.floor((miliSecComplete / (1000 * 60 * 60)) % 24);\r\n\r\n                console.log(secondComplete);\r\n\r\n                this.setState({\r\n                  secondComplete,\r\n                  minuteComplete,\r\n                  hourComplete,\r\n                });\r\n              } else {\r\n                var miliSec = new Date() - new Date(res.data.start_time);\r\n\r\n                var seconds = Math.floor((miliSec / 1000) % 60),\r\n                  minutes = Math.floor((miliSec / (1000 * 60)) % 60),\r\n                  hours = Math.floor((miliSec / (1000 * 60 * 60)) % 24);\r\n\r\n                this.setState({\r\n                  userFight: res.data,\r\n                  startTime: res.data.start_time,\r\n                  hour: hours,\r\n                  minute: minutes,\r\n                  second: seconds\r\n                })\r\n              }\r\n            });\r\n        });\r\n      });\r\n      this.setState({ isUserFight: true });\r\n      axios\r\n        .get(`http://localhost:8081/api/v1/curd/listminitaskfight/${params.fightId}`)\r\n        .then(res => {\r\n          const dt = res.data;\r\n          const IdMinitask = [];\r\n\r\n          for (var i = 0; i < dt.length; i++) {\r\n\r\n            IdMinitask.push(dt[i])\r\n\r\n          }\r\n          this.setState({ minitaskListId: IdMinitask })\r\n          // console.log(this.state.minitaskListId);\r\n        });\r\n\r\n      axios.get(`http://localhost:8081/api/v1/curd/fights/${params.fightId}`).then(res => {\r\n        var code;\r\n        const fight = res.data;\r\n        if ((new Date() < new Date(fight.time_start))) {\r\n          code = -1;\r\n        }\r\n        if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n          // Đang diển ra\r\n          code = 0;\r\n        }\r\n        if ((new Date() > new Date(fight.time_end))) {\r\n          code = 1;\r\n        }\r\n        this.setState({ contestStatus: code }, () => {\r\n          axios.get(`http://localhost:8081/api/v1/curd/isUserJoinFight/${params.fightId}/`).then(isUserJoin => {\r\n            // console.log(isUserJoin);\r\n            this.setState({\r\n              isUserJoinFight: isUserJoin.data,\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n      axios\r\n        .get(`http://localhost:8081/api/v1/curd/getall-minitask/${params.fightId}`)\r\n        .then(res => {\r\n          const dt = res.data;\r\n          const IdMinitaskDone = [];\r\n\r\n          for (var i = 0; i < dt.length; i++) {\r\n            IdMinitaskDone.push(dt[i].minitask_id)\r\n          }\r\n          this.setState({ fightminitaskdone: IdMinitaskDone })\r\n          // console.log(this.state.fightminitaskdone);\r\n        });\r\n\r\n\r\n      //set start time for user\r\n      // var today = new Date();\r\n      // var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n      // var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n      // var dateStart = date + ' ' + time;\r\n      // this.setState({ startTime: this.state.userFight.start_time });\r\n\r\n\r\n      // axios\r\n      // .get(`http://localhost:8081/api/v1/curd/getone-minitask/${params.fightId}/${params.minitaskId}/`)\r\n      // .then(res=>{\r\n      //   console.log(res.data);\r\n      //   this.setState({minitaskUser: res.data})\r\n      //   console.log(this.state.minitaskUser);\r\n      // })\r\n\r\n\r\n    }\r\n    // console.log(params);\r\n    // console.log(this.state.isUserFight);\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n        document.title = minitask.mini_task_name;\r\n        const numbers = minitask.numbers_doing\r\n        // console.log(numbers);\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        this.setState((state, props) => ({\r\n          minitask: minitask\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        // console.log(this.state.user_minitask_practice);\r\n        this.setState((state, props) => ({\r\n          userCode: (this.state.isUserStudy && this.state.user_minitask_practice.status === \"done\") ?\r\n            this.state.user_minitask_practice.user_code : minitask.template_code\r\n        }));\r\n        // console.log(this.state.userCode);\r\n\r\n        this.setState({ numbers_doing: numbers });\r\n        // console.log(this.state.numbers_doing);\r\n      });\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/auth/completeminitask`)\r\n      .then(res => {\r\n        const completed = res.data;\r\n        this.setState({ completedMinitask: completed })\r\n        // console.log(this.state.completedMinitask);\r\n      });\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n\r\n    //set up stopwatch clock\r\n    setInterval(() => {\r\n      this.setState((state, props) => {\r\n        return {\r\n          hour: state.hour === 59 ? state.hour + 1 : state.hour,\r\n          minute: state.second === 59 ? state.minute + 1 : state.minute,\r\n          second: state.second === 59 ? 0 : state.second + 1\r\n        };\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  send = (id) => {\r\n    console.log(\"send\");\r\n    sendMsg(JSON.stringify({\r\n      fight_id: id,\r\n      user_id: \"\",\r\n      minitask_id: \"\",\r\n      point: 0,\r\n      request: \"get-leader-board\",\r\n    }))\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `http://localhost:8081/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n          const numbers = minitask.numbers_doing\r\n          this.setState((state, props) => ({\r\n            minitask: minitask,\r\n            isLoadingComponent: false\r\n          }));\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: (this.state.isUserStudy && this.state.user_minitask_practice.status === \"done\") ?\r\n              this.state.user_minitask_practice.user_code : minitask.template_code\r\n          }));\r\n          // console.log(this.state.userCode);\r\n          this.setState({ numbers_doing: numbers });\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    console.log(value);\r\n    this.setState({ userCode: value });\r\n  }\r\n\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChangeTheme = (event) => {\r\n    this.setState({ theme: event.target.value })\r\n  }\r\n\r\n  handleChangeAutoComplete = () => {\r\n    this.setState({ isAutocomplete: !this.state.isAutocomplete });\r\n  }\r\n\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n              }, s.${minitask.name_func}(${inputsFormat}),0);\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n              }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}),0);\\n  }\\n`;\r\n          } else if (minitask.output_type_func === \"String\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}));\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n              }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  submitCodePractice() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          console.log(error);\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            axios.post(\"http://localhost:8081/api/v1/curd/runPracticeCode\", {\r\n              id: \"\",\r\n              user_id: \"\",\r\n              minitask_id: this.state.minitask.id,\r\n              status: \"done\",\r\n              user_code: code,\r\n            }).then(res => {\r\n              console.log(res.data);\r\n            });\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          } else {\r\n            axios.post(\"http://localhost:8081/api/v1/curd/runPracticeCode\", {\r\n              id: \"\",\r\n              user_id: \"\",\r\n              minitask_id: this.state.minitask.id,\r\n              status: \"tried\",\r\n              user_code: \"\",\r\n            }).then(res => {\r\n              console.log(res.data);\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    // axios({\r\n    //   method: 'post',\r\n    //   headers: { \r\n    //     'Content-Type': 'application/x-www-form-urlencoded',\r\n    //   },\r\n    //   url: 'http://localhost:8080/',\r\n    //   data: { \r\n    //     code: code,\r\n    //     test: junit4,\r\n    //   }\r\n    // }).then((res)=>{\r\n    //   console.log(res);\r\n    // })\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            var completed = this.state.completedMinitask\r\n            var listID = [];\r\n            for (var i in completed) {\r\n              listID.push(completed[i].id)\r\n            }\r\n            console.log(listID);\r\n            if (completed !== null && listID.indexOf(this.state.minitask.id) === -1) {\r\n              var newNumbers = this.state.minitask;\r\n              newNumbers.numbers_doing = this.state.numbers_doing - 1\r\n              this.setState({ minitask: newNumbers });\r\n              axios\r\n                .put(\r\n                  `http://localhost:8081/api/v1/curd/minitasks/${this.state.minitask.id}`,\r\n                  newNumbers\r\n                )\r\n                .then(res => {\r\n                  // const course = res.data;\r\n                  // this.setState({ course: course });\r\n                });\r\n\r\n              console.log(this.state.numbers_doing);\r\n            }\r\n\r\n            if (this.state.numbers_doing > 0) {\r\n              this.props.submitUpdateMinitask(\r\n                this.state.minitask.id,\r\n                this.state.minitask.task_id,\r\n\r\n                params.courseId\r\n              );\r\n              Swal.fire({\r\n                type: \"success\",\r\n                title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n                width: 600,\r\n                padding: \"3em\",\r\n                customClass: \"hidden_alert\",\r\n                backdrop: `\r\n                  rgba(0,0,123,0.4)\r\n                  url(\"${require(\"./giphy.gif\")}\") \r\n                  center center\r\n                  no-repeat\r\n                `\r\n              });\r\n              toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n                containerId: \"B\"\r\n              });\r\n            } else {\r\n              toast(\"Bạn làm đúng nhưng hết lượt cộng điểm cho bài thực hành này\", {\r\n                containerId: \"B\"\r\n              });\r\n            }\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  // code fight submit handle\r\n  submitCodeFight() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    console.log(params.taskId)\r\n    console.log(this.state.minitask.task_id);\r\n    // this.props.submitUpdateMinitask(\r\n    //   this.state.minitask.id,\r\n    //   params.taskId,\r\n    //   params.courseId\r\n    // );\r\n\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(code);\r\n    console.log(junit4);\r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/curd/getone-minitask/${params.fightId}/${this.state.minitask.id}/`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskUser: res.data })\r\n        console.log(this.state.minitaskUser);\r\n      })\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code + \"\\n\\n// \" + new Date() + \"\\n\\n// \" + new Date(),\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data.stdout);\r\n          console.log(response.data.stderr === \"\");\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          console.log(error);\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          console.log(this.state.minitaskUser.status);\r\n          var today = new Date();\r\n          var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n          var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n          var dateTime = date + ' ' + time;\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            if (this.props.user.id !== this.state.minitaskUser.user_id &&\r\n              params.fightId !== this.state.minitaskUser.fight_id &&\r\n              this.state.minitaskUser.minitask_id !== this.state.minitask.id) {\r\n              axios.get(`http://localhost:8081/api/v1/curd/handle-user-done-fight/${params.fightId}`).then(res => {\r\n                console.log(res.data);\r\n              });\r\n              axios.post(\"http://localhost:8081/api/v1/curd/runfightminitask\", {\r\n                id: \"\",\r\n                fight_id: params.fightId,\r\n                user_id: this.props.user.id,\r\n                minitask_id: this.state.minitask.id,\r\n                status: \"done\",\r\n                start_time: this.state.startTime,\r\n                end_time: dateTime\r\n              }).then(res => {\r\n                console.log(res.data);\r\n                //add code point for users\r\n                var newFightUser = this.state.userFight;\r\n                newFightUser.point = this.state.minitask.code_point + newFightUser.point\r\n                axios.put(`http://localhost:8081/api/v1/curd/add-point/${this.state.userFight.id}`, newFightUser)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                    this.send(params.fightId)\r\n                  });\r\n              });\r\n            } else {\r\n              console.log(\"Đã tồn tại minitask user fight\");\r\n              var newStatus = this.state.minitaskUser\r\n              if (newStatus.status !== \"done\") {\r\n                newStatus.status = \"done\"\r\n                // axios.get(`http://localhost:8081/api/v1/curd/handle-user-done-fight/${params.fightId}`).then(res => {\r\n                //   console.log(res.data);\r\n                // });\r\n\r\n                // Fix here\r\n\r\n                newStatus.end_time = dateTime\r\n                this.setState({ minitaskUser: newStatus })\r\n                axios.put(`http://localhost:8081/api/v1/curd/updatestatus/${this.state.minitaskUser.id}`, newStatus)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                    //add code point for users\r\n                    var newFightUser = this.state.userFight;\r\n                    newFightUser.point = this.state.minitask.code_point + newFightUser.point\r\n                    axios.put(`http://localhost:8081/api/v1/curd/add-point/${this.state.userFight.id}`, newFightUser)\r\n                      .then(res => {\r\n                        console.log(res.data);\r\n                        this.send(params.fightId);\r\n                      });\r\n                  });\r\n              }\r\n            }\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          } else {\r\n            if (this.props.user.id !== this.state.minitaskUser.user_id &&\r\n              params.fightId !== this.state.minitaskUser.fight_id &&\r\n              this.state.minitaskUser.minitask_id !== this.state.minitask.id) {\r\n              axios.post(\"http://localhost:8081/api/v1/curd/runfightminitask\", {\r\n                id: \"\",\r\n                fight_id: params.fightId,\r\n                user_id: this.props.user.id,\r\n                minitask_id: this.state.minitask.id,\r\n                status: \"tried\",\r\n                tried: this.state.minitaskUser.tried + 1,\r\n                start_time: dateTime\r\n              }).then(res => {\r\n                console.log(res.data);\r\n                this.send(params.fightId);\r\n              });\r\n            } else {\r\n              newStatus = this.state.minitaskUser;\r\n              newStatus.tried += 1\r\n              this.setState({ minitaskUser: newStatus })\r\n              axios.put(`http://localhost:8081/api/v1/curd/updatestatus/${this.state.minitaskUser.id}`, newStatus)\r\n                .then(res => {\r\n                  this.send(params.fightId);\r\n                });\r\n            }\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function (error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          this.send(params.fightId);\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n\r\n  renderCodingTime = (isUserCompleteFight) => {\r\n    if (!isUserCompleteFight) {\r\n      return <Typography style={{ fontSize: 16, fontWeight: 600 }}>\r\n        Time: {this.state.hour < 10 ? \"0\" + this.state.hour : this.state.hour}:{this.state.minute < 10 ? \"0\" + this.state.minute : this.state.minute}:{this\r\n          .state.second < 10\r\n          ? \"0\" + this.state.second\r\n          : this.state.second}\r\n      </Typography>\r\n    } else {\r\n      return <Typography style={{ fontSize: 16, fontWeight: 600 }}>\r\n        Time: {this.state.hourComplete < 10 ? \"0\" + this.state.hourComplete : this.state.hourComplete}\r\n              :{this.state.minuteComplete < 10 ? \"0\" + this.state.minuteComplete : this.state.minuteComplete}:\r\n              {this.state.secondComplete < 10 ? \"0\" + this.state.secondComplete : this.state.secondComplete}\r\n      </Typography>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { minitask, result, theme, isLoadingCode, contestStatus, isUserJoinFight, isUserFight, isUserCompleteFight } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let btnSubmit;\r\n    if (this.state.isUserStudy) {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"#7BC043\" }} onClick={this.submitCode} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    }\r\n    if (this.state.isUserFight) {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"#7BC043\" }} onClick={this.submitCodeFight} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    } else {\r\n      btnSubmit = (<Button variant=\"contained\" startIcon={<DescriptionIcon />}\r\n        style={{ backgroundColor: \"#7BC043\" }} onClick={this.submitCodePractice} disabled={this.state.isLoading} color=\"primary\">\r\n        Nộp bài\r\n      </Button>)\r\n    }\r\n\r\n    if (isUserFight && !isLoadingComponent) {\r\n      if (contestStatus === 1 || !isUserJoinFight) {\r\n        return <Notfoundpage/>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"fit layout-code\">\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          <Divider />\r\n          {this.state.isUserFight && !isLoadingComponent ? (\r\n            <div className=\"container\">\r\n              <div className=\"btn-minitask\" style={{ margin: \"0 auto\", display: \"inline-block\", marginLeft: 10, position: \"relative\" }}>\r\n                <Slide in={true} direction=\"right\" {...(true ? { timeout: 1400 } : {})}>\r\n                  <ButtonGroup variant=\"contained\" size=\"large\" aria-label=\" contained primary button group\">\r\n                    {this.state.minitaskListId.map((object, i) => {\r\n                      if (this.state.fightminitaskdone.includes(object.id) === true) {\r\n                        return (\r\n                          <Button obj={object} key={i}\r\n                            component={Link} to={`/fight/${params.fightId}/minitask/${object.id}`} className=\"btn-minitask-item\"\r\n                            style={{ marginRight: 6, borderRadius: 3, backgroundColor: \"#3f51b5 \", border: \"1px solid #3f51b5 \", fontSize: 13 }}>\r\n                            <DoneIcon style={{ color: \"#fff\" }} fontSize=\"medium\"></DoneIcon>\r\n                          </Button>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <Button obj={object} key={i}\r\n                            component={Link} to={`/fight/${params.fightId}/minitask/${object.id}`} className=\"btn-minitask-item\"\r\n                            style={{\r\n                              marginRight: 6, borderRadius: 3, border: \"1px solid #65656d\", fontSize: 13,\r\n                              backgroundColor: object.id === params.minitaskId ? \"#7278D6\" : \"\"\r\n                            }}>{i + 1}</Button>\r\n                        )\r\n                      }\r\n                    })}\r\n                  </ButtonGroup>\r\n                </Slide>\r\n              </div>\r\n              <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                <div style={{ float: \"right\", marginRight: 10 }}>\r\n                  <div className=\"stopwatch\" style={{ color: \"#D94A38\", fontSize: 16, fontWeight: 600 }}>\r\n                    {this.renderCodingTime(isUserCompleteFight)}\r\n                  </div>\r\n                </div>\r\n              </Slide>\r\n            </div>\r\n          ) : null}\r\n\r\n          {isLoadingComponent && isLoadingCode ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height: \"100vh\"\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n              <div className=\"layout-code-body\">\r\n                {/* layout-code-body->   position: relative;flex-grow: 1;*/}\r\n                <div className=\"split-panel fit\">\r\n                  <div className=\"stretch fit\">\r\n                    {/*  <MediaQuery minDeviceWidth={701}>*/}\r\n                    <Split\r\n                      className=\"splitHorizontal\"\r\n                      sizes={[25, 75]}\r\n                      minSize={0}\r\n                      expandToMin={false}\r\n                      gutterSize={4}\r\n                      gutterAlign=\"center\"\r\n                      snapOffset={30}\r\n                      dragInterval={1}\r\n                      direction=\"horizontal\"\r\n                      cursor=\"col-resize\"\r\n                    >\r\n                      <div className=\"split-panel-first \">\r\n                        <MiniTaskDesc\r\n                          mini_task_desc={minitask.mini_task_desc}\r\n                          code_point={minitask.code_point}\r\n                          level={minitask.level}\r\n                          minitaskName={minitask.mini_task_name}\r\n                        />\r\n                      </div>\r\n                      <div className=\"split-panel-second \">\r\n                        <div className=\"coding-area\">\r\n                          <Split\r\n                            className=\"splitVertical\"\r\n                            sizes={[50, 50]}\r\n                            minSize={100}\r\n                            expandToMin={false}\r\n                            gutterSize={4}\r\n                            gutterAlign=\"center\"\r\n                            snapOffset={30}\r\n                            dragInterval={1}\r\n                            direction=\"vertical\"\r\n                            cursor=\"row-resize\"\r\n                          >\r\n                            <div>\r\n                              <div className=\"codeEditor\">\r\n                                {/* <CodeEditor\r\n                                  userCode={this.state.userCode}\r\n                                  updateUserCode={this.updateUserCode}\r\n                                /> */}\r\n                                <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\r\n                                  <Slide in={true} {...(true ? { timeout: 700 } : {})}>\r\n                                    <Box ml={1}>\r\n                                      <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\r\n                                      <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={theme}\r\n                                        onChange={this.handleChangeTheme}\r\n                                        style={{ width: 100 }}\r\n                                      >\r\n                                        <MenuItem value={\"textmate\"}>Textmate</MenuItem>\r\n                                        <MenuItem value={\"github\"}>Github</MenuItem>\r\n                                        <MenuItem value={\"monokai\"}>Monokai</MenuItem>\r\n                                      </Select>\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  <Slide in={true} {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box ml={3} width=\"100%\">\r\n                                      <InputLabel id=\"demo-simple-select-label\">Autocomplete</InputLabel>\r\n                                      <Checkbox\r\n                                        checked={this.state.isAutocomplete}\r\n                                        color=\"primary\"\r\n                                        onChange={this.handleChangeAutoComplete}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box p={1} flexShrink={0}>\r\n                                      <Button variant=\"contained\" onClick={this.resetCode} startIcon={<RotateLeftIcon />} disabled={this.state.isLoading} color=\"primary\">\r\n                                        Reset code\r\n                                    </Button>\r\n                                    </Box>\r\n                                  </Slide>\r\n                                </Box>\r\n                                <Box mt={1} style={{ height: '500pz' }}>\r\n                                  <AceEditor\r\n                                    mode=\"java\"\r\n                                    theme={theme}\r\n                                    onChange={this.updateUserCode}\r\n                                    // name=\"blah2\"\r\n                                    fontSize={14}\r\n                                    showPrintMargin={true}\r\n                                    // editorProps={{ $blockScrolling: true }}\r\n                                    enableBasicAutocompletion={this.state.isAutocomplete}\r\n                                    enableLiveAutocompletion={this.state.isAutocomplete}\r\n                                    enableSnippets={true}\r\n                                    value={this.state.userCode}\r\n                                    showLineNumbers={true}\r\n                                    width=\"100%\"\r\n                                    // height=\"50%\"\r\n                                    tabSize={0}\r\n                                  />\r\n                                </Box>\r\n                                {/* <div\r\n                                  className=\"reset_code\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    right: 20,\r\n                                    zIndex: 9\r\n                                  }}\r\n                                >\r\n                                  <button\r\n                                    onClick={this.resetCode}\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      padding: \"6px 8px\",\r\n                                      cursor: \"pointer\",\r\n                                      background: \"#ef5350\",\r\n                                      fontWeight: \"bold\"\r\n                                    }}\r\n                                  >\r\n                                    Reset code\r\n                                </button>\r\n                                </div> */}\r\n                                {/* <div\r\n                                  className=\"reset_code\"\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    right: 110,\r\n                                    zIndex: 9\r\n                                  }}\r\n                                >\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      this.beautifyCode(this.state.userCode)\r\n                                    }\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      padding: \"6px 8px\",\r\n                                      cursor: \"pointer\",\r\n                                      background: \"#3d5afe\",\r\n                                      fontWeight: \"bold\"\r\n                                    }}\r\n                                  >\r\n                                    Beautifier code\r\n                                </button>\r\n                                </div> */}\r\n                              </div>\r\n                            </div>\r\n                            <Grid container xs={12} md={12} sm={12}>\r\n                              <Grid item xs={10} md={10} sm={10}>\r\n                                <div className=\"resultPanel\">\r\n                                  {this.state.result.stdout !== undefined ||\r\n                                    this.state.result.errorRuntime !== undefined ? (\r\n                                      <ResultPanel\r\n                                        unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                                        result={this.state.result}\r\n                                      />\r\n                                    ) : (\r\n                                      <TestsPanel\r\n                                        isLoading={this.state.isLoading}\r\n                                        unit_tests={minitask.unit_tests}\r\n                                      />\r\n                                    )}\r\n                                </div>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container style={{ backgroundColor: \"white\" }} justify=\"center\" alignContent=\"flex-start\" item xs={2} md={2} sm={2}>\r\n                                <div\r\n                                  className=\"runtest-area\"\r\n                                  style={{\r\n                                    // minHeight: \"40px\",\r\n                                    // padding: \"10px 20px\",\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"flex-end\"\r\n                                  }}\r\n                                >\r\n                                  <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                                    {renderPassedTestCount()}\r\n                                  </div>\r\n                                  <div style={{ marginLeft: 30 }}>\r\n                                    {/* <button\r\n                            className={`execute_btn ${this.state.isLoading &&\r\n                              \"disable_btn\"}`}\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                            onClick={this.executeCode}\r\n                            disabled={this.state.isLoading}\r\n                          >\r\n                            {this.state.isLoading\r\n                              ? \"Đang thực thi\"\r\n                              : \"Thực thi\"}\r\n                            <img\r\n                              src={require(\"./play-button.svg\")}\r\n                              alt=\"\"\r\n                              style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                            ></img>\r\n                          </button> */}\r\n                                  </div>\r\n                                  <Slide in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n                                    <Box>\r\n                                      {btnSubmit}\r\n                                    </Box>\r\n                                  </Slide>\r\n                                  {this.props.user.next_minitask !== undefined ? (\r\n                                    <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                                      {this.props.user.next_minitask.id === \"\" ? (\r\n                                        <Link\r\n                                          to={`/profile/courses/${params.courseId}/tasks`}\r\n                                          style={{\r\n                                            textDecoration: \"none\",\r\n                                            color: \"#595959\"\r\n                                          }}\r\n                                        >\r\n                                          Qua bài mới\r\n                                        </Link>\r\n                                      ) : (\r\n                                          <Link\r\n                                            to={`/tasks/${this.props.user.next_minitask.id}/${params.courseId}/${params.taskId}`}\r\n                                            style={{\r\n                                              textDecoration: \"none\",\r\n                                              color: \"#595959\"\r\n                                            }}\r\n                                          >\r\n                                            Qua bài mới\r\n                                          </Link>\r\n                                        )}\r\n                                    </div>\r\n                                  ) : (\r\n                                      <div></div>\r\n                                    )}\r\n                                </div>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Split>\r\n                        </div>\r\n                      </div>\r\n                    </Split>{\" \"}\r\n                    {/* </MediaQuery>*/}\r\n                    {/* <MediaQuery maxDeviceWidth={700}>\r\n                  {\" \"}\r\n                  <div\r\n                    style={{\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      position: \"fixed\",\r\n                      transform: `translate(-50%,-50%)`,\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    Không hỗ trợ code bằng điện thoại\r\n                  </div>\r\n                </MediaQuery> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"./codeeditor.css\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/darcula.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\nimport \"codemirror/mode/clike/clike.js\";\r\n//import \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/closetag.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\n//import \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\n\r\nclass CodeEditor extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <CodeMirror\r\n      className=\"CodeMirrorCustom\"\r\n        value={this.props.userCode}\r\n        options={{\r\n          mode: \"text/x-java\", \r\n          theme: \"darcula\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck: true,\r\n          autocorrect: true,\r\n          extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n        }}\r\n        \r\n        MarkText={{\r\n          from: { line: 0, ch: 1 },\r\n          to: { line: 3, ch: 1 },\r\n          css: \"font-size:5px\"\r\n        }}\r\n        \r\n        onBeforeChange={(editor, data, value) => {\r\n          this.props.updateUserCode(value); // update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\nimport CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport \"./minitasknosplit.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport js_beautify from \"js-beautify\";\r\nimport { connect } from \"react-redux\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true\r\n      ,open: false\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      });\r\n\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `http://localhost:8081/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    this.setState({ userCode: value });\r\n  }\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n\r\n          \r\n        \r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n           else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    axios\r\n      .post(\"http://codejava.tk/runner\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\" || response.data.stdout.includes(\"SUCCESSFUL\")) {\r\n            // process alert success and add code point\r\n            this.props.submitUpdateMinitask(\r\n              this.state.minitask.id,\r\n              this.state.minitask.task_id\r\n            );\r\n\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài thực hành này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài thực hành này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  render() {\r\n    const { minitask, result } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className=\"fit layout-code\">\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          {isLoadingComponent ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height:'100vh'\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={4} md={4}>\r\n                <MiniTaskDesc\r\n                  mini_task_desc={minitask.mini_task_desc}\r\n                  code_point={minitask.code_point}\r\n                  level={minitask.level}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                style={{ flexDirection: \"column\" }}\r\n                xs={12}\r\n                sm={8}\r\n                md={8}\r\n              >\r\n                <Grid item style={{ flexGrow: 1 }}>\r\n                  <div className=\"coding-area\">\r\n                    <div className=\"codeEditor\">\r\n                      <CodeEditor\r\n                        userCode={this.state.userCode}\r\n                        updateUserCode={this.updateUserCode}\r\n                      />\r\n                      <div\r\n                        className=\"reset_code\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 10,\r\n                          right: 20,\r\n                          zIndex: 9\r\n                        }}\r\n                      >\r\n                        <button\r\n                          onClick={this.resetCode}\r\n                          style={{\r\n                            fontSize: 12,\r\n                            padding: \"6px 8px\",\r\n                            cursor: \"pointer\",\r\n                            background: \"#ef5350\",\r\n                            fontWeight: \"bold\"\r\n                          }}\r\n                        >\r\n                          Reset code\r\n                        </button>\r\n                      </div>\r\n                      <div\r\n                                className=\"reset_code\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  bottom: 10,\r\n                                  right: 110,\r\n                                  zIndex: 9\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={() =>\r\n                                    this.beautifyCode(this.state.userCode)\r\n                                  }\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    padding: \"6px 8px\",\r\n                                    cursor: \"pointer\",\r\n                                    background: \"#3d5afe\",\r\n                                    fontWeight: \"bold\"\r\n                                  }}\r\n                                >\r\n                                  Beautifier code\r\n                                </button>\r\n                              </div>\r\n                    </div>\r\n\r\n                    <div className=\"resultPanel\">\r\n                      {this.state.result.stdout !== undefined ||\r\n                      this.state.result.errorRuntime !== undefined ? (\r\n                        <ResultPanel\r\n                          unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                          result={this.state.result}\r\n                        />\r\n                      ) : (\r\n                        <TestsPanel\r\n                          isLoading={this.state.isLoading}\r\n                          unit_tests={minitask.unit_tests}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div\r\n                    className=\"runtest-area\"\r\n                    style={{\r\n                      minHeight: \"40px\",\r\n                      padding: \"10px 20px\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"flex-end\"\r\n                    }}\r\n                  >\r\n                    <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                      {renderPassedTestCount()}\r\n                    </div>\r\n                    <div style={{ marginLeft: 30 }}>\r\n                      <button\r\n                        className={`execute_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        style={{ display: \"flex\", alignItems: \"center\" }}\r\n                        onClick={this.executeCode}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        {this.state.isLoading ? \"Đang thực thi\" : \"Thực thi\"}\r\n                        <img\r\n                          src={require(\"./play-button.svg\")}\r\n                          alt=\"\"\r\n                          style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                        ></img>\r\n                      </button>\r\n                    </div>\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <button\r\n                        onClick={this.submitCode}\r\n                        className={`submitCode_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        Nộp bài\r\n                      </button>\r\n                    </div>\r\n\r\n                    {this.props.user.next_minitask !== undefined ? (\r\n                      <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                        <Link\r\n                          to={`/tasks/${this.props.user.next_minitask.id}`}\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"#595959\"\r\n                          }}\r\n                        >\r\n                          Qua bài mới\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport MiniTaskPage from \"./MiniTaskPage\";\r\nimport MiniTaskPageNoSplit from \"./MiniTaskPageNoSplit\";\r\n\r\nclass MinitaskPageResponsive extends Component {\r\n  render() {\r\n    const {\r\n        match\r\n      } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <MediaQuery minDeviceWidth={701}>\r\n          <MiniTaskPage match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={700}>\r\n          <MiniTaskPageNoSplit match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MinitaskPageResponsive;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./homePage.css\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nconst styles = {\r\n  cardGrid: {\r\n    paddingTop: 32,\r\n    paddingBottom: 32\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n};\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to={\"/\"}>\r\n        Hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// const cards = [1, 2, 3];\r\n\r\nclass CourseBody extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  render() {\r\n    // const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid\r\n        className=\"containerMain\"\r\n        style={{\r\n          height: \"inherit\",\r\n          width: \"100%\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <Grid\r\n\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            padding: 40,\r\n            paddingTop: 0,\r\n            height: \"inherit\"\r\n          }}\r\n        >\r\n          <Grid container className=\"header-homepage\">\r\n            <Grid\r\n              className=\"HeaderLeftHome\"\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sm={4}\r\n              style={{ marginBottom: 0 }}\r\n            >\r\n              <div className=\"logo logo-homepage\">\r\n                <Link to=\"/profile\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                    alt=\"\"\r\n                    style={{ height: \"80px\", paddingTop: 35 }}\r\n                  ></img>\r\n                </Link>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"HeaderRightHome\"\r\n              item\r\n              xs={12}\r\n              md={8}\r\n              sm={8}\r\n              container\r\n            >\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/searchcert\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2b2b2b\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      paddingLeft: \"20px\",\r\n                      paddingRight: \"20px\",\r\n                  \r\n                      // width: \"155px\",\r\n                    }}\r\n                    startIcon={<SearchIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Tra Chứng Chỉ\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/leaderboard\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#6589F9\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      paddingLeft: \"20px\",\r\n                      paddingRight: \"20px\",\r\n                  \r\n                      // width: \"155px\",\r\n                    }}\r\n                    startIcon={<ShowChartIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Xếp hạng\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <a\r\n                  href=\"/login\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2196f3\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      fontSize: \"16px\",\r\n                      boxShadow: \"none\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                </a>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/signup\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#7bccd5\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            style={{\r\n              flexGrow: 1,\r\n              // justifyContent: \"center\",\r\n              // alignItems: \"center\",\r\n              padding: 10,\r\n              marginBottom: \"30px\"\r\n            }}\r\n            container\r\n          >\r\n            <Grid\r\n              className=\"left-block-homepage\"\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{}}\r\n            >\r\n              <div>\r\n                {/* <h3 style={{ textAlign: \"center\" }}> */}\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h2\"\r\n                  // align=\"left\"\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  style={{ color: \"#009688\", fontWeight: 600, fontSize: \"4em\" }}\r\n                >\r\n                  {/* WELLCOME TO{\" \"} */}\r\n                  {/* <span style={{ color: \"#009688\",  }}> */}\r\n                  WELCOME TO HOCODE\r\n                  {/* </span> */}\r\n                </Typography>\r\n\r\n                {/* </h3> */}\r\n              </div>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  // align=\"left\"\r\n                  color=\"textSecondary\"\r\n                  paragraph\r\n                >\r\n                  {/* <p style={{ textAlign: \"center\" }}> */}\r\n                  Học và rèn luyện khả năng lập trình với hơn{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">30</span> bài thực hành{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">JAVA</span>. Còn\r\n                  chần chờ gì nữa, hãy tham gia ngay.\r\n                  {/* </p> */}\r\n                </Typography>\r\n\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  className=\"left-block-home-button\"\r\n                  // justify=\"left\"\r\n                >\r\n                  <Grid item>\r\n                    <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          color: \"#fff\",\r\n                          background: \"#ff5252\",\r\n\r\n                          fontWeight: 600,\r\n                          boxShadow: \"none\",\r\n                          fontSize: \"16px\",\r\n                          padding: \"8px 32px\"\r\n                        }}\r\n                      >\r\n                        Bắt đầu\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"image-homepage\"\r\n              container\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{\r\n                padding: \"8px\"\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  background: `url(\"/codeEdit3.jpg\") no-repeat left center`,\r\n                  backgroundSize: \"cover\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  borderRadius: \"16px 4px\"\r\n                }}\r\n              ></div>\r\n              {/* <img\r\n              src={process.env.PUBLIC_URL  + \"/codeEdit3.jpg\"}\r\n              alt=\"\"\r\n              // style={{ height: \"40px\" }}\r\n            ></img>\r\n    <Grid item>Goes here</Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* <Grid \r\n                      style={{\r\n                        flexGrow: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        padding: 25\r\n                      }}\r\n           \r\n          \r\n          >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeEdit.PNG\"}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"auto\",\r\n\r\n                  boxShadow: \"9px 7px 40px 0px rgba(0,0,0,0.75)\",\r\n                  borderRadius: 14\r\n                }}\r\n              ></img>\r\n            </Grid> */}\r\n\r\n          <Copyright />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(CourseBody));\r\n\r\n// <Container className={classes.cardGrid} maxWidth=\"md\">\r\n// {/* End hero unit */}\r\n// <Grid container spacing={4}>\r\n//   {cards.map(card => (\r\n//     <Grid item key={card} xs={12} sm={6} md={4}>\r\n//       <Card className={classes.card}>\r\n//         <CardMedia\r\n//           className={classes.cardMedia}\r\n//           image=\"https://source.unsplash.com/random\"\r\n//           title=\"Image title\"\r\n//         />\r\n//         <CardContent className={classes.cardContent}>\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             Heading\r\n//           </Typography>\r\n//           <Typography>\r\n//             This is a media card. You can use this section to\r\n//             describe the content.\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </Grid>\r\n//   ))}\r\n// </Grid>\r\n// </Container>\r\n","const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst regexPassword = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/;\r\n\r\nexport { regexEmail, regexPassword };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../../js/actions/authActions\";\r\nimport \"./SignUpPage.css\";\r\n\r\nimport { regexEmail, regexPassword } from \"../../common/regex\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass SignUpPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      socialAccount: \"local\",\r\n      password2: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    var errorFormNew = this.state.errorForm;\r\n\r\n    if (e.target.id === \"email\")\r\n      if (regexEmail.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.email =\r\n          \"*Email không đúng định dạng vd: nguyenvana@gmail.com\";\r\n      } else {\r\n        errorFormNew.email = \"\";\r\n      }\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n    if (this.state.password2.trim() === \"\")\r\n      messageError = \"*Nhập lại mật khẩu không thể để trống\";\r\n    if (this.state.password.trim() === \"\")\r\n      messageError = \"*Mật khẩu không thể để trống\";\r\n    // if (regexPassword.test(String(this.state.password).toLowerCase()) === false)\r\n    //   messageError =\r\n    //     \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n\r\n    if (this.state.email.trim() === \"\")\r\n      messageError = \"*Email không thể để trống\";\r\n\r\n    if (regexEmail.test(String(this.state.email).toLowerCase()) === false)\r\n      messageError = \"*Email không đúng định dạng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      socialAccount: this.state.socialAccount\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n             <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"80px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng ký\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  autoComplete=\"lname\"\r\n                  name=\"lastName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Họ\"\r\n                  autoFocus\r\n                  value={this.state.lastName}\r\n                  onChange={this.onChange}\r\n                  // error={this.state.errorForm.lastName.trim() !== \"\"}\r\n                  // helperText={this.state.errorForm.lastName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Tên\"\r\n                  name=\"firstName\"\r\n                  autoComplete=\"fname\"\r\n                  value={this.state.firstname}\r\n                  onChange={this.onChange}\r\n                  // error={this._checkError(this.state.errorForm.firstname)}\r\n                  // helperText={this.state.errorForm.firstname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Địa chỉ Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.email.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password2\"\r\n                  label=\"Nhập lại Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password2\"\r\n                  autoComplete=\"current-password2\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password2.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Tạo tài khoản\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản rồi, Đăng nhập ngay\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nSignUpPage.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(SignUpPage)\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    // minWidth: 650\r\n  },\r\n  searchIcon: {\r\n    // width: theme.spacing(7),\r\n    width: 7,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    // padding: theme.spacing(1, 1, 1, 7),\r\n    padding: 7,\r\n    // transition: theme.transitions.create('width'),\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('md')]: {\r\n    //   width: 200,\r\n    // },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    // borderRadius: theme.shape.borderRadius,\r\n    // backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    // \"&:hover\": {\r\n    //     backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    // },\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   marginLeft: theme.spacing(3),\r\n    //   width: 'auto',\r\n    // },\r\n  },\r\n  rootSearch: {\r\n    padding: \"2px 16px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n    marginBottom: 24,\r\n    paddingLeft: \"36px\"\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 16\r\n  }\r\n});\r\n\r\nclass SearchCertPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      searchID: \"\",\r\n      rows: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n  componentDidMount() { }\r\n\r\n  onSubmitSearch = () => {\r\n    this.setState({ isLoading: true, rows: [] });\r\n    // console.log(this.state.searchID);\r\n    Axios.get(`http://localhost:8081/api/v1/certs/search/${this.state.searchID}`)\r\n      .then(res => {\r\n        this.setState({ rows: res.data, isLoading: false });\r\n        console.log(this.state.rows);\r\n      })\r\n      .catch(e => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleChange = event => {\r\n    // this.setState({ searchID: event.target.value });\r\n    this.setState({\r\n      searchID: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{ height: \"100%\", backgroundColor: \"whitesmoke\" }}\r\n        >\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              className=\"header-homepage\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <Grid\r\n                className=\"HeaderLeftHome\"\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                sm={4}\r\n                style={{ marginBottom: 0 }}\r\n              >\r\n                <div className=\"logo logo-homepage\">\r\n                  <Link to=\"/profile\">\r\n                    <div\r\n                      style={{\r\n                        height: \"56px\",\r\n                        margin: 16,\r\n                        background: `url(\"/logo.png\") no-repeat left center`,\r\n                        backgroundSize: \"contain\"\r\n                      }}\r\n                    ></div>\r\n                  </Link>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                className=\"HeaderRightHome\"\r\n                item\r\n                xs={12}\r\n                md={8}\r\n                sm={8}\r\n                container\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/searchcert\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2b2b2b\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\"\r\n\r\n                        // width: \"155px\",\r\n                      }}\r\n                      startIcon={<SearchIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Tra Chứng Chỉ\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/leaderboard\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#6589F9\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\",\r\n\r\n                        // width: \"155px\",\r\n                      }}\r\n                      startIcon={<ShowChartIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Xếp hạng\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/login\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2196f3\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"16px\",\r\n                        boxShadow: \"none\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng nhập\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/signup\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#7bccd5\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng ký\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ height: \"100%\", padding: \"64px\" }}\r\n            >\r\n              <Paper\r\n                onSubmit={this.onSubmitSearch}\r\n                component=\"form\"\r\n                className={classes.rootSearch}\r\n              >\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Mã Chứng Chỉ\"\r\n                  inputProps={{ \"aria-label\": \"mã chứng chỉ\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <IconButton\r\n                  //   type=\"submit\"\r\n                  onClick={this.onSubmitSearch}\r\n                  className={classes.iconButton}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n\r\n              <Paper className={classes.root}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell >ID</TableCell>\r\n                      <TableCell align=\"right\">Trạng thái</TableCell>\r\n                      <TableCell align=\"right\">Thời gian cập nhập</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {this.state.rows.map(row => (\r\n                      <TableRow key={row.id}>\r\n                        <TableCell component=\"th\" scope=\"row\" >\r\n                          {row.search_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                        <TableCell align=\"right\">{Date(row.timestamp).toLocaleString(\"vi\")}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <CircularProgress size={64} style={{ margin: \"32px\" }} />\r\n                  </div>\r\n                ) : (\r\n                    <> </>\r\n                  )}\r\n                {this.state.rows.length === 0 && !this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      width=\"184\"\r\n                      height=\"152\"\r\n                      viewBox=\"0 0 184 152\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <g transform=\"translate(24 31.67)\">\r\n                          <ellipse\r\n                            fillOpacity=\".8\"\r\n                            fill=\"#F5F5F7\"\r\n                            cx=\"67.797\"\r\n                            cy=\"106.89\"\r\n                            rx=\"67.797\"\r\n                            ry=\"12.668\"\r\n                          ></ellipse>\r\n                          <path\r\n                            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n                            fill=\"#AEB8C2\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\r\n                            fill=\"url(#linearGradient-1)\"\r\n                            transform=\"translate(13.56)\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n                            fill=\"#F5F5F7\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n                            fill=\"#DCE0E6\"\r\n                          ></path>\r\n                        </g>\r\n                        <path\r\n                          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n                          fill=\"#DCE0E6\"\r\n                        ></path>\r\n                        <g transform=\"translate(149.65 15.383)\" fill=\"#FFF\">\r\n                          <ellipse\r\n                            cx=\"20.654\"\r\n                            cy=\"3.167\"\r\n                            rx=\"2.849\"\r\n                            ry=\"2.815\"\r\n                          ></ellipse>\r\n                          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"></path>\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                    <p>No Data</p>\r\n                  </div>\r\n                ) : (\r\n                    <></>\r\n                  )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchCertPage);\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleMDEReact\r\n          className={\"react_mde_custom\"}\r\n          label=\"\"\r\n          value={this.props.mini_task_desc}\r\n          onChange={this.handleChange}\r\n          options={{\r\n           \r\n            spellChecker: false\r\n            \r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"../../minitaskPage/ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\"\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/courses`).then(res => { \r\n      const courses = res.data;\r\n      const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n      const coursesoption = coursesFilter.map(course => {\r\n        return { value: course.id, label: course.course_name };\r\n      });\r\n      this.setState({\r\n        courses: coursesFilter,\r\n        coursesOption: coursesoption,\r\n        tasksOption: courses[0].tasks.map(task => {\r\n          return { value: task.id, label: task.task_name };\r\n        })\r\n      });\r\n      this.setState({\r\n        course_id: courses[0].id,\r\n        task_id: courses[0].tasks[0].id\r\n      });\r\n    });\r\n  }\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code =  `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n    }(${ this.state.inputList\r\n      .map(input => {\r\n        return `${input.input_type} ${input.input_name}`;\r\n      })\r\n      .join()})\r\n{ \r\n}`;\r\n    \r\n    let newMiniTask = {\r\n      template_code:template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      course_id: this.state.course_id, \r\n      task_id: this.state.task_id,\r\n      name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n    }\r\n    console.log(newMiniTask)\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) { // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function(course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({ // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value ,   tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }), task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div>Tạo bài thực hành</div>\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ background: \"aliceblue\", padding: \"8px\" }}>\r\n              {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn khóa học:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn task:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item>\r\n                  <div>Tên bài thực hành:</div>\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <div>Tên Function:</div>\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    {/* Kiểu trả về: */}\r\n                  </div>\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Mô tả bài toán:\r\n                  </div>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n              />\r\n            </div>\r\n            <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addInput(e)}>Thêm tham số</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"20vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              Tên tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <input\r\n                                className=\"input-createminitask\"\r\n                                value={input.input_name}\r\n                                onChange={e =>\r\n                                  this.handleListInputNameChange(e, index)\r\n                                } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              kiểu tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <Select\r\n                                options={options}\r\n                                defaultValue={options[0]}\r\n                                onChange={select_value =>\r\n                                  this.handleListInputTypeChange(\r\n                                    select_value,\r\n                                    index\r\n                                  )\r\n                                } // higher order function\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addTest(e)}>Thêm test</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.unit_tests.map((unit_test, index0) => {\r\n                    return (\r\n                      <div key={index0} style={{ padding: 10 }}>\r\n                        {\" \"}\r\n                        Test {index0 + 1}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Inputs:\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Out put\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                <button onClick={this.handleSubmit}>submit</button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","import React, { Component } from 'react';\r\nimport CreateMiniTaskBody from './body/CreateMiniTaskBody'\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CreateMiniTaskBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK, AUTH_GET_PERMISSIONS } from \"react-admin\";\r\nimport decodeJwt from \"jwt-decode\";\r\n\r\nexport default (type, params) => {\r\n  if (type === AUTH_LOGIN) {\r\n    const { username, password } = params;\r\n    const request = new Request(\"http://localhost:8081/api/v1/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email: username, password: password }),\r\n      headers: new Headers({ \"Content-Type\": \"application/json\" })\r\n    });\r\n    return fetch(request)\r\n      .then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(({ token }) => {\r\n        const decodedToken = decodeJwt(token);\r\n        localStorage.setItem(\"AuthToken\", token);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"permissions\", decodedToken.data.role);\r\n      });\r\n  }\r\n  if (type === AUTH_LOGOUT) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"AuthToken\");\r\n    localStorage.removeItem(\"permissions\");\r\n  return Promise.resolve();\r\n  }\r\n  if (type === AUTH_ERROR) {\r\n    const status = params.status;\r\n    if (status === 401 || status === 403) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"AuthToken\");\r\n      localStorage.removeItem(\"permissions\");\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  if (type === AUTH_CHECK) {\r\n    // return Promise.resolve();\r\n\r\n    return localStorage.getItem(\"token\") || localStorage.getItem(\"AuthToken\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n  if (type === AUTH_GET_PERMISSIONS) {\r\n    return localStorage.getItem(\"permissions\") //|| localStorage.getItem(\"AuthToken\")\r\n      ? Promise.resolve()\r\n      : Promise.reject();\r\n  }\r\n\r\n  return Promise.reject(\"Unknown method\");\r\n};\r\n","/**\r\n * Generated catchAll.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass catchAll extends Component {\r\n  render() {\r\n    return <Redirect push to=\"/\" />;\r\n\r\n    // return localStorage.getItem('token') ? (\r\n    //     <NotFound />\r\n    // ) : (\r\n    //     <Redirect push to=\"/login\" />\r\n    // );\r\n  }\r\n}\r\n\r\nexport default catchAll;\r\n/** End of Generated Code **/\r\n","// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n// import { NotFound } from 'react-admin';\r\n// import Card from '@material-ui/core/Card';\r\n// import { Title, Resource } from 'react-admin';\r\n\r\n// import {\r\n//     ModelEventList,\r\n//     ModelEventCreate,\r\n//     ModelEventEdit,\r\n// } from './resources/ModelEvent';\r\n\r\n\r\n// import catchAll from './catchAll';\r\n\r\n\r\n// const Foo = () => (\r\n//     <Card>\r\n//         <Title title=\"My Page\" />\r\n//         {/* <CardContent>\r\n//             ...\r\n//         </CardContent> */}\r\n//         <Resource\r\n\r\n//         name=\"events\"\r\n//         list={ ModelEventList }\r\n//         create={ ModelEventCreate }\r\n//         edit={ ModelEventEdit }\r\n//     />\r\n//     {/* <ModelEventList/> */}\r\n//         My Page\r\n//         My Page\r\n//     </Card>\r\n// );\r\n\r\nexport default [\r\n    // <Route exact path=\"/profile/admin/events\" render={() => <Resource\r\n\r\n    //     name=\"events\"\r\n    //     list={ ModelEventList }\r\n    //     create={ ModelEventCreate }\r\n    //     edit={ ModelEventEdit }\r\n    // />} />,\r\n    // <Route exact path=\"/bar\" component={Bar} />,\r\n    // <Route exact path=\"/baz\" component={Baz} noLayout />,\r\n\r\n    // <Route exact path=\"/profile/admin/books\" component={<NotFound />} />,\r\n    // <Route exact path=\"/asd\" component={<div>courses</div>} />,\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n];\r\n","/**\r\n * Generated dataProvider.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport { stringify } from 'query-string';\r\nimport { fetchUtils } from 'react-admin';\r\n\r\nexport const GET_LIST = 'GET_LIST';\r\nexport const GET_ONE = 'GET_ONE';\r\nexport const GET_MANY = 'GET_MANY';\r\nexport const GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n\r\nconst COMPOSITE_KEY_RESOURSES = {};\r\n\r\n// For models with different Primary Key fields rather than 'id'.\r\nconst PK_MAPPING = {};\r\n\r\nconst FILTER_LENGTHS = {\r\n};\r\n\r\nconst GET_MANY_FILTER = {};\r\n\r\n/**\r\n * @param {String} apiUrl The base API url\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} { url, options } The HTTP request parameters\r\n */\r\nexport const convertRESTRequestToHTTP = ({ apiUrl, type, resource, params }) => {\r\n    let url = '';\r\n    const options = {};\r\n    let query = {};\r\n            console.log(\"[params, type, resource]\");\r\n            console.log(params);\r\n            console.log(type);\r\n            console.log(resource);\r\n\r\n    switch (type) {\r\n        case GET_MANY_REFERENCE: {\r\n            query[params.target] = params.id;\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_LIST: {\r\n            if (params.pagination) {\r\n                let { page, perPage } = params.pagination;\r\n                query['limit'] = perPage || 100; // Maximum limit if perPage = 0.\r\n                query['offset'] = page ? (page - 1) * query['limit'] : 0;\r\n            }\r\n\r\n            if (params.sort) {\r\n                const { field, order } = params.sort;\r\n                query['order_by'] = `${order === 'DESC' ? '-' : ''}` + field;\r\n            }\r\n\r\n            if (params.filter) {\r\n                let filterLengths = FILTER_LENGTHS[resource];\r\n                Object.keys(params.filter).forEach(key => {\r\n                    let filter =\r\n                        params.filter[key] instanceof Object\r\n                            ? JSON.stringify(params.filter[key])\r\n                            : params.filter[key];\r\n                    if (filterLengths && filterLengths[key]) {\r\n                        const minLength = filterLengths[key].min;\r\n                        const maxLength = filterLengths[key].max;\r\n                        if (!minLength || filter.length >= minLength) {\r\n                            filter =\r\n                                maxLength && filter.length > maxLength\r\n                                    ? filter.slice(0, maxLength)\r\n                                    : filter;\r\n                            query[key] = filter;\r\n                        }\r\n                    } else {\r\n                        query[key] = filter;\r\n                    }\r\n                    if (!query[key] || (query[key] && query[key].length === 0)) {\r\n                        delete query[key];\r\n                    }\r\n                });\r\n            }\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_ONE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            break;\r\n        case GET_MANY: {\r\n            const filterName = GET_MANY_FILTER[resource];\r\n            const query = filterName\r\n                ? { [filterName]: params.ids.join(',') }\r\n                : { ids: params.ids.join(',') };\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case UPDATE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'PUT';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case CREATE:\r\n            url = `${apiUrl}/${resource}`;\r\n            options.method = 'POST';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case DELETE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'DELETE';\r\n            break;\r\n        default:\r\n            throw new Error(`Unsupported fetch action type ${type}`);\r\n    }\r\n    return { url, options };\r\n};\r\n\r\n/**\r\n * @param {Object} response HTTP response from fetch()\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} REST response\r\n */\r\nconst convertHTTPResponseToREST = ({ response, type, resource, params }) => {\r\n    const { headers, json } = response;\r\n    let keys = COMPOSITE_KEY_RESOURSES[resource];\r\n    let pk = PK_MAPPING[resource];\r\n    let data = [];\r\n\r\n    switch (type) {\r\n        // Total required by AOR for all list operations\r\n        case GET_LIST:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case GET_MANY_REFERENCE:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case CREATE:\r\n            return {\r\n                data: {\r\n                    ...params.data,\r\n                    id: keys ? keys.map(key => json[key]).join('/') : pk ? json[pk] : json.id\r\n                }\r\n            };\r\n        default:\r\n            return { data: json ? json : {} };\r\n    }\r\n};\r\n\r\n/**\r\n * Maps React Admin queries to a Swagger Spec\r\n * @example\r\n * GET_LIST     => GET http://my.api.url/users?limit=10&offset=30&ordering=-name\r\n * GET_ONE      => GET http://my.api.url/users/123/ or GET http://my.api.url/users/123/321/ in the case of a composite key\r\n * GET_MANY     => GET http://my.api.url/users/1/ GET http://my.api.url/users/2/\r\n * UPDATE       => PUT http://my.api.url/users/123/ or PUT http://my.api.url/users/123/321/ in the case of a composite key\r\n * CREATE       => POST http://my.api.url/users/\r\n * DELETE       => DELETE http://my.api.url/users/123/ or DELETE http://my.api.url/users/123/321/ in the case of a composite key\r\n */\r\nconst dataProvider = (apiUrl, httpClient = fetchUtils.fetchJson) => {\r\n    /**\r\n     * @param {string} type Request type, e.g GET_LIST\r\n     * @param {string} resource Resource name, e.g. \"users\"\r\n     * @param {Object} payload Request parameters. Depends on the request type\r\n     * @returns {Promise} the Promise for a REST response\r\n     */\r\n\r\n    return async (type, resource, params) => {\r\n        const { url, options } = convertRESTRequestToHTTP({\r\n            apiUrl,\r\n            type,\r\n            resource,\r\n            params\r\n        });\r\n\r\n        return httpClient(url, options).then(response =>\r\n            convertHTTPResponseToREST({\r\n                response,\r\n                type,\r\n                resource,\r\n                params\r\n            })\r\n        );\r\n    };\r\n};\r\n\r\nexport const httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const id_token = localStorage.getItem('token');\r\n    options.headers.set('Authorization', `Bearer ${id_token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\n// export default dataProvider('rest_url', httpClient);\r\nexport default dataProvider('http://localhost:8081/api/v1/curd', httpClient);\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Menu.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MenuItemLink, getResources, Responsive } from \"react-admin\";\r\nimport ListIcon from \"@material-ui/icons/ViewList\";\r\nimport { titleCase } from \"./utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport SportsVolleyballIcon from '@material-ui/icons/SportsVolleyball';\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\n\r\nconst ICONS = {\r\n  books: <MenuBookIcon style={{ marginRight: 1 }} />,\r\n  events: <EventIcon style={{ marginRight: 1 }} />,\r\n  courses: <GestureIcon style={{ marginRight: 1 }} />,\r\n  tasks: <SportsSoccerIcon style={{ marginRight: 1 }} />,\r\n  minitasks: <SportsVolleyballIcon style={{ marginRight: 1 }} />,\r\n  profile: <ListIcon style={{ marginRight: 1 }} />,\r\n  certs: <CardGiftcardIcon style={{ marginRight: 1 }} />,\r\n  users: <SupervisorAccountIcon style={{ marginRight: 1 }} />,\r\n  fights: <EmojiEventsIcon style={{ marginRight: 1 }} />\r\n};\r\n\r\nconst Menu = ({ resources, onMenuClick, logout }) => (\r\n  <div>\r\n    <Link to={`/profile`} style={{ textDecoration: \"none\" }}>\r\n      <MenuItem>\r\n        <ArrowBackIcon style={{ fontSize: 23, color: \"#1f74be\" }} />\r\n        <p style={{ fontSize: 14, marginLeft: \"1.2em\", color: \"#1f74be\" }}>\r\n          Quay lại trang chủ\r\n        </p>\r\n      </MenuItem>\r\n\r\n    </Link>\r\n    {/* <MenuItemLink\r\n              key=\"goHome\"\r\n              to={`/profile`}\r\n              primaryText={`Quay lại trang chủ`}\r\n              onClick={onMenuClick}\r\n              leftIcon={<ArrowBackIcon/>}\r\n              className=\"MenuItemLinkBack\"\r\n            /> */}\r\n    {resources\r\n      ? resources.map(resource =>\r\n        resource.hasList ? (\r\n          <MenuItemLink\r\n            key={resource.name}\r\n            to={`/${resource.name}`}\r\n            primaryText={`${changeIDToName(titleCase(resource.name))}`}\r\n            onClick={onMenuClick}\r\n            leftIcon={ICONS[resource.name]}\r\n          />\r\n        ) : null\r\n      )\r\n      : \"\"}\r\n    <Responsive small={logout} medium={null} />\r\n  </div>\r\n);\r\n\r\nconst changeIDToName = name => {\r\n  var title = \"\";\r\n  switch (name) {\r\n    case \"Books\":\r\n      title = \"Sách lập trình\";\r\n      break;\r\n    case \"Events\":\r\n      title = \"Sự kiện\";\r\n      break;\r\n    case \"Courses\":\r\n      title = \"Chủ đề\";\r\n      break;\r\n    case \"Tasks\":\r\n      title = \"Chủ đề con\";\r\n      break;\r\n    case \"Minitasks\":\r\n      title = \"Bài học\";\r\n      break;\r\n    case \"Certs\":\r\n      title = \"Chứng chỉ\";\r\n      break;\r\n    case \"Users\":\r\n      title = \"Người dùng\";\r\n      break;\r\n    case \"Fights\":\r\n      title = \"Thi đấu\"\r\n    break;\r\n    default:\r\n      title = name;\r\n      break;\r\n  }\r\n\r\n  return title;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: getResources(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n/** End of Generated Menu.js Code **/\r\n","/**\r\n * Generated utils.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\n\r\n\r\n// Produce a title case string\r\nexport const titleCase = string => {\r\n    return string\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map(word => {\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        })\r\n        .join(' ');\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated MyLayout.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { Layout } from 'react-admin';\r\nimport Menu from './Menu';\r\n\r\nconst MyLayout = (props) => <Layout\r\n    {...props}\r\n    menu={Menu}\r\n/>;\r\n\r\nexport default MyLayout;\r\n/** End of Generated MyLayout.js Code **/","/**\r\n * Generated theme.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n//import { pink } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary:  {\r\n            main: '#1f74be',\r\n          },\r\n        error: red\r\n    }\r\n});\r\n\r\nexport const styles = {\r\n    dateTimeInput: {\r\n        marginTop: 15,\r\n        marginBottom: 15\r\n    }\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelBookEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelBookEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelBookFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelBookFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelBook.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  ImageField,\r\n  EditButton,\r\n  DeleteButton\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelBookEditToolbar from \"../customActions/ModelBookEditToolbar\";\r\n\r\nimport ModelBookFilter from \"../filters/ModelBookFilter\";\r\n\r\nexport const ModelBookList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Sách lập trình\"\r\n    filters={<ModelBookFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"title\" sortable={false} />\r\n      <ImageField className=\"thumbNailView\" source=\"image\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelBookCreate = props => (\r\n  <Create {...props} title=\"Tạo Sách lập trình\">\r\n    <SimpleForm redirect=\"show\">\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const ModelBookEdit = props => (\r\n  <Edit {...props} title=\"Sửa Sách lập trình\">\r\n    <SimpleForm toolbar={<ModelBookEditToolbar />}>\r\n      <TextInput resettable source=\"id\" disabled />\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCourseEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCourseEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCourseFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCourseFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelCourse.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //   BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n\r\n  ChipField,\r\n  DateField,\r\n  SelectInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelCourseEditToolbar from \"../customActions/ModelCourseEditToolbar\";\r\n\r\nimport ModelCourseFilter from \"../filters/ModelCourseFilter\";\r\n//import { Button } from \"@material-ui/core\";\r\n\r\nimport { DateTimeInput } from 'react-admin-date-inputs2';\r\n\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport const ModelCourseList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề\"\r\n    filters={<ModelCourseFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"course_name\" sortable={false} />\r\n      {/* <TextField source=\"course_desc\" sortable={false} /> */}\r\n      {/* <TextField source=\"total_minitask\" sortable={false} /> */}\r\n      <ChipField source=\"user_create\" />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"tasks\"                sortable={false}            /> */}\r\n      <TextField source=\"status\" sortable={false} />\r\n      <DateField source=\"start_time\" />\r\n      <DateField source=\"end_time\" />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nconst validateCourseCreate = (values) => {\r\n  const errors = {};\r\n  if (!values.course_name) {\r\n    errors.course_name = ['The course name is required'];\r\n  }\r\n  if (!values.background_image) {\r\n    errors.background_image = ['The background image is required'];\r\n  }\r\n  if (!values.start_time) {\r\n    errors.start_time = ['The start time is required'];\r\n  }\r\n  if (!values.end_time) {\r\n    errors.end_time = ['The end time is required'];\r\n  }\r\n  if (values.end_time - values.start_time <= 0) {\r\n    errors.end_time = ['The end time must be longer than start time']\r\n  }\r\n  return errors\r\n};\r\n\r\n\r\nclass ModelCourseCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề\">\r\n        <SimpleForm redirect=\"show\" validate={validateCourseCreate} >\r\n          <TextInput resettable source=\"course_name\" />\r\n          <TextInput resettable source=\"background_image\" />\r\n          <TextInput resettable multiline source=\"course_desc\" />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} />\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              required\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </SimpleForm>\r\n      </Create>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// create another Create for Mod permission.\r\nclass ModelCourseCreateForMod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput resettable source=\"course_name\" />\r\n          <TextInput resettable source=\"background_image\" />\r\n          <TextInput resettable multiline source=\"course_desc\" />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} />\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput resettable                source=\"id\"            /> */}\r\n          {/* <TextInput resettable                source=\"tasks\"            /> */}\r\n          {/* <TextInput resettable                source=\"timestamp\"            /> */}\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              required\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <button type=\"button\" className=\"btn btn-default\"\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n          //  onClick={this.handleDialogCourseCheck}\r\n          >Yêu cầu xét duyệt</button>\r\n\r\n        </SimpleForm>\r\n      </Create>\r\n    )\r\n  }\r\n};\r\n\r\nconst required = (message = 'Required') =>\r\n  value => value ? undefined : message;\r\n\r\nconst endDateValidation = (value, allValues) => {\r\n  if (new Date(value) - new Date(allValues.start_time) <= 0 &&\r\n    new Date(value) - new Date()) {\r\n    return 'End date must be longer than start date and current';\r\n  }\r\n}\r\n\r\nconst startDateValidation = (value, allValues) => {\r\n  if (new Date(value) - new Date() <= 0) {\r\n    return 'End date must be longer than current';\r\n  }\r\n}\r\n\r\nclass ModelCourseEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      courseTypes: [],\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"http://localhost:8081/api/v1/getCourseTypeList\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ courseTypes: res.data });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.courseTypes.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_type;\r\n      return rObj;\r\n    });\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chủ đề\">\r\n        <SimpleForm toolbar={<ModelCourseEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          <TextInput resettable source=\"course_name\" validate={[required()]} />\r\n          <TextInput resettable source=\"background_image\" validate={[required()]} />\r\n          <TextInput resettable multiline source=\"course_desc\" validate={[required()]} />\r\n          <SelectInput source=\"course_type\" choices={choicesCourse} validate={[required()]} />\r\n          <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DateTimeInput\r\n              source=\"start_time\"\r\n              label=\"Start time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              validate={[required(), startDateValidation]}\r\n            />\r\n            <DateTimeInput\r\n              source=\"end_time\"\r\n              label=\"End time\"\r\n              options={{ format: 'DD/MM/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              validate={[required(), endDateValidation]}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport { ModelCourseCreateForMod, ModelCourseCreate, ModelCourseEdit };\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelEventEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelEventEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelEventFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelEventFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelEvent.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  ImageField,\r\n  DeleteButton\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelEventEditToolbar from \"../customActions/ModelEventEditToolbar\";\r\n\r\nimport ModelEventFilter from \"../filters/ModelEventFilter\";\r\n\r\nexport const ModelEventList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Sự kiện\"\r\n    filters={<ModelEventFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"title\" sortable={false} />\r\n      <TextField source=\"link\" sortable={false} />\r\n      <ImageField className=\"thumbNailView\" source=\"image\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelEventCreate = props => (\r\n  <Create {...props} title=\"Tạo Sự kiện\">\r\n    <SimpleForm redirect=\"show\">\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"link\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const ModelEventEdit = props => (\r\n  <Edit {...props} title=\"Sửa Sự kiện\">\r\n    <SimpleForm toolbar={<ModelEventEditToolbar />}>\r\n      <TextInput resettable source=\"id\" disabled />\r\n      <TextInput resettable source=\"title\" />\r\n      <TextInput resettable source=\"link\" />\r\n      <TextInput resettable source=\"image\" />\r\n      <TextInput resettable multiline source=\"content\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n/** End of Generated Code **/\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\n\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid item xs={6} sm={6} >\r\n          <SimpleMDEReact\r\n            style={{width:\"1400px\"}}\r\n            className={\"react_mde_custom\"}\r\n            label=\"\"\r\n            value={this.props.mini_task_desc}\r\n            onChange={this.handleChange}\r\n            options={{\r\n              spellChecker: false\r\n            }}\r\n          />\r\n      </Grid>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    let template_code_format = jBeautify(template_code,{indent_size: 2});\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code_format\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\nclass ShowUnitTest extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } \r\n      \r\n      else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          } \r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          else{\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          \r\n        });\r\n        junit4 += `}`;\r\n      }\r\n\r\n    return junit4;\r\n  }\r\n  render() {\r\n    let minitask = {output_type_func : this.props.output_type_func,unit_tests:this.props.unit_tests,name_func:this.props.name_func};\r\n    let junit4 = jBeautify(this.createFileTest(minitask),{indent_size: 2});\r\n  \r\n    return (\r\n      <CodeMirror\r\n        width=\"1000px\"\r\n        value={\r\n          junit4\r\n        }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:10px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowUnitTest;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" },\r\n  { value: \"void\", label: \"Void\" },\r\n];\r\nconst optionsLevel = [\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" },\r\n]\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"easy\",\r\n      user_code: \"\",\r\n      isImportVariableOpen: false,\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0,\r\n      numbers_doing: 0, // số lượt làm tính điểm cho bài thực hành,\r\n      isShowError: false,\r\n      errContent: \"\",\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n    //   const courses = res.data;\r\n    //   const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n    //   const coursesoption = coursesFilter.map(course => {\r\n    //     return { value: course.id, label: course.course_name };\r\n    //   });\r\n    //   this.setState({\r\n    //     courses: coursesFilter,\r\n    //     coursesOption: coursesoption,\r\n    //     tasksOption: courses[0].tasks.map(task => {\r\n    //       return { value: task.id, label: task.task_name };\r\n    //     })\r\n    //   });\r\n    //   console.log(courses);\r\n    //   this.setState({\r\n    //     course_id: courses[0].id,\r\n    //     task_id: courses[0].tasks.length === 0 ? \"\" : courses[0].tasks[0].id\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // handle modal import variable\r\n  handleModalVariableOpen = () => {\r\n    this.setState({\r\n      isImportVariableOpen: !this.state.isImportVariableOpen,\r\n    })\r\n  }\r\n\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n      }(${this.state.inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      numbers_doing: parseInt(this.state.numbers_doing),\r\n      input_list: this.state.inputList\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/minitasks\", newMiniTask)\r\n      .then(function (response) {\r\n        window.location.reload();\r\n        toast(\"Tạo bài thực hành thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n      }).catch(err => {\r\n        if (err !== undefined) {\r\n          this.setState({ isShowError: true, errContent: \"Làm ơn nhập đủ thông tin\" })\r\n        }\r\n      });\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n\r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function (course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name, select_value)\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function (input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  renderTitle = (title) => {\r\n    return <Box my={1}>\r\n      <Typography style={{ fontSize: 15, fontWeight: 450 }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  handleShowError = () => {\r\n    this.setState({ isShowError: !this.state.isShowError });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { template_code, isImportVariableOpen, errContent, isShowError } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h2\">Thêm bài thực hành</Typography>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isShowError}\r\n            onClose={this.handleShowError}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                width: \"300px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: '8px'\r\n              }}\r\n            >\r\n              <Box p={2}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">{errContent}</Typography>\r\n                </Box>\r\n                <Box>\r\n                  {errContent}\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isImportVariableOpen}\r\n            onClose={this.handleModalVariableOpen}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={isImportVariableOpen}>\r\n\r\n              <div\r\n                style={{\r\n                  maxHeight: \"50vh\",\r\n                  height: \"1500px\",\r\n                  width: \"1000px\",\r\n                  position: \"relative\",\r\n                  overflowY: \"scroll\",\r\n                  overflowX: \"hidden\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <Box p={4}>\r\n                  <Box display=\"flex\">\r\n                    <Box>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                        className={classes.button}\r\n                        onClick={e => this.addInput(e)}\r\n                      >\r\n                        Thêm tham số\r\n                    </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                      <Typography variant=\"overline\">Số lượng: {this.state.inputList.length}</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <Slide in={true} direction=\"left\">\r\n                        <div key={index}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item container xs={12} sm={5} spacing={2}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Tên tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.input_name}\r\n                                  onChange={e =>\r\n                                    this.handleListInputNameChange(e, index)\r\n                                  } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} sm={5} spacing={1}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Kiểu tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <Select\r\n                                  options={options}\r\n                                  //defaultValue={options[0]}\r\n                                  onChange={select_value =>\r\n                                    this.handleListInputTypeChange(\r\n                                      select_value,\r\n                                      index\r\n                                    )\r\n                                  } // higher order function\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              container\r\n                              xs={12}\r\n                              sm={2}\r\n                              style={{ alignItems: \"flex-end\" }}\r\n                              justify=\"center\"\r\n                            >\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.button}\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    background: \"#ca0000\"\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.handleRemoveInput(index);\r\n                                  }}\r\n                                >\r\n                                  xóa\r\n                              </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                        </div>\r\n                      </Slide>\r\n                    );\r\n                  })}\r\n                </Box>{\" \"}\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ padding: \"8px\" }}>\r\n              {/* {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      //defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                      value={this.state.courses_option_select}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      //defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                      value={this.state.task_option_select}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên bài thực hành:\")}\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên hàm:\")}\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name_func}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Sổ đậu:\")}\r\n                  <input\r\n                    name=\"code_point\"\r\n                    type=\"number\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.code_point}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Độ khó:\")}\r\n                  <Select\r\n                    styles={selectStyles}\r\n                    options={optionsLevel}\r\n                    value={this.state.level_ref_select}\r\n                    defaultValue={optionsLevel[0]}\r\n                    ref={this.level_ref}\r\n                    name=\"level\"\r\n                    onChange={this.onLevelSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  {this.renderTitle(\"Kiểu trả về:\")}\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    value={this.state.output_type_func_select}\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  >\r\n                    {/* {options.map(val => (\r\n                      <MenuItem value={val.value}>{val.label}</MenuItem>\r\n                    ))} */}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box my={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                      className={classes.button}\r\n                      onClick={this.handleModalVariableOpen}\r\n                    >\r\n                      Thêm tham số\r\n                  </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\"\r\n              }}\r\n            >\r\n              {this.state.inputList.map((input, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Tên tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <input\r\n                            className=\"input-createminitask\"\r\n                            value={input.input_name}\r\n                            onChange={e =>\r\n                              this.handleListInputNameChange(e, index)\r\n                            } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Kiểu tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <Select\r\n                            options={options}\r\n                            //defaultValue={options[0]}\r\n                            onChange={select_value =>\r\n                              this.handleListInputTypeChange(\r\n                                select_value,\r\n                                index\r\n                              )\r\n                            } // higher order function\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={12}\r\n                        sm={2}\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                      >\r\n                        <Grid item>\r\n                          <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#ca0000\"\r\n                            }}\r\n                            onClick={() => {\r\n                              this.handleRemoveInput(index);\r\n                            }}\r\n                          >\r\n                            xóa\r\n                              </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </div> */}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n                template_code={template_code}\r\n              />\r\n            </div>\r\n            {/* <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  \r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item container xs={12} md={12}>\r\n              <Grid item xs={12} md={12}>\r\n                {this.renderTitle(\"Mô tả bài toán:\")}\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              {this.renderTitle(\"Tạo test:\")}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              md={6}\r\n              sm={6}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <Box mr={1} mt={2}>\r\n                      <div key={index0}>\r\n                        {\" \"}\r\n                        {/* Test {index0 + 1} */}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Input:\")}\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Output:\")}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{ color: \"white\", background: \"#ca0000\" }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveUnitTest(index0);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                            </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={6} sm={6}>\r\n              <Box my={2}>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                  />\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className={classes.button}\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    variant=\"contained\"\r\n                    onClick={e => this.addTest(e)}\r\n                  >\r\n                    Thêm test\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Lưu\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sm={6}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                \r\n              </Grid>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n          enableMultiContainer\r\n          containerId={\"B\"}\r\n          position={toast.POSITION.TOP_RIGHT}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst optionsLevel = [\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" }\r\n];\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 20\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\n// const getParams = pathname => {\r\n//   const minitask = matchPath(pathname, {\r\n//     path: `/profile/minitasks/:minitasksId/edit`\r\n//   });\r\n//   return (minitask && minitask.params) || {};\r\n// };\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass MinitaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0,\r\n      course: { value: \"\", label: \"\" },\r\n      task: { value: \"\", label: \"\" },\r\n      output_type_func_select: options[0],\r\n      level_ref_select: optionsLevel[0],\r\n      courses_option_select: { value: \"\", label: \"\" },\r\n      task_option_select: { value: \"\", label: \"\" },\r\n      isImportVariableOpen: false,\r\n      isShowError: false,\r\n      errContent: \"\",\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    //const currentParams = getParams(location.pathname);\r\n    // console.log(currentParams);\r\n    let minitask;\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/minitasks/${this.props.minitasksId}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        minitask = res.data;\r\n\r\n        const found = options.find(\r\n          element => element.value === minitask.output_type_func\r\n        );\r\n        const found2 = optionsLevel.find(\r\n          element => element.value === minitask.level\r\n        );\r\n\r\n        this.setState({\r\n          template_code: minitask.template_code,\r\n          unit_tests: minitask.unit_tests,\r\n          task_id: minitask.task_id,\r\n          name: minitask.mini_task_name,\r\n          name_func: minitask.name_func,\r\n\r\n          output_type_func: minitask.output_type_func,\r\n          point_unlock: minitask.point_unlock,\r\n          status: minitask.status,\r\n          vitri: minitask.vitri,\r\n          mini_task_desc: minitask.mini_task_desc,\r\n          level: minitask.level,\r\n          code_point: minitask.code_point,\r\n          inputList: minitask.input_list || [],\r\n\r\n          output_type_func_select: found,\r\n          level_ref_select: found2\r\n        });\r\n      });\r\n    // axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n    //   const courses = res.data;\r\n    //   const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n    //   const coursesoption = coursesFilter.map(course => {\r\n    //     return { value: course.id, label: course.course_name };\r\n    //   });\r\n    //   // const tasksoption = courses[0].tasks.map(task => {\r\n    //   //   return { value: task.id, label: task.task_name };\r\n    //   // });\r\n    //   const tasksfulloption = [];\r\n\r\n    //   /* eslint-disable array-callback-return */\r\n\r\n    //   for (let i = 0; i < courses.length; i++) {\r\n    //     courses[i].tasks.map(tas => {\r\n    //       tasksfulloption.push({\r\n    //         value: tas.id,\r\n    //         label: tas.task_name,\r\n    //         courses: { value: courses[i].id, label: courses[i].course_name, },\r\n    //         tasksoption: courses[i].tasks.map((task) => {\r\n    //           return { value: task.id, label: task.task_name };\r\n    //         }),\r\n    //       });\r\n    //     });\r\n    //   }\r\n    //   /* eslint-enable array-callback-return */\r\n\r\n    //   // courses.map(cou => {\r\n    //   //   cou.tasks.map(tas => {\r\n    //   //     tasksfulloption.push({ value: tas.id, label: tas.task_name });\r\n    //   //   });\r\n    //   // });\r\n\r\n    //   // if (minitask !== null) {\r\n    //   // const foundCourse = coursesoption.find(\r\n    //   //   element => element.value === minitask.course_id\r\n    //   // );\r\n    //   const foundTask = tasksfulloption.find(\r\n    //     element => element.value === minitask.task_id\r\n    //   );\r\n    //   // }\r\n\r\n    //   console.log(tasksfulloption);\r\n    //   console.log(foundTask);\r\n\r\n    //   this.setState({\r\n    //     courses: coursesFilter,\r\n    //     coursesOption: coursesoption,\r\n    //     // tasksOption: foundTask.tasksoption,\r\n    //     // courses_option_select: foundTask.courses,\r\n    //     task_option_select: foundTask\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  // handle modal import variable\r\n  handleModalVariableOpen = () => {\r\n    this.setState({\r\n      isImportVariableOpen: !this.state.isImportVariableOpen,\r\n    })\r\n  }\r\n\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    //  let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    // const currentParams = getParams(location.pathname);\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n      }(${this.state.inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      input_list: this.state.inputList\r\n    };\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/minitasks/${this.props.minitasksId}`,\r\n        newMiniTask\r\n      )\r\n      .then(function (response) {\r\n        toast(\"Sửa bài thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n      }).catch(err => {\r\n        if (err !== undefined) {\r\n          this.setState({ isShowError: true, errContent: \"Làm ơn nhập đủ thông tin\" })\r\n        }\r\n      });;\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function (course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id,\r\n      courses_option_select: select_value,\r\n\r\n    });\r\n\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value,\r\n      task_option_select: select_value\r\n\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name, select_value);\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function (input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  renderTitle = (title) => {\r\n    return <Box my={1}>\r\n      <Typography style={{ fontSize: 15, fontWeight: 450 }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  handleShowError = () => {\r\n    this.setState({ isShowError: !this.state.isShowError });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { template_code, isImportVariableOpen, errContent, isShowError } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h2\">Sửa bài thực hành</Typography>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isShowError}\r\n            onClose={this.handleShowError}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                width: \"300px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: '8px'\r\n              }}\r\n            >\r\n              <Box p={2}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">{errContent}</Typography>\r\n                </Box>\r\n                <Box>\r\n                  {errContent}\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          {/* <button type=\"button\" onClick={this.handleModalVariableOpen}>\r\n            react-transition-group\r\n          </button> */}\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              borderRadius: '8px'\r\n            }}\r\n            open={isImportVariableOpen}\r\n            onClose={this.handleModalVariableOpen}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={isImportVariableOpen}>\r\n\r\n              <div\r\n                style={{\r\n                  maxHeight: \"50vh\",\r\n                  height: \"1500px\",\r\n                  width: \"1000px\",\r\n                  position: \"relative\",\r\n                  overflowY: \"scroll\",\r\n                  overflowX: \"hidden\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <Box p={4}>\r\n                  <Box display=\"flex\">\r\n                    <Box>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                        className={classes.button}\r\n                        onClick={e => this.addInput(e)}\r\n                      >\r\n                        Thêm tham số\r\n                    </Button>\r\n                    </Box>\r\n                    <Box mx={2}>\r\n                      <Typography variant=\"overline\">Số lượng: {this.state.inputList.length}</Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <Slide in={true} direction=\"left\">\r\n                        <div key={index}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item container xs={12} sm={5} spacing={2}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Tên tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.input_name}\r\n                                  onChange={e =>\r\n                                    this.handleListInputNameChange(e, index)\r\n                                  } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item container xs={12} sm={5} spacing={1}>\r\n                              <Grid item xs={12} sm={12}>\r\n                                {this.renderTitle(\"Kiểu tham số:\")}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={12}>\r\n                                <Select\r\n                                  options={options}\r\n                                  //defaultValue={options[0]}\r\n                                  onChange={select_value =>\r\n                                    this.handleListInputTypeChange(\r\n                                      select_value,\r\n                                      index\r\n                                    )\r\n                                  } // higher order function\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              container\r\n                              xs={12}\r\n                              sm={2}\r\n                              style={{ alignItems: \"flex-end\" }}\r\n                              justify=\"center\"\r\n                            >\r\n                              <Grid item>\r\n                                <Button\r\n                                  className={classes.button}\r\n                                  variant=\"contained\"\r\n                                  style={{\r\n                                    color: \"white\",\r\n                                    background: \"#ca0000\"\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    this.handleRemoveInput(index);\r\n                                  }}\r\n                                >\r\n                                  xóa\r\n                              </Button>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                        </div>\r\n                      </Slide>\r\n                    );\r\n                  })}\r\n                </Box>{\" \"}\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ padding: \"8px\" }}>\r\n              {/* {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      //defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                      value={this.state.courses_option_select}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      //defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                      value={this.state.task_option_select}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên bài thực hành:\")}\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Tên hàm:\")}\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name_func}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Sổ đậu:\")}\r\n                  <input\r\n                    name=\"code_point\"\r\n                    type=\"number\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.code_point}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  {this.renderTitle(\"Độ khó:\")}\r\n                  <Select\r\n                    styles={selectStyles}\r\n                    options={optionsLevel}\r\n                    value={this.state.level_ref_select}\r\n                    defaultValue={optionsLevel[0]}\r\n                    ref={this.level_ref}\r\n                    name=\"level\"\r\n                    onChange={this.onLevelSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  {this.renderTitle(\"Kiểu trả về:\")}\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    value={this.state.output_type_func_select}\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  >\r\n                    {/* {options.map(val => (\r\n                      <MenuItem value={val.value}>{val.label}</MenuItem>\r\n                    ))} */}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box my={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                      className={classes.button}\r\n                      onClick={this.handleModalVariableOpen}\r\n                    >\r\n                      Thêm tham số\r\n                  </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <div\r\n              style={{\r\n                maxHeight: \"50vh\",\r\n                height: \"200px\",\r\n                position: \"relative\",\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\"\r\n              }}\r\n            >\r\n              {this.state.inputList.map((input, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Tên tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <input\r\n                            className=\"input-createminitask\"\r\n                            value={input.input_name}\r\n                            onChange={e =>\r\n                              this.handleListInputNameChange(e, index)\r\n                            } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item container xs={12} sm={5} spacing={1}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          {this.renderTitle(\"Kiểu tham số:\")}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <Select\r\n                            options={options}\r\n                            //defaultValue={options[0]}\r\n                            onChange={select_value =>\r\n                              this.handleListInputTypeChange(\r\n                                select_value,\r\n                                index\r\n                              )\r\n                            } // higher order function\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={12}\r\n                        sm={2}\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                      >\r\n                        <Grid item>\r\n                          <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              color: \"white\",\r\n                              background: \"#ca0000\"\r\n                            }}\r\n                            onClick={() => {\r\n                              this.handleRemoveInput(index);\r\n                            }}\r\n                          >\r\n                            xóa\r\n                              </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                  </div>\r\n                );\r\n              })}{\" \"}\r\n            </div> */}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n                template_code={template_code}\r\n              />\r\n            </div>\r\n            {/* <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  \r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid> */}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item container xs={12} md={12}>\r\n              <Grid item xs={12} md={12}>\r\n                {this.renderTitle(\"Mô tả bài toán:\")}\r\n              </Grid>\r\n              <Grid item xs={12} md={12}>\r\n                <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              {this.renderTitle(\"Tạo test:\")}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              md={6}\r\n              sm={6}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <Box mr={1} mt={2}>\r\n                      <div key={index0}>\r\n                        {\" \"}\r\n                        {/* Test {index0 + 1} */}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Input:\")}\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              {this.renderTitle(\"Output:\")}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{ color: \"white\", background: \"#ca0000\" }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveUnitTest(index0);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                            </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={6} sm={6}>\r\n              <Box my={2}>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                  />\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className={classes.button}\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    variant=\"contained\"\r\n                    onClick={e => this.addTest(e)}\r\n                  >\r\n                    Thêm test\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n              <Box>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Thay đổi\r\n                </Button>\r\n                </div>\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              sm={6}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                \r\n              </Grid>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n          enableMultiContainer\r\n          containerId={\"B\"}\r\n          position={toast.POSITION.TOP_RIGHT}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MinitaskEdit);\r\n","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelMinitaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelMinitaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelMinitask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\nDatagrid, DeleteButton,\r\n  //  BooleanField,\r\n  EditButton, List, NumberField, TextField\r\n} from \"react-admin\";\r\nimport CreateMiniTaskBody from \"../../../profilePage/content/minitask/CreateMiniTaskBody\";\r\nimport MinitaskEdit from \"../../../profilePage/content/minitask/MinitaskEdit\";\r\n//import { permitted } from '../utils';\r\n//import ModelMinitaskEditToolbar from '../customActions/ModelMinitaskEditToolbar';\r\nimport ModelMinitaskFilter from \"../filters/ModelMinitaskFilter\";\r\n\r\n//import { getLocationHref } from '@sentry/utils';\r\n\r\nexport const ModelMinitaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Bài học\"\r\n    filters={<ModelMinitaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"mini_task_name\" sortable={false} />\r\n      <NumberField source=\"code_point\" sortable={false} />\r\n      <TextField source=\"output_type_func\" sortable={false} />\r\n      <TextField source=\"template_code\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelMinitaskCreate = props => (\r\n  <CreateMiniTaskBody/>\r\n  // <Create {...props} title=\"ModelMinitask Create\">\r\n  //   <SimpleForm redirect=\"show\">\r\n  //     <TextInput source=\"avatar\" />\r\n  //     <NumberInput source=\"code_point\" />\r\n  //     <TextInput source=\"level\" />\r\n  //     <TextInput source=\"mini_task_desc\" />\r\n  //     <TextInput source=\"mini_task_name\" />\r\n  //     <TextInput source=\"name_func\" />\r\n  //     <TextInput source=\"output_type_func\" />\r\n  //     <NumberInput source=\"point_unlock\" />\r\n  //     <TextInput source=\"status\" />\r\n  //     <TextInput source=\"task_id\" />\r\n  //     <TextInput source=\"template_code\" />\r\n  //     {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //     <TextInput source=\"unit_tests\" />\r\n  //     <BooleanInput source=\"vitri\" />\r\n  //   </SimpleForm>\r\n  // </Create>\r\n);\r\n\r\nexport const ModelMinitaskEdit = props => {\r\n  // console.log(props.id);\r\n  //window.location.replace(`/profile/minitasks/${props.id}/edit`)\r\n  return <MinitaskEdit minitasksId={props.id} />;\r\n  // return (\r\n  // <Edit  {...props} title=\"ModelMinitask Edit\">\r\n  //     <SimpleForm toolbar={<ModelMinitaskEditToolbar />}>\r\n  //         <TextInput                source=\"avatar\"            />\r\n  //         <NumberInput                source=\"code_point\"            />\r\n  //         {/* <BooleanInput                source=\"del\"            /> */}\r\n  //         <TextInput                source=\"id\"            />\r\n  //         <TextInput                source=\"level\"            />\r\n  //         <TextInput                source=\"mini_task_desc\"            />\r\n  //         <TextInput                source=\"mini_task_name\"            />\r\n  //         <TextInput                source=\"name_func\"            />\r\n  //         <TextInput                source=\"output_type_func\"            />\r\n  //         <NumberInput                source=\"point_unlock\"            />\r\n  //         <TextInput                source=\"status\"            />\r\n  //         <TextInput                source=\"task_id\"            />\r\n  //         <TextInput                source=\"template_code\"            />\r\n  //         {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //         <TextInput                source=\"unit_tests\"            />\r\n  //         <BooleanInput                source=\"vitri\"            />\r\n  //     </SimpleForm></Edit>);\r\n};\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelTaskEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelTaskEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelTaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelTaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelTask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelTaskEditToolbar from \"../customActions/ModelTaskEditToolbar\";\r\n\r\nimport ModelTaskFilter from \"../filters/ModelTaskFilter\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nexport const ModelTaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề con\"\r\n    filters={<ModelTaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"task_name\" sortable={false} />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <TextField                source=\"course_id\"                sortable={false}            /> */}\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"minitasks\"                sortable={false}            /> */}\r\n      {/* <TextField                source=\"timestamp\"                sortable={false}            /> */}\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nclass ModelTaskCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      console.log(res.data);\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề con\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" />\r\n          {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n              <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n            )}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelTaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true,\r\n      minitaskBank: [],\r\n      open: false,\r\n      minitaskDesc: \"\",\r\n      fontSize: \"\",\r\n      minitaskListFromBank: [],\r\n      errorMessage: \"\",\r\n      openErr: false,\r\n      task_minitask: [],\r\n      temp_task_minitask: [],\r\n      sortByLevel: 40,\r\n      tempMinitaskList: [],\r\n      sliderValue: [0, 200],\r\n      isOpenMessage: false,\r\n      importedMinitask: [],\r\n      task: {},\r\n      tasks: [],\r\n      isLoadingImportTask: false,\r\n    };\r\n\r\n    this.getMinitaskFromBank = this.getMinitaskFromBank.bind(this);\r\n    this.removeMinitask = this.removeMinitask.bind(this);\r\n    this.isDuplicateMinitask = this.isDuplicateMinitask.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get(`http://localhost:8081/api/v1/auth/tasks/${this.props.id}`).then(res => {\r\n      console.log(res.data);\r\n      this.setState({ task: res.data })\r\n    });\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n    axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n      this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n    });\r\n    axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n      this.setState({ task_minitask: res.data, temp_task_minitask: res.data });\r\n    });\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/auth/courses/${this.state.task.course_id}/tasks`\r\n      )\r\n      .then(res => {\r\n        const tasks = res.data;\r\n        let tasks_reverse = tasks.reverse();\r\n        this.setState({ tasks: tasks_reverse });\r\n      });\r\n  }\r\n\r\n  getMinitaskDesc = (id) => {\r\n    axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n      console.log(res.data.mini_task_desc);\r\n      this.setState({\r\n        minitaskDesc: res.data.mini_task_desc,\r\n        open: true\r\n      });\r\n    })\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  closeModalError() {\r\n    this.setState({\r\n      openErr: false\r\n    });\r\n  }\r\n\r\n  isDuplicateMinitask(id) {\r\n    for (var i = 0; i < this.state.temp_task_minitask.length; i++) {\r\n      if (this.state.temp_task_minitask[i].id === id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkDuplicateMinitask = (minitask_id) => {\r\n    const task_list = this.state.tasks;\r\n    for (var i = 0; i < task_list.length; i++) {\r\n      for (var j = 0; j < task_list[i].minitasks.length; j++) {\r\n        if (task_list[i].minitasks[j].id === minitask_id) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getMinitaskFromBank(minitask) {\r\n    if (this.isDuplicateMinitask(minitask.id) &&\r\n      this.checkDuplicateMinitask(minitask.id)) {\r\n      const temp_task_minitask = this.state.temp_task_minitask;\r\n      minitask[\"isNew\"] = true;\r\n      temp_task_minitask.push(minitask);\r\n      this.setState({\r\n        temp_task_minitask\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        errorMessage: \"This minitask already exists\",\r\n        openErr: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeMinitask(id) {\r\n    const temp_task_minitask = this.state.temp_task_minitask;\r\n    var i = -1;\r\n\r\n    temp_task_minitask.forEach((minitask, index) => {\r\n      if (id.isNew === true) {\r\n        if (minitask.id === id.id) {\r\n          console.log(minitask.id);\r\n          i = index;\r\n        }\r\n      }\r\n      else if (id.isNew === undefined && id.id === minitask.id) {\r\n        this.setState({ isLoadingImportTask: true });\r\n        axios.delete(`http://localhost:8081/api/v1/curd/task_minitask/${this.props.id}/${id.id}/${this.state.task.course_id}`).then(res => {\r\n          axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n            this.setState({ isLoadingImportTask: false });\r\n            axios\r\n              .get(\r\n                `http://localhost:8081/api/v1/auth/courses/${this.state.task.course_id}/tasks`\r\n              )\r\n              .then(res => {\r\n                const tasks = res.data;\r\n                let tasks_reverse = tasks.reverse();\r\n                this.setState({ tasks: tasks_reverse });\r\n              });\r\n            this.setState({\r\n              task_minitask: res.data,\r\n              temp_task_minitask: res.data,\r\n              errorMessage: \"Delete Successfully\",\r\n              openErr: true,\r\n            });\r\n          });\r\n        }).catch(err => {\r\n          console.log(err);\r\n          // axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n          //   console.log(res.data);\r\n          //   this.setState({\r\n          //     task_minitask: res.data,\r\n          //     temp_task_minitask: res.data,\r\n          //     errorMessage: \"Delete Successfully\",\r\n          //     openErr: true\r\n          //   });\r\n          // });\r\n        });\r\n      }\r\n    });\r\n    console.log(i);\r\n    if (i !== -1) {\r\n      temp_task_minitask.splice(i, 1);\r\n      this.setState({ temp_task_minitask });\r\n    }\r\n  }\r\n\r\n  renderLevelMinitaskChip(minitask) {\r\n    // alert(minitask);\r\n    if (minitask === \"easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Easy\"}\r\n        />\r\n      );\r\n    } else if (minitask === \"medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Medium\"}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#CB3837\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={\"Hard\"}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    if (keyword === \"\") {\r\n      axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n      });\r\n    }\r\n  }\r\n\r\n  checkFilterCondition = (minitask, sortByLevel) => {\r\n    const code_point_Range = this.state.sliderValue;\r\n    if (sortByLevel === \"all\") {\r\n      if (minitask.code_point >= code_point_Range[0] &&\r\n        minitask.code_point <= code_point_Range[1]) {\r\n        return true;\r\n      }\r\n    }\r\n    else if (minitask.level === sortByLevel &&\r\n      minitask.code_point >= code_point_Range[0] &&\r\n      minitask.code_point <= code_point_Range[1]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onChangeSort = (event) => {\r\n    this.setState({\r\n      tempMinitaskList: []\r\n    }, () => {\r\n      if (event.target.value === 10) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 20) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 30) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n      else if (event.target.value === 40) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList,\r\n          sortByLevel: event.target.value\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeSlider = (event, value) => {\r\n    this.setState({\r\n      sliderValue: value,\r\n    }, () => {\r\n      const level = this.state.sortByLevel;\r\n      if (level === 10) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 20) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 30) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n      else if (level === 40) {\r\n        const listFilter = this.state.minitaskBank;\r\n        const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n        this.setState({\r\n          tempMinitaskList: filterList\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  saveMinitaskList = () => {\r\n    const minitaskList = this.state.task_minitask;\r\n    minitaskList.forEach(e => {\r\n      if (e.isNew) {\r\n        var obj = {};\r\n        obj[\"task_id\"] = this.props.id;\r\n        obj[\"mini_task_id\"] = e.id\r\n        axios.post(\"http://localhost:8081/createTaskMinTask\", obj).then(res => {\r\n          this.setState({ isLoadingImportTask: true });\r\n          axios.get(`http://localhost:8081/api/v1/getMinitasksByTaskID/${this.props.id}`).then(res => {\r\n            this.setState({\r\n              task_minitask: res.data,\r\n              temp_task_minitask: res.data,\r\n              errorMessage: \"Import Successfully\",\r\n              openErr: true,\r\n              isLoadingImportTask: false,\r\n            });\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid xs={4} item>\r\n                <Edit {...this.props} title=\"Sửa Chủ đề con\">\r\n                  <SimpleForm toolbar={<ModelTaskEditToolbar />}>\r\n                    <TextInput resettable source=\"id\" disabled />\r\n                    <TextInput source=\"task_name\" />\r\n                    <TextInput source=\"background_image\" />\r\n                    {this.state.isLoading ? (\r\n                      <Skeleton />\r\n                    ) : (\r\n                        <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n                      )}\r\n                  </SimpleForm>\r\n                </Edit>\r\n              </Grid>\r\n              <Grid xs={8} item>\r\n                <Paper >\r\n                  <Box height={375} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                    <Box display=\"flex\">\r\n                      <Box p={1} flexGrow={1}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                          Task's Minitask ({this.state.task_minitask.length})\r\n                      </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        {this.state.temp_task_minitask.length > 0 ?\r\n                          <Button variant=\"contained\" color=\"#b39ddb\" onClick={this.saveMinitaskList}>Import</Button> :\r\n                          \"\"\r\n                        }\r\n                      </Box>\r\n                    </Box>\r\n                    {this.state.temp_task_minitask.length > 0 ?\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '300px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow style={{\r\n                                backgroundColor: \"#ffred5f5\",\r\n                                height: \"5px\"\r\n                              }}>\r\n                                <TableCell>Minitask name</TableCell>\r\n                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                <TableCell align=\"right\">Code point</TableCell>\r\n                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                <TableCell align=\"right\">Level</TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.temp_task_minitask.map(row => (\r\n                                <Silde in={true} direction=\"up\">\r\n                                  <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {row.mini_task_name}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                    <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                    {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                    <TableCell align=\"right\">\r\n                                      <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                        <div style={{ marginLeft: 10 }}>\r\n                                          {this.renderLevelMinitaskChip(row.level)}\r\n                                        </div>\r\n                                      </Tooltip>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Remove</Button>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </Silde>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                      :\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        There are no minitask.\r\n                    </Typography>}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={3}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={2}>\r\n                <Grid xs={12} item>\r\n                  <Paper >\r\n                    <Box height={470} bgcolor=\"#ede7f6\" color=\"black\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                      <Typography variant=\"h5\" color=\"black\" gutterBottom>\r\n                        Minitask bank ({this.state.tempMinitaskList.length})\r\n                      </Typography>\r\n                      <Box my={1}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={2}>\r\n                              <Grid xs={2} item>\r\n                                <Paper component=\"form\">\r\n                                  <IconButton aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                  </IconButton>\r\n                                  <InputBase\r\n                                    placeholder=\"Search\"\r\n                                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                                    onChange={this.onChangeSearch}\r\n                                  />\r\n                                  <Divider orientation=\"vertical\" />\r\n                                </Paper>\r\n                              </Grid>\r\n                              <Grid xs={1} bgcolor=\"white\" item>\r\n                                <FormControl fullWidth={true}>\r\n                                  <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={this.state.sortByLevel}\r\n                                    onChange={this.onChangeSort}\r\n                                  >\r\n                                    <MenuItem value={10}>Easy</MenuItem>\r\n                                    <MenuItem value={20}>Medium</MenuItem>\r\n                                    <MenuItem value={30}>Hard</MenuItem>\r\n                                    <MenuItem value={40}>All</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid>\r\n                              <Grid xs={2} bgcolor=\"white\" item>\r\n                                <Typography id=\"range-slider\" gutterBottom>\r\n                                  Code point\r\n                              </Typography>\r\n                                <Slider\r\n                                  value={this.state.sliderValue}\r\n                                  onChange={this.onChangeSlider}\r\n                                  valueLabelDisplay=\"auto\"\r\n                                  aria-labelledby=\"range-slider\"\r\n                                  min={0}\r\n                                  max={200}\r\n                                />\r\n                              </Grid>\r\n                              <Grid xs={7} bgcolor=\"white\" item></Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Minitask name</TableCell>\r\n                                <TableCell align=\"right\">Code point</TableCell>\r\n                                <TableCell align=\"right\">Level</TableCell>\r\n                                <TableCell align=\"right\"></TableCell>\r\n                                <TableCell></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.tempMinitaskList.map(row => (\r\n                                <TableRow key={row.task_name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.mini_task_name}\r\n                                  </TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                  <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                  <TableCell align=\"right\">\r\n                                    <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                      <div style={{ marginLeft: 10 }}>\r\n                                        {/* {row.level} */}\r\n                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                      </div>\r\n                                    </Tooltip>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Button\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      startIcon={<ArrowUpwardIcon />}\r\n                                      aria-label=\"move selected right\"\r\n                                      onClick={() => this.getMinitaskFromBank(row)}\r\n                                    >\r\n                                      {/* &lt; */}\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n            <Box p={2}>\r\n              <MDReactComponent text={this.state.minitaskDesc} />\r\n            </Box>\r\n          </Modal>\r\n          <Slide in={this.state.openErr} direction=\"up\">\r\n            <Modal visible={this.state.openErr} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n              <Box p={2}>\r\n                <Typography variant=\"h5\" color=\"error\" gutterBottom>\r\n                  Thông báo\r\n                </Typography>\r\n                <Box my={3}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {this.state.errorMessage}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Modal>\r\n          </Slide>\r\n        </React.Fragment>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelTaskCreate, ModelTaskEdit };\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCertEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCertEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCertFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCertFilter;\r\n/** End of Generated Code **/","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst ReviewField = ({ source, record = {} }) => {\r\n  const [reviewStatus, setReviewStatus] = useState(record[source]);\r\n\r\n  if (reviewStatus !== \"Peding\") {\r\n    if (record[source] === \"Peding\") return <span>Đang xét duyệt</span>;\r\n    if (record[source] === \"Active\") return <span>Đồng ý</span>;\r\n    if (record[source] === \"Inactive\") return <span>Từ chối</span>;\r\n\r\n    return <span>{record[source]}</span>;\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      {\" \"}\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"small outlined button group\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          var recordNew = record;\r\n          recordNew.agree = true;\r\n          recordNew.status = \"Active\";\r\n\r\n          axios\r\n            .put(\r\n              `http://localhost:8081/api/v1/curd/certs/${recordNew.id}`,\r\n              recordNew\r\n            )\r\n            .then(res => {\r\n              setReviewStatus(res.status);\r\n            });\r\n        }}\r\n      >\r\n        Đồng ý\r\n      </Button>\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"small outlined button group\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n            var recordNew = record;\r\n            recordNew.agree = false;\r\n            recordNew.status = \"Inactive\";\r\n  \r\n            axios\r\n              .put(\r\n                `http://localhost:8081/api/v1/curd/certs/${recordNew.id}`,\r\n                recordNew\r\n              )\r\n              .then(res => {\r\n                setReviewStatus(res.status);\r\n              });\r\n          }}\r\n        >\r\n        Từ chối\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nReviewField.propTypes = {\r\n  label: PropTypes.string,\r\n  record: PropTypes.object,\r\n  source: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ReviewField;\r\n","/**\r\n * Generated ModelCert.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MUITextField from \"@material-ui/core/TextField\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DeleteButton,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  List,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  TextField,\r\n  TextInput,\r\n  // BooleanField,\r\n  // FunctionField,\r\n  // SelectField,\r\n  SelectInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\nimport ModelCertEditToolbar from \"../customActions/ModelCertEditToolbar\";\r\nimport ModelCertFilter from \"../filters/ModelCertFilter\";\r\n\r\nimport ReviewField from \"../fields/ReviewField\";\r\n\r\n// const choices = [\r\n//   { _id: \"Active\", status: \"Đồng ý\" },\r\n//   { _id: \"Peding\", status: \"Đang xét duyệt\" },\r\n//   { _id: \"Inactive\", status: \"Từ chối\" }\r\n// ];\r\n\r\nconst choicesCourse = [\r\n  { id: \"Active\", name: \"Đồng ý\" },\r\n  { id: \"Peding\", name: \"Đang xét duyệt\" },\r\n  { id: \"Inactive\", name: \"Từ chối\" }\r\n];\r\n\r\nclass ModelCertList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      name_site: \"hocode\",\r\n      review_point: 0,\r\n      electronic_signature: \"\",\r\n      isLoading: true,\r\n      data: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/curd/configs/byname/${this.state.name_site}`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = event => {\r\n    var xName = event.target.id;\r\n\r\n    this.setState({ [xName]: event.target.value });\r\n  };\r\n\r\n  onChangeImage = ({ target }) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(target.files[0]);\r\n    fileReader.onload = e => {\r\n      this.setState({ electronic_signature: e.target.result });\r\n    };\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    //Make a network call somewhere\r\n    event.preventDefault();\r\n\r\n    var dataUpdate = this.state.data;\r\n    dataUpdate.name = this.state.name;\r\n    dataUpdate.name_site = this.state.name_site;\r\n    dataUpdate.review_point = parseInt(this.state.review_point);\r\n    dataUpdate.electronic_signature = this.state.electronic_signature;\r\n\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .post(`http://localhost:8081/api/v1/curd/configs`, dataUpdate)\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // const matches = useMediaQuery('(min-width:600px)');\r\n    return (\r\n      <>\r\n        <Grid container spacing={3} className=\"configFormContainer\">\r\n          <Grid item xs={3} className=\"configFormContainerItem\">\r\n            {/* <span>{`(min-width:600px) matches: ${matches}`}</span> */}\r\n            <Card style={{ padding: 12 }}>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {/* <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <MUITextField\r\n                    id=\"name_site\"\r\n                    label=\"Tên Cài Đặt\"\r\n                    margin=\"normal\"\r\n                    defaultValue={this.state.name_site}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled\r\n                  />\r\n                )}\r\n              </div> */}\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <MUITextField\r\n                      id=\"name\"\r\n                      label=\"Tên Chứng Chỉ\"\r\n                      margin=\"normal\"\r\n                      defaultValue={this.state.name}\r\n                      onChange={this.handleChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <MUITextField\r\n                      id=\"review_point\"\r\n                      label=\"Đậu Tốt Nghiệp\"\r\n                      margin=\"normal\"\r\n                      type=\"number\"\r\n                      defaultValue={this.state.review_point}\r\n                      onChange={this.handleChange}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={77} />\r\n                  ) : (\r\n                    <Button\r\n                      className=\"MuiFormControl-marginNormal\"\r\n                      variant=\"contained\"\r\n                      component=\"label\"\r\n                      fullWidth\r\n                    >\r\n                      Tải Chữ Ký\r\n                      <input\r\n                        id=\"electronic_signature\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.onChangeImage}\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {this.state.isLoading ? (\r\n                    <Skeleton height={120} />\r\n                  ) : (\r\n                    <Avatar\r\n                      style={{\r\n                        width: \"auto\",\r\n                        height: \"auto\"\r\n                      }}\r\n                      className=\"MuiFormControl-marginNormal\"\r\n                      src={\r\n                        this.state.electronic_signature\r\n                          ? this.state.electronic_signature\r\n                          : \"https://icon-library.net/images/no-image-available-icon/no-image-available-icon-6.jpg\"\r\n                      }\r\n                      variant=\"rounded\"\r\n                    ></Avatar>\r\n                  )}\r\n                </div>\r\n                {/* <TextField\r\n          id=\"standard-basic\"\r\n          className={classes.textField}\r\n          label=\"Standard\"\r\n          margin=\"normal\"\r\n        /> */}\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"MuiFormControl-marginNormal\"\r\n                  style={{ backgroundColor: \"#3f51b5\", color: \"#fff\" }}\r\n                  fullWidth\r\n                >\r\n                  Lưu cài đặt\r\n                </Button>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* <Button>Lưu cài đặt</Button> */}\r\n          <Grid item xs={9} className=\"configFormContainerItem\">\r\n            <List\r\n              {...this.props}\r\n              title=\"Danh sách Chứng chỉ\"\r\n              filters={<ModelCertFilter />}\r\n              bulkActionButtons={false}\r\n            >\r\n              <Datagrid>\r\n                <TextField source=\"user_id\" sortable={false} />\r\n                {/* <TextField source=\"status\" sortable={false} /> */}\r\n                {/* <SelectField\r\n                  source=\"status\"\r\n                  choices={choices}\r\n                  optionText=\"status\"\r\n                  optionValue=\"_id\"\r\n                /> */}\r\n\r\n                {/* <Button size=\"small\"  variant=\"contained\" color=\"primary\">\r\n  Đồng ý\r\n</Button>\r\n<Button size=\"small\"  variant=\"contained\" color=\"secondary\">\r\n  Từ chối\r\n</Button> */}\r\n\r\n                <ReviewField source=\"status\" />\r\n                <TextField source=\"timestamp\" sortable={false} />\r\n                {/* <BooleanField source=\"agree\" /> */}\r\n\r\n                {/* <FunctionField\r\n                label=\"Author\"\r\n                sortBy=\"last_name\"\r\n                render={record => {\r\n                  console.log(record);\r\n                  return  `${record.agree} ${record.status}`;\r\n                }}\r\n            /> */}\r\n\r\n                <EditButton />\r\n                <DeleteButton />\r\n              </Datagrid>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // var choicesCourse = this.state.course.map(val => {\r\n    //   var rObj = {};\r\n    //   rObj[\"id\"] = val.id;\r\n    //   rObj[\"name\"] = val.course_name;\r\n    //   return rObj;\r\n    // });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chứng chỉ\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"user_id\" />\r\n          <SelectInput source=\"status\" choices={choicesCourse} />\r\n\r\n          {/* <TextInput source=\"time\" /> */}\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // var choicesCourse = this.state.course.map(val => {\r\n    //   var rObj = {};\r\n    //   rObj[\"id\"] = val.id;\r\n    //   rObj[\"name\"] = val.course_name;\r\n    //   return rObj;\r\n    // });\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chứng chỉ\">\r\n        <SimpleForm toolbar={<ModelCertEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          {/* <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" /> */}\r\n          <TextInput source=\"user_id\" />\r\n\r\n          <SelectInput source=\"status\" choices={choicesCourse} />\r\n\r\n          {/* <TextInput source=\"time\" /> */}\r\n\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelCertList, ModelCertCreate, ModelCertEdit };\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelTaskEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelTaskEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelTaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelTaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelUser.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\nCreate, Datagrid, DeleteButton, Edit,\r\n  //  BooleanField,\r\n  EditButton, ImageField, List, NumberField, SelectInput, NumberInput,\r\n  //   BooleanInput,\r\n  SimpleForm, TextField, TextInput\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\nimport ModelUserEditToolbar from \"../customActions/ModelUserEditToolbar\";\r\nimport ModelUserFilter from \"../filters/ModelUserFilter\";\r\n\r\n\r\n\r\nexport const ModelUserList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Người dùng\"\r\n    filters={<ModelUserFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"email\" sortable={false} />\r\n      <TextField source=\"firstname\" sortable={false} />\r\n      <TextField source=\"lastname\" sortable={false} />\r\n      <NumberField source=\"codepoint\" sortable={false} />\r\n      <TextField source=\"role\" sortable={false} />\r\n      {/* <TextField source=\"timestamp\" sortable={false} /> */}\r\n      <ImageField className=\"thumbNailView\" source=\"avatar\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nclass ModelUserCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = [\r\n      {\r\n        id: \"user\",\r\n        name: \"Sinh Viên\"\r\n      },\r\n\r\n      {\r\n        id: \"mod\",\r\n        name: \"Giáo Viên\"\r\n      },\r\n      {\r\n        id: \"admin\",\r\n        name: \"Quản Trị Viên\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Người dùng mới\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"email\" />\r\n          <TextInput source=\"password\" />\r\n          <TextInput source=\"firstname\" />\r\n          <TextInput source=\"lastname\" />\r\n          <NumberInput source=\"codepoint\" />\r\n          <TextInput source=\"avatar\" />\r\n          <SelectInput source=\"role\" choices={choicesCourse} />\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelUserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = [\r\n      {\r\n        id: \"user\",\r\n        name: \"Sinh Viên\"\r\n      },\r\n\r\n      {\r\n        id: \"mod\",\r\n        name: \"Giáo Viên\"\r\n      },\r\n      {\r\n        id: \"admin\",\r\n        name: \"Quản Trị Viên\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Người Dùng\">\r\n        <SimpleForm toolbar={<ModelUserEditToolbar />}>\r\n          <TextInput source=\"email\" />\r\n          <TextInput source=\"password\" />\r\n          <TextInput source=\"firstname\" />\r\n          <TextInput source=\"lastname\" />\r\n          <NumberInput source=\"codepoint\" />\r\n          <TextInput source=\"avatar\" />\r\n          {/* <ImageInput source=\"avatar_input\" label=\"Avatar User\" accept=\"image/*\" onUpload={()=> console.log(\"onUpload\")}>\r\n            <ImageField source=\"src\" title=\"title\" />\r\n          </ImageInput> */}\r\n\r\n          <SelectInput source=\"role\" choices={choicesCourse} />\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelUserCreate, ModelUserEdit };\r\n\r\n/** End of Generated Code **/\r\n","import React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelFightEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelFightEditToolbar;","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelFightFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelFightFilter;\r\n/** End of Generated Code **/","import React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  DateField,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateTimeInput,\r\n  NumberInput,\r\n  ImageField,\r\n  // SelectInput\r\n} from \"react-admin\";\r\n// import Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\nimport ModelFightEditToolbar from \"../customActions/ModelFightEditToolbar\";\r\n\r\nimport ModelFightFilter from \"../filters/ModelFightFilter\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\n// import Tooltip from \"@material-ui/core/Tooltip\";\r\n// import Chip from \"@material-ui/core/Chip\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// import Slider from '@material-ui/core/Slider';\r\n// import FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nexport const ModelFightList = props => (\r\n    <List\r\n        {...props}\r\n        title=\"Danh sách các cuộc thi\"\r\n        filters={<ModelFightFilter/>}\r\n        bulkActionButtons={false}\r\n    >\r\n        <Datagrid>\r\n        {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n        <TextField source=\"fight_name\" sortable={false} />\r\n        <ImageField\r\n            className=\"thumbNailView\"\r\n            source=\"backgroud_img\"\r\n            sortable={false}\r\n        />\r\n        <DateField source=\"time_start\" />\r\n        <DateField source=\"time_end\" />\r\n        <EditButton />\r\n        <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst validateFightCreate = (values) => {\r\n    const errors = {};\r\n    if (!values.fight_name) {\r\n      errors.fight_name = ['The fight name is required'];\r\n    }\r\n    if (!values.backgroud_img) {\r\n      errors.backgroud_img = ['The background image is required'];\r\n    }\r\n    if (!values.time_start) {\r\n      errors.time_start = ['The start time is required'];\r\n    }\r\n    if (!values.time_end) {\r\n      errors.end_time = ['The end time is required'];\r\n    }\r\n    if (!values.numbers_std) {\r\n        errors.numbers_std = ['The numbers student is required'];\r\n      }\r\n    if (values.time_end - values.time_start <= 0) {\r\n      errors.end_time = ['The end time must be longer than start time']\r\n    }\r\n    return errors\r\n  };\r\nclass ModelFightCreate extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = ({\r\n      })\r\n    }\r\n  \r\n    componentDidMount() {\r\n     \r\n    }\r\n    render() {\r\n      return (\r\n        <Create {...this.props} title=\"Tạo Cuộc Thi\">\r\n          <SimpleForm redirect=\"show\" validate={validateFightCreate} >\r\n            <TextInput resettable source=\"fight_name\" />\r\n            <TextInput resettable source=\"backgroud_img\" />\r\n            <TextInput resettable multiline source=\"fight_desc\" />\r\n            <NumberInput label=\"Số lượng thí sinh\" source=\"numbers_std\"/>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <DateTimeInput\r\n                source=\"time_start\"\r\n                label=\"Start time\"\r\n                options={{ format: 'MM/DD/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n                required\r\n              />\r\n              <DateTimeInput\r\n                source=\"time_end\"\r\n                label=\"End time\"\r\n                options={{ format: 'MM/DD/YYYY, HH:mm:ss', clearable: true, ampm: false, disablePast: true }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </SimpleForm>\r\n        </Create>\r\n      )\r\n    }\r\n}\r\n\r\nclass ModelFightEdit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n      minitask : [],\r\n      isLoading: true,\r\n      tempMinitaskList: [],\r\n      open: false,\r\n      fight: {},\r\n      minitaskDesc: \"\",\r\n      errorMessage: \"\",\r\n      openErr: false, \r\n      MinitaskListID : []\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n      this.setState({ tempMinitaskList: res.data, isLoading: false });\r\n      console.log(res.data);\r\n    });\r\n\r\n    axios \r\n    .get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({minitask: res.data});\r\n    });\r\n   \r\n  }\r\n\r\n  getMinitaskDesc = (id) => {\r\n    axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n      console.log(res.data.mini_task_desc);\r\n      this.setState({\r\n        minitaskDesc: res.data.mini_task_desc,\r\n        open: true\r\n      });\r\n    })\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  closeModalError() {\r\n    this.setState({\r\n      openErr: false\r\n    });\r\n  }\r\n  \r\n  isDuplicateMinitask(id) {\r\n    for (var i = 0; i < this.state.minitask.length; i++) {\r\n      if (this.state.minitask[i].id === id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  getMinitaskFromBank(task) {\r\n    if (this.isDuplicateMinitask(task.id)) {\r\n      // const temp_task_minitask = this.state.minitask;\r\n      var data = {\r\n        fight_id: this.props.id,\r\n        minitask_id: task.id\r\n      }\r\n      axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, data)\r\n            .then(res => {\r\n              axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n                    .then(res => {\r\n                      this.setState({\r\n                        minitask: res.data,\r\n                        openErr: true,\r\n                        errorMessage: \"Added a minitask\"\r\n                      })\r\n                    });\r\n            });\r\n      \r\n    }\r\n    else {\r\n      this.setState({\r\n        errorMessage: \"This minitask already exists\",\r\n        openErr: true\r\n      });\r\n    }\r\n  }\r\n\r\n  removeMinitask(id) {\r\n    // const temp_task_minitask = this.state.minitask;\r\n    axios.delete(`http://localhost:8081/api/v1/curd/delminitask/${this.props.id}/${id}`)\r\n         .then(res => {\r\n           axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${this.props.id}`)\r\n                .then( res => {\r\n                  this.setState({\r\n                    minitask: res.data,\r\n                    openErr: true,\r\n                    errorMessage: \" Deleted Successfully\"\r\n                  })\r\n                });\r\n         });\r\n    // temp_task_minitask.splice(id, 1); \r\n    // console.log(temp_task_minitask);\r\n    \r\n    console.log(this.state.minitask);\r\n  }\r\n\r\n  onChangeSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    if (keyword === \"\") {\r\n      axios.get(`http://localhost:8081/api/v1/curd/minitasks`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({  isLoading: false, tempMinitaskList: res.data });\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ isLoading: false, tempMinitaskList: res.data })\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n\r\n            <Grid xs={4} item>\r\n              <Edit {...this.props} title=\"Sửa Cuộc Thi\">\r\n                <SimpleForm toolbar={<ModelFightEditToolbar />}>\r\n                  <TextInput resettable source=\"fight_name\" />\r\n                  <TextInput resettable source=\"backgroud_img\" />\r\n                  <TextInput resettable multiline source=\"fight_desc\" />\r\n                  <NumberInput label=\"Số lượng thí sinh\" source=\"numbers_std\"/>\r\n                </SimpleForm>\r\n              </Edit>\r\n            </Grid>\r\n\r\n            <Grid item xs={8}>\r\n              <Paper >\r\n                <Box height={375} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                  <Box display=\"flex\">\r\n                        <Box p={1} flexGrow={1}>\r\n                          <Typography variant=\"h5\" gutterBottom>\r\n                            Task's Minitask ({this.state.minitask.length})\r\n                        </Typography>\r\n                        </Box>                       \r\n                      </Box>\r\n                      {this.state.minitask.length > 0 ?\r\n                  <Card>\r\n                    <div style={{ overflow: 'auto', height: '300px' }}>\r\n                      <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                          <TableHead>\r\n                            <TableRow style={{\r\n                              backgroundColor: \"#ffred5f5\",\r\n                              height: \"5px\"\r\n                            }}>\r\n                              <TableCell>Minitask name</TableCell>                             \r\n                              <TableCell align=\"right\">Code point</TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                              <TableCell align=\"right\"></TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {this.state.minitask.map(row => (\r\n                              <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.mini_task_name}\r\n                                </TableCell>\r\n                                {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}                              \r\n                                <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  <Button onClick={() => this.removeMinitask(row.id)} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Remove</Button>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                  </Card>\r\n                        :\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                          There are no minitask.\r\n                      </Typography>}\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={3}>\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={2}>\r\n                <Grid xs={12} item>\r\n                  <Paper >\r\n                    <Box height={470} bgcolor=\"#ede7f6\" color=\"black\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                      <Typography variant=\"h5\" color=\"black\" gutterBottom>\r\n                        Minitask bank ({this.state.tempMinitaskList.length})\r\n                    </Typography>\r\n                      <Box my={1}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={2}>\r\n                              <Grid xs={6} item>\r\n                                <Paper component=\"form\">\r\n                                  <IconButton aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                  </IconButton>\r\n                                  <InputBase\r\n                                    placeholder=\"Search minitask...\"\r\n                                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                                    onChange={this.onChangeSearch}\r\n                                  />\r\n                                  <Divider orientation=\"vertical\" />\r\n                                </Paper>\r\n                              </Grid>\r\n                              {/* <Grid xs={1} bgcolor=\"white\" item>\r\n                                <FormControl fullWidth={true}>\r\n                                  <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={this.state.sortByLevel}\r\n                                    onChange={this.onChangeSort}\r\n                                  >\r\n                                    <MenuItem value={10}>Easy</MenuItem>\r\n                                    <MenuItem value={20}>Medium</MenuItem>\r\n                                    <MenuItem value={30}>Hard</MenuItem>\r\n                                    <MenuItem value={40}>All</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid> */}\r\n                              {/* <Grid xs={2} bgcolor=\"white\" item>\r\n                                <Typography id=\"range-slider\" gutterBottom>\r\n                                  Code point\r\n                              </Typography>\r\n                                <Slider\r\n                                  value={this.state.sliderValue}\r\n                                  onChange={this.onChangeSlider}\r\n                                  valueLabelDisplay=\"auto\"\r\n                                  aria-labelledby=\"range-slider\"\r\n                                  min={0}\r\n                                  max={200}\r\n                                />\r\n                              </Grid> */}\r\n                              <Grid xs={6} bgcolor=\"white\" item></Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                      <Card>\r\n                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                          <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell style={{fontSize:16, color: \"red\", fontWeight:700}}>Minitask name</TableCell>\r\n                                <TableCell style={{fontSize:16, color: \"red\", fontWeight:700}} align=\"right\">Code point</TableCell>                              \r\n                                <TableCell align=\"right\"></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {this.state.tempMinitaskList.map(row => (\r\n                                <TableRow key={row.task_name}>\r\n                                  <TableCell align=\"center\">\r\n                                    <Button\r\n                                      variant=\"outlined\"\r\n                                      size=\"small\"\r\n                                      startIcon={<KeyboardBackspaceIcon />}\r\n                                      aria-label=\"move selected right\"\r\n                                      onClick={() => this.getMinitaskFromBank(row)}\r\n                                    >\r\n                                      {/* &lt; */}\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.mini_task_name}\r\n                                  </TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                  <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                  {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                  <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">View Desc</Button></TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </div>\r\n                      </Card>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n            <Box p={2}>\r\n              <MDReactComponent text={this.state.minitaskDesc} />\r\n            </Box>\r\n          </Modal>\r\n          <Slide in={this.state.openErr} direction=\"up\">\r\n            <Modal visible={this.state.openErr} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n              <Box p={2}>\r\n                <Typography variant=\"h5\" color=\"error\" gutterBottom>\r\n                  Thông báo\r\n                </Typography>\r\n                <Box my={3}>\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    {this.state.errorMessage}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Modal>\r\n          </Slide>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\nexport {  ModelFightCreate, ModelFightEdit };","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      console.log(action.payload);\r\n      console.log(\"SET\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      }; \r\n    default:\r\n      console.log(state);\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  avatar: \"\",\r\n  codepoint: 0,\r\n  email: \"\",\r\n  firstname: \"\",\r\n  id: \"\",\r\n  lastname: \"\",\r\n  isUserLoading:false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_CODEPOINT:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isUserLoading:false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case CHANGE_USER_INFO:\r\n      return {\r\n        ...state,\r\n        avatar:action.payload.avatar,\r\n        codepoint:action.payload.codepoint,\r\n        email:action.payload.email,\r\n        firstname:action.payload.firstname,\r\n        lastname:action.payload.lastname,\r\n        isUserLoading: false\r\n      };\r\n      case SET_UNDEFINED_NEXT_MINITASK:\r\n          return {\r\n            ...state,\r\n            next_minitask: action.payload\r\n          }; \r\n      case CHANGE_LOADING:\r\n        return {\r\n          ...state,\r\n          isUserLoading: action.payload\r\n        }; \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer, //auth la state de minh goi o cac component can dung : state.auth\r\n  errors: errorReducer,\r\n  user: userReducer\r\n});\r\n","// import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport vietnameseMessages from \"ra-language-vietnamese\";\r\n// import defaultMessages from 'ra-language-english';\r\nimport {\r\n  adminReducer,\r\n  adminSaga,\r\n  formMiddleware,\r\n  defaultI18nProvider,\r\n  USER_LOGOUT,\r\n  i18nReducer\r\n} from 'react-admin';\r\nimport { routerMiddleware, routerReducer } from \"react-router-redux\";\r\n// in src/createAdminStore.js\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { all, fork } from \"redux-saga/effects\";\r\nimport thunk from \"redux-thunk\";\r\nimport authProvider from \"../../components/adminPage/hocode/auth/authProvider\";\r\nimport dataProvider from \"../../components/adminPage/hocode/dataProvider\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n//import routeReducer2 from '../reducers/routeReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst history = createBrowserHistory({ basename: '/admin' });\r\n\r\nconst createAdminStore = ({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider = defaultI18nProvider,\r\n  history,\r\n  locale = \"vi\"\r\n}) => {\r\n  const reducer = combineReducers({\r\n    admin: adminReducer,\r\n    form: formReducer,\r\n    router: routerReducer,\r\n    i18n: i18nReducer(locale, i18nProvider(locale)),\r\n    rootReducer: rootReducer\r\n    // { /* add your own reducers here */ },\r\n  });\r\n  const resettableAppReducer = (state, action) =>\r\n    reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n  const saga = function* rootSaga() {\r\n    yield all(\r\n      [\r\n        adminSaga(dataProvider, authProvider, i18nProvider)\r\n        // add your own sagas here\r\n      ].map(fork)\r\n    );\r\n  };\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    resettableAppReducer,\r\n    // { /* set your initial state here */ },\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(\r\n        sagaMiddleware,\r\n        formMiddleware,\r\n        routerMiddleware(history),\r\n        thunk\r\n        // add your own middlewares here\r\n      ),\r\n //    typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__\r\n   //    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    //    : f => f\r\n      // add your own enhancers here\r\n    )\r\n  );\r\n  sagaMiddleware.run(saga);\r\n  return store;\r\n};\r\n\r\n\r\nconst i18nProvider = locale => {\r\n  // if (locale !== 'en') {\r\n  //     return messages[locale];\r\n  // }\r\n  return vietnameseMessages;\r\n};\r\n\r\nconst store = createAdminStore({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider,\r\n  history\r\n});\r\nexport default store;\r\n\r\nexport { history };\r\n// const middleware = [thunk];\r\n// //const devTools = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : null\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   initialState,\r\n//   compose(\r\n//     applyMiddleware(...middleware)\r\n//  // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  //cai nay su dung khi dung redux dev tool extension\r\n//   )\r\n// );\r\n\r\n// export { store};\r\n","/**\r\n * Generated ReactAdmin.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { Admin, Resource } from \"react-admin\";\r\n\r\nimport authProvider from \"./auth/authProvider\";\r\nimport catchAll from \"./catchAll\";\r\nimport customRoutes from \"./customRoutes\";\r\nimport dataProvider from \"./dataProvider\";\r\nimport MyLayout from \"./MyLayout\";\r\nimport { theme } from \"./theme\";\r\n\r\nimport {\r\n  ModelBookList,\r\n  ModelBookCreate,\r\n  ModelBookEdit\r\n} from \"./resources/ModelBook\";\r\n\r\nimport {\r\n  ModelCourseList,\r\n  ModelCourseCreate,\r\n  ModelCourseEdit,\r\n  ModelCourseCreateForMod\r\n} from \"./resources/ModelCourse\";\r\n\r\nimport {\r\n  ModelEventList,\r\n  ModelEventCreate,\r\n  ModelEventEdit\r\n} from \"./resources/ModelEvent\";\r\n\r\nimport {\r\n  ModelMinitaskList,\r\n  ModelMinitaskCreate,\r\n  ModelMinitaskEdit\r\n} from \"./resources/ModelMinitask\";\r\n\r\nimport {\r\n  ModelTaskList,\r\n  ModelTaskCreate,\r\n  ModelTaskEdit\r\n} from \"./resources/ModelTask\";\r\n\r\nimport {\r\n  ModelCertList,\r\n  ModelCertCreate,\r\n  ModelCertEdit\r\n} from \"./resources/ModelCert\";\r\n\r\nimport {\r\n  ModelUserList,\r\n  ModelUserCreate,\r\n  ModelUserEdit\r\n} from \"./resources/ModelUser\";\r\n\r\nimport {\r\n  ModelFightList,\r\n  ModelFightCreate,\r\n  ModelFightEdit\r\n} from \"./resources/ModelFight\";\r\nimport { history } from \"../../../js/store/store\";\r\n\r\nconst ReactAdmin = () => (\r\n  <Admin\r\n    appLayout={MyLayout}\r\n    authProvider={authProvider}\r\n    catchAll={catchAll}\r\n    customRoutes={customRoutes}\r\n    dataProvider={dataProvider}\r\n    title=\"Hocode Admin\"\r\n    theme={theme}\r\n    history={history}\r\n    locale=\"vi\"\r\n    // logoutButton={null}\r\n  >\r\n    {_ => {\r\n      const permissionslocal = localStorage.getItem(\"permissions\");\r\n      console.log(permissionslocal);\r\n      return [\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"books\"\r\n            list={ModelBookList}\r\n            create={ModelBookCreate}\r\n            edit={ModelBookEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"events\"\r\n            list={ModelEventList}\r\n            create={ModelEventCreate}\r\n            edit={ModelEventEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n          name=\"courses\"\r\n          list={ModelCourseList}\r\n          create={ModelCourseCreate}\r\n          edit={ModelCourseEdit}\r\n        />\r\n        ) : (<Resource\r\n          name=\"courses\"\r\n          list={ModelCourseList}\r\n          create={ModelCourseCreateForMod}\r\n          edit={ModelCourseEdit}\r\n        />\r\n\r\n        ),\r\n        // <Resource\r\n        //   name=\"courses\"\r\n        //   list={ModelCourseList}\r\n        //   create={ModelCourseCreate}\r\n        //   edit={ModelCourseEdit}\r\n        // />,\r\n        <Resource\r\n          name=\"tasks\"\r\n          list={ModelTaskList}\r\n          create={ModelTaskCreate}\r\n          edit={ModelTaskEdit}\r\n        />,\r\n        <Resource\r\n          name=\"fights\"\r\n          list={ModelFightList}\r\n          create={ModelFightCreate}\r\n          edit={ModelFightEdit}\r\n        />,\r\n\r\n        <Resource\r\n          name=\"minitasks\"\r\n          list={ModelMinitaskList}\r\n          create={ModelMinitaskCreate}\r\n          edit={ModelMinitaskEdit}\r\n        />,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"users\"\r\n            list={ModelUserList}\r\n            create={ModelUserCreate}\r\n            edit={ModelUserEdit}\r\n          />\r\n        ) : null,\r\n\r\n        permissionslocal === \"admin\" ? (\r\n          <Resource\r\n            name=\"certs\"\r\n            list={ModelCertList}\r\n            create={ModelCertCreate}\r\n            edit={ModelCertEdit}\r\n          />\r\n        ) : null\r\n      ];\r\n    }}\r\n  </Admin>\r\n);\r\n\r\nexport default ReactAdmin;\r\n\r\n// const mapStateToProps = state => ({\r\n//   auth: state.rootReducer.auth,\r\n//   errors: state.rootReducer.errors,\r\n//   user: state.rootReducer.user\r\n// });\r\n\r\n// export default withStyles(styles, { withTheme: true })(\r\n//   connect(mapStateToProps, { logoutUser })(ProfilePage)\r\n// );\r\n\r\n/** End of Generated Code **/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { changeUserInfo } from \"../../../../js/actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { regexPassword } from \"../../../../common/regex\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\n\r\nclass Account extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      avatar: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      },\r\n      image: null,\r\n      url: \"\",\r\n      urlPreview: \"\"\r\n    };\r\n    this.handleChangeImage = this.handleChangeImage.bind(this);\r\n    this.toBase64 = this.toBase64.bind(this);\r\n    this.ImgToBase64 = this.ImgToBase64.bind(this);\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios\r\n        .get(\"http://localhost:8081/auth/userinfo\")\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState({\r\n            firstName: res.data.firstname,\r\n            lastName: res.data.lastname,\r\n            avatar: res.data.avatar\r\n          });\r\n        })\r\n        .catch(err => console.log(err))\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  async handleChangeImage(e) {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      const urlimage = URL.createObjectURL(image);\r\n      let image1 = await this.ImgToBase64(image);\r\n      await this.setState({ image: image1, urlPreview: urlimage });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    this.setState({\r\n      errors: { message: \"\" }\r\n    });\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        var errorFormNew = this.state.errorForm;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  toBase64(file) {\r\n    console.log(file);\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  async ImgToBase64(file) {\r\n    const result = await this.toBase64(file).catch(e => e);\r\n    if (result instanceof Error) {\r\n      console.log(\"Error: \", result.message);\r\n      return;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      password: this.state.password,\r\n      avatar: this.state.image\r\n    };\r\n    console.log(this.props.auth.user.data.id);\r\n    this.setState(function (state, props) {\r\n      return {\r\n        isLoading: true\r\n      };\r\n    });\r\n\r\n    console.log(this.state.image);\r\n\r\n    await this.props.changeUserInfo(newUser, this.props.auth.user.data.id);\r\n    setTimeout(() => {\r\n      this.setState(function (state, props) {\r\n        return {\r\n          isLoading: false\r\n        };\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors, isLoading } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={3} style={{ height: \"100%\" }}>\r\n        {isLoading === true || this.props.user.isUserLoading === true ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\", height: '100vh'\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={true}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={4} md={4}>\r\n                <Paper>\r\n                  <Box display=\"flex\" p={1} bgcolor=\"grey.300\">\r\n                    <Box mr={1} mt={1} flexGrow={1}>\r\n                      <PersonIcon fontSize=\"large\"/>\r\n                    </Box>\r\n                    <Box mt={1} flexGrow={6}>\r\n                      <Typography variant=\"h5\">Thông tin cá nhân</Typography>\r\n                    </Box>\r\n                    {/* <Box>\r\n                      <IconButton color=\"primary\" aria-label=\"Edit\">\r\n                        <EditIcon/>\r\n                      </IconButton>\r\n                    </Box> */}\r\n                  </Box>\r\n                  <Box display=\"flex\" justifyContent=\"flex-start\" p={2}>\r\n                    <Box borderRadius={16} borderColor=\"grey.500\">\r\n                      <img\r\n                        style={{ width: 100, height: 100 }}\r\n                        src={this.state.avatar}\r\n                        alt=\"Ảnh đại diện\"\r\n                      />\r\n                    </Box>\r\n                    <Box ml={1}>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">\r\n                          Họ và tên: {this.props.user.lastname}{\" \"}\r\n                          {this.props.user.firstname}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">Email: {this.props.user.email}</Typography>\r\n                      </Box>\r\n                      <Box mb={1} ml={1}>\r\n                        <Typography variant=\"overline\">Điểm: {this.props.user.codepoint}</Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={8}>\r\n                <Paper style={{ padding: 16 }}>\r\n                  <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                      <Typography component=\"h1\" variant=\"h5\"></Typography>\r\n                      <form\r\n                        className={classes.form}\r\n                        noValidate\r\n                        onSubmit={this.onSubmit}\r\n                      >\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <CssTextField\r\n                              autoComplete=\"lname\"\r\n                              name=\"lastName\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              id=\"lastName\"\r\n                              label=\"Họ\"\r\n                              value={this.state.lastName}\r\n                              onChange={this.onChange}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              id=\"firstName\"\r\n                              label=\"Tên\"\r\n                              name=\"firstName\"\r\n                              autoComplete=\"fname\"\r\n                              value={this.state.firstName}\r\n                              onChange={this.onChange}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              name=\"password\"\r\n                              label=\"Mật khẩu mới\"\r\n                              type=\"password\"\r\n                              id=\"password\"\r\n                              autoComplete=\"current-password\"\r\n                              value={this.state.password}\r\n                              onChange={this.onChange}\r\n                              error={this.state.errorForm.password.trim() !== \"\"}\r\n                              helperText={this.state.errorForm.password}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <CssTextField\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              name=\"password2\"\r\n                              label=\"Nhập lại Mật khẩu mới\"\r\n                              type=\"password\"\r\n                              id=\"password2\"\r\n                              autoComplete=\"current-password2\"\r\n                              value={this.state.password2}\r\n                              onChange={this.onChange}\r\n                              error={this.state.errorForm.password2.trim() !== \"\"}\r\n                              helperText={this.state.errorForm.password2}\r\n                              inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                              InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {/* <div>Thay đổi avatar</div> */}\r\n                          </Grid>\r\n                        </Grid>\r\n                        <div>\r\n                          <div className=\"error_show\">{errors.message}</div>\r\n                        </div>\r\n                        <div>\r\n                          <label\r\n                            htmlFor=\"files\"\r\n                            style={{\r\n                              padding: \"2px\",\r\n                              borderRadius: \"4px\",\r\n                              cursor: \"pointer\",\r\n                              background: \"#2098d1\",\r\n                              color: \"white\",\r\n                              boxShadow:\r\n                                \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n                            }}\r\n                          >\r\n                            Chọn ảnh\r\n                            </label>\r\n                          <input\r\n                            id=\"files\"\r\n                            type=\"file\"\r\n                            onChange={this.handleChangeImage}\r\n                            style={{ visibility: \"hidden\" }}\r\n                          />\r\n                        </div>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          Lưu thông tin\r\n                        </Button>\r\n                      </form>\r\n                    </div>\r\n                  </Container>\r\n                </Paper>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nAccount.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { changeUserInfo }\r\n  )(Account)\r\n);\r\n","// import Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport \"./hover.css\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport {\r\n  // FacebookShareCount,\r\n  FacebookIcon,\r\n  FacebookShareButton\r\n} from \"react-share\";\r\n// import { Button } from \"@material-ui/core\";\r\n\r\nconst randomColor = () => {\r\n  var listColor = [deepOrange[500], deepPurple[500], green[500], pink[500]];\r\n  var color = listColor[Math.floor(Math.random() * listColor.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport { randomColor };\r\n\r\nconst styles = {\r\n  courseItem: {\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    overflow: \"hidden\",\r\n    background: \"#FFFFFF\",\r\n    cursor: \"pointer\"\r\n  },\r\n  smallAvatar: {\r\n    height: \"24px\",\r\n    width: \"24px\",\r\n    marginRight: \"4px\",\r\n    // backgroundColor: randomColor(),\r\n    // fontSize: \"0.8rem\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"600\"\r\n  }\r\n};\r\nclass CourseItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalMinitask: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      courseStatus: 0,\r\n      coursePassInfo: {},\r\n      isLoadingCourseInfo: true,\r\n      //status for like function\r\n      liked: true\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/api/v1/totalMinitask/${this.props.course.id}`).then(res => {\r\n      // console.log(res.data);\r\n      this.setState({ totalMinitask: res.data });\r\n    });\r\n    axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${this.props.course.id}`).then(res => {\r\n      console.log(res.data);\r\n      this.setState({ coursePassInfo: res.data, isLoadingCourseInfo: false });\r\n    });\r\n    var code;\r\n    if ((new Date() < new Date(this.props.course.start_time))) {\r\n      code = -1;\r\n    }\r\n    if ((new Date() > new Date(this.props.course.start_time)) && (new Date() < new Date(this.props.course.end_time))) {\r\n      code = 0;\r\n    }\r\n    if ((new Date() > new Date(this.props.course.end_time))) {\r\n      code = 1;\r\n    }\r\n    this.setState({ courseStatus: code });\r\n    this.interval = setInterval(() => {\r\n      const date = this.calculateCountdown(code === -1 ? this.props.course.start_time : this.props.course.end_time);\r\n      date ? this.setState(date) : this.stop();\r\n    }, 1000);\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      years: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n      diff -= timeLeft.years * 365.25 * 86400;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n      timeLeft.days = Math.floor(diff / 86400);\r\n      diff -= timeLeft.days * 86400;\r\n    }\r\n    if (diff >= 3600) { // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = '0' + value;\r\n    }\r\n    return value;\r\n  }\r\n  \r\n  // handle func like course \r\n  \r\n  handleCountLiked() {\r\n    var newcourse = this.props.course;\r\n    if(!this.state.liked) {\r\n      this.setState((prevState, props) => {\r\n        return {\r\n          liked: true\r\n        }\r\n      });\r\n    } else {\r\n      this.setState((prevState, props) => {\r\n        return {\r\n          liked: false\r\n        }\r\n      });\r\n    }\r\n    if(this.state.liked) {\r\n      newcourse.numbers_like = this.props.course.numbers_like + 1;\r\n    }\r\n    else {\r\n      newcourse.numbers_like = this.props.course.numbers_like - 1;\r\n    }\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${this.props.course.id}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n    \r\n    // console.log(newcourse);\r\n    \r\n  }\r\n  \r\n \r\n  render() {\r\n    const { days, hours, min, sec, courseStatus } = this.state;\r\n    const { classes, course, page } = this.props;\r\n\r\n\r\n    // check course statement -- Active or Inactive\r\n    // let isActive;\r\n    // if (course.status === \"Inactive\") {\r\n    //   isActive = <p>Cần xét duyệt</p>\r\n    // }\r\n\r\n    let chip; \r\n    if (course.status === \" \" || course.status === \"Inactive\"){\r\n      chip = (<Chip\r\n      label=\"Cần xét duyệt\"\r\n      color=\"primary\"\r\n      style={{\r\n        width: '80%',\r\n        height: '80%',\r\n        fontSize: '63px'\r\n      }}\r\n      />)\r\n    } else if (course.status === \"Pedding\") {\r\n      chip =( <Chip\r\n      label=\"Đang xét duyệt\"\r\n      color=\"primary\"\r\n      style={{\r\n        width: '80%',\r\n        height: '80%',\r\n        fontSize: '63px'\r\n      }}\r\n      />)\r\n    }\r\n    let timer;\r\n    if (courseStatus === 0) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#ef5350\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Đang diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === -1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#212121\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Sắp diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === 1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Kết thúc\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            {new Date(course.end_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n          </Typography>\r\n        </Box>\r\n      </React.Fragment>\r\n    }\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          // justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n        className={`${classes.courseItem} hvr-bounce-in`}\r\n      >\r\n        {/* <React.Fragment></React.Fragment> */}\r\n        <Grid\r\n          container\r\n          component={ Link } to={`/profile/courses/${course.id}/tasks`}\r\n          style={{\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            height: \"150px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            background: `url(${course.background_image}) no-repeat center`,\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        > \r\n          {/* { course.status === \"Pedding\"  ?\r\n            <Chip\r\n              label=\"Cần xét duyệt\"\r\n              color=\"primary\"\r\n              style={{\r\n                width: '80%',\r\n                height: '80%',\r\n                fontSize: '63px'\r\n              }}\r\n            />\r\n            :\r\n            \"\"\r\n          } */}\r\n          {chip}\r\n          {/* <img\r\n            src={course.background_image}\r\n            style={{\r\n              width: \"50px\",\r\n              objectFit: \"cover\",\r\n              height: \"50px\",\r\n              borderRadius: \"50%\",\r\n              marginTop: \"10px\"\r\n            }}\r\n            alt=\"\"\r\n          /> */}\r\n        </Grid>\r\n        <Grid item container justify=\"center\" style={{ padding: \"10px 0 0 0\" }}>\r\n          <Grid item xs>\r\n            <div\r\n              style={{\r\n                margin: \"0px 12px\",\r\n                // textAlign: \"center\",\r\n                // textTransform: \"uppercase\",\r\n                color: \"#3B3C54\",\r\n                fontWeight: \"bold\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Link style={{ textDecoration: 'none' }} to={`/profile/courses/${course.id}/tasks`}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                  {course.course_name}\r\n                </Typography>\r\n              </Link>\r\n              \r\n            </div>\r\n            <div\r\n              style={{\r\n                margin: \"5px 12px 10px\",\r\n                // textAlign: \"center\",\r\n                color: \"#909090\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Rating\r\n                name=\"read-only\"\r\n                value={course.rating_value}\r\n                read-only\r\n                precision={0.1}\r\n                size=\"large\"\r\n              />{\" \"}\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  height: 20,\r\n                  overflow: \"hidden\",\r\n                  wordBreak: \"break-word\"\r\n                }}\r\n              >\r\n                {course.course_desc}\r\n              </Typography>\r\n            </div>\r\n            {!this.state.isLoadingCourseInfo ?\r\n              <React.Fragment>\r\n                <Box justifyContent=\"flex-start\" p={1} display=\"flex\" color=\"#757575\">\r\n                  <Tooltip title={(this.state.coursePassInfo.total_minitask === 0) ? \"0%\" : (this.state.coursePassInfo.minitask_solved /\r\n                    this.state.coursePassInfo.total_minitask) * 100 + \"%\"} placement=\"top\">\r\n                    <Fade in={!this.state.isLoadingCourseInfo} {...(true ? { timeout: 1000 } : {})}>\r\n                      <LinearProgress\r\n                        variant=\"determinate\"\r\n                        value={this.state.coursePassInfo.total_minitask === 0 ? \"0\" :\r\n                          (this.state.coursePassInfo.minitask_solved /\r\n                            this.state.coursePassInfo.total_minitask) * 100\r\n                        }\r\n                        style={{ width: '100%', height: 7 }}\r\n                      />\r\n                    </Fade>\r\n                  </Tooltip>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Box p={2} flexGrow={1} justifyContent=\"flex-start\" color=\"#757575\">\r\n                    <Typography variant=\"subtitle2\">\r\n                      {(this.state.coursePassInfo.minitask_solved + \"/\" + this.state.coursePassInfo.total_minitask)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box p={1} color=\"#757575\">\r\n                    {this.state.coursePassInfo.isCodePass ?\r\n                      // <Chip label=\"Pass\" style={{ background: \"#43a047\", color: \"white\" }} />\r\n                      \"\"\r\n                      :\r\n                      <React.Fragment>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {this.state.coursePassInfo.user_code_point} <EmojiNatureIcon />\r\n                        </Typography>\r\n                      </React.Fragment>}\r\n                  </Box>\r\n                </Box>\r\n              </React.Fragment>\r\n              :\r\n              <Box p={1} display=\"flex\" justifyContent=\"center\" color=\"#757575\">\r\n                <Box>\r\n                  <Tooltip title=\"Loading\" placement=\"top\">\r\n                    <CircularProgress />\r\n                  </Tooltip>\r\n                </Box>\r\n              </Box>\r\n            }\r\n            <Divider light />\r\n            <div\r\n              style={{\r\n                margin: \"8px 12px\",\r\n                textAlign: \"center\",\r\n                color: \"#909090\"\r\n\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                {/* <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\"\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    className={classes.smallAvatar}\r\n                    style={{ backgroundColor: randomColor() }}\r\n                  >\r\n                    {course.user_create\r\n                      ? course.user_create.charAt(0).toUpperCase()\r\n                      : \"H\"}\r\n                  </Avatar>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {course.user_create ? course.user_create : \"Hocode\"}\r\n                  </Typography>\r\n                </Grid> */}\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\"\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    {this.state.liked ? (<ThumbUpIcon\r\n                      style={{\r\n                        // color: \"#fff\",\r\n                        //backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n                        padding: \"2px 4px\",\r\n                        boxSizing: \"content-box\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      fontSize=\"large\"\r\n                      color=\"disabled\"\r\n                      onClick={\r\n                        () => { this.handleCountLiked() }\r\n                      } \r\n                    />): (<ThumbUpIcon\r\n                      style={{\r\n                        // color: \"#fff\",\r\n                        //backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n                        padding: \"2px 4px\",\r\n                        boxSizing: \"content-box\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      fontSize=\"large\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        () => { this.handleCountLiked() }\r\n                      } \r\n                    />  )}\r\n                      \r\n                  </Box>             \r\n                  \r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {/* {this.state.totalMinitask} */}\r\n                    {course.numbers_like}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\"\r\n                  }}\r\n                >\r\n                  <Box mt={1}>\r\n                    <FacebookShareButton url=\"https://www.google.com/\" >\r\n                      <FacebookIcon size={30} round={true} />\r\n                      {/* <FacebookShareCount url=\"https://www.google.com/\">\r\n                        {shareCount => (\r\n                          <span className=\"myShareCountWrapper\">{shareCount}</span>\r\n                        )}\r\n                      </FacebookShareCount> */}\r\n                    </FacebookShareButton>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider light />\r\n        {page === \"overview\" ? \"\" : timer}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\";\r\nimport { getUser } from \"../../../../js/actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { Box, Typography, Fade } from \"@material-ui/core\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = {\r\n  CourseContainer: {\r\n    // paddingTop: \"30px\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  CourseContainer1: {\r\n    paddingTop: \"\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem: {\r\n    borderRadius: '4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow: 'hidden',\r\n    background: '#EEEEEE',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst permissionslocal = localStorage.getItem(\"permissions\");\r\nconsole.log(permissionslocal);\r\n\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      courses: [],\r\n      coursesTemp: [],\r\n      courseActived: [],\r\n      courseStatus: 0,\r\n      keyword: \"\",\r\n      lap_trinh_co_so_id: \"5e9a6d398bf11c0e089af771\",\r\n      lap_trinh_co_so_list: [],\r\n      lap_trinh_nang_cao_id: \"5e9a6d698bf11c0e089af772\",\r\n      lap_trinh_nang_cao_list: [],\r\n      giai_quyet_van_de_id: \"5e9a6d738bf11c0e089af773\",\r\n      giai_quyet_van_de_list: [],\r\n    };\r\n  }\r\n  getApi = async () => {\r\n    const { lap_trinh_co_so_id, lap_trinh_nang_cao_id, giai_quyet_van_de_id } = this.state;\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/courses`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses)\r\n        const courseIsActived = []\r\n        this.setState({ courses, coursesTemp: courses });\r\n\r\n        for (let i = 0; i < courses.length; i++) {\r\n          const element = courses[i];\r\n          if (element.status === \"Active\" || element.status === \" \") {\r\n            courseIsActived.push(element);\r\n          }\r\n        }\r\n        this.setState({ courseActived: courseIsActived });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${lap_trinh_co_so_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_co_so_list: res.data,\r\n        })\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${lap_trinh_nang_cao_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_nang_cao_list: res.data,\r\n        })\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getCourseByCourseType/${giai_quyet_van_de_id}`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          giai_quyet_van_de_list: res.data,\r\n        })\r\n      }),\r\n    ]\r\n    );\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  handleChangeSelect = async (event) => {\r\n    const status = event.target.value;\r\n    const { courses, coursesTemp } = this.state;\r\n    console.log(coursesTemp);\r\n    if (status === 0) {\r\n      this.setState({ coursesTemp: courses, courseStatus: 0 });\r\n    }\r\n    else if (status === -1) {\r\n      const courseFilter = courses.filter(e => e.status === \"Inactive\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: -1 });\r\n    } else if (status === 1) {\r\n      const courseFilter = courses.filter(e => e.status === \"Active\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: 1 });\r\n    } if (status === 2) {\r\n      const courseFilter = courses.filter(e => e.status === \"Pedding\");\r\n      this.setState({ coursesTemp: courseFilter, courseStatus: 2 });\r\n    }\r\n  }\r\n\r\n  renderCourseTypeTitle = (title) => {\r\n    return <Box mt={4} mb={1}>\r\n      <Typography style={{ fontSize: 30, fontWeight: 700, color: \"#3B3C54\" }}>{title}</Typography>\r\n    </Box>\r\n  }\r\n\r\n  onHandleSearch = (event) => {\r\n    const keyword = event.target.value;\r\n    console.log(keyword);\r\n    this.setState({\r\n      keyword,\r\n    }, () => {\r\n      const { keyword, lap_trinh_co_so_id, lap_trinh_nang_cao_id, giai_quyet_van_de_id } = this.state;\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${lap_trinh_co_so_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_co_so_list: res.data,\r\n        })\r\n      });\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${lap_trinh_nang_cao_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          lap_trinh_nang_cao_list: res.data,\r\n        })\r\n      });\r\n      axios.get(`http://localhost:8081/api/v1/searchCourseByCourseType/${giai_quyet_van_de_id}/${keyword}/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          giai_quyet_van_de_list: res.data,\r\n        })\r\n      });\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { coursesTemp, isLoading, courseStatus, lap_trinh_co_so_list, lap_trinh_nang_cao_list, giai_quyet_van_de_list, keyword } = this.state;\r\n    // let url = this.props.url;\r\n\r\n    return (\r\n      <Grid container className={this.props.user.role === \"admin\" ? classes.CourseContainer1 : classes.CourseContainer} justify=\"center\">\r\n        {isLoading ? <div className=\"sweet-loading\" style={{ display: 'flex', alignItems: \"center\", justifyContent: 'center', width: '100%' }}>\r\n          <HashLoader\r\n            sizeUnit={\"px\"}\r\n            size={50}\r\n            color={\"#AEA8A8\"}\r\n            loading={isLoading}\r\n          />\r\n        </div> : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12}>\r\n                {this.props.user.role === \"admin\" ?\r\n                  <Box p={1}>\r\n                    <FormControl style={{ width: '15%' }}>\r\n                      <InputLabel id=\"demo-simple-select-label\">Tình trạng</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={courseStatus}\r\n                        style={{ height: 30 }}\r\n                        onChange={this.handleChangeSelect}\r\n                      >\r\n                        <MenuItem value={0}>Tất cả</MenuItem>\r\n                        <MenuItem value={1}>Đã duyệt</MenuItem>\r\n                        <MenuItem value={-1}>Cần xét duyệt</MenuItem>\r\n                        <MenuItem value={2}>Đang xét duyệt</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                  :\r\n                  \"\"\r\n                }\r\n                {this.props.user.role !== \"admin\" ?\r\n                  <Box my={2}>\r\n                    <Grid container xs={12} style={{ backgroundColor: \"#D4D5F5\", borderRadius: \"8px\" }}>\r\n                      <Grid container direction=\"column\" xs={8} justify=\"center\">\r\n                        <Box mx={8} my={5}>\r\n                          <Grid container>\r\n                            <Typography style={{ fontSize: 40, fontWeight: 450 }}>Học tập cùng <span style={{ fontSize: 40, color: \"#2C31CF\" }}>chuyên gia</span>,</Typography>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <Typography style={{ fontSize: 22, fontWeight: 450 }}>tham gia khoá học lập trình để nâng cao kỹ năng bản thân!</Typography>\r\n                          </Grid>\r\n                          <Grid container>\r\n                            <FormControl style={{ width: '100%', marginTop: 10 }}>\r\n                              <TextField id=\"outlined-basic\"\r\n                                placeholder=\"Nhập nội dung tìm kiếm\"\r\n                                variant=\"outlined\"\r\n                                value={keyword}\r\n                                style={{ backgroundColor: \"white\", borderRadius: 4, }}\r\n                                onChange={this.onHandleSearch}\r\n                                InputProps={{\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      <SearchIcon />\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n                            </FormControl>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} justify=\"center\" alignItems=\"center\">\r\n                        <Box mx={8} my={5}>\r\n                          <img\r\n                            className={classes.img}\r\n                            style={{\r\n                              width: \"200\",\r\n                              height: \"200\",\r\n                              objectFit: \"cover\",\r\n                              borderRadius: \"8px\"\r\n                            }}\r\n                            alt=\"complex\"\r\n                            src={\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/course/course-head.png\"}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  :\r\n                  \"\"\r\n                }\r\n                {this.props.user.role === \"admin\" ?\r\n                  <React.Fragment>\r\n                    <Grid container spacing={3}>\r\n                      {coursesTemp.map((course) =>\r\n                        <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                          {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                            <CourseItem course={course} />\r\n                          {/* </Link> */}\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                  : (\r\n                    <React.Fragment>\r\n                      {\r\n                        lap_trinh_co_so_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Lập trình cơ sở\")}\r\n                            <Grid container spacing={4}>\r\n                              {lap_trinh_co_so_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        lap_trinh_nang_cao_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Lập trình nâng cao\")}\r\n                            <Grid container spacing={4}>\r\n                              {lap_trinh_nang_cao_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        giai_quyet_van_de_list.length === 0 ? \"\" :\r\n                          <React.Fragment>\r\n                            {this.renderCourseTypeTitle(\"Giải quyết vấn đề\")}\r\n                            <Grid container spacing={4}>\r\n                              {giai_quyet_van_de_list.map((course) =>\r\n                                <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                  <Grid key={course.id} item xs={12} sm={3} md={3}>\r\n                                    {/* <Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}> */}\r\n                                      <CourseItem course={course} />\r\n                                    {/* </Link> */}\r\n                                  </Grid>\r\n                                </Fade>\r\n                              )}\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                      }\r\n                      {\r\n                        (giai_quyet_van_de_list.length === 0 && lap_trinh_co_so_list.length === 0 && lap_trinh_nang_cao_list.length === 0) ?\r\n                          <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                            <React.Fragment>\r\n                              <Box p={2} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <img\r\n                                  className={classes.img}\r\n                                  style={{\r\n                                    width: \"350px\",\r\n                                    height: \"500\",\r\n                                    // objectFit: \"cover\",\r\n                                    borderRadius: \"8px\"\r\n                                  }}\r\n                                  alt=\"complex\"\r\n                                  src={\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"}\r\n                                />\r\n                              </Box>\r\n                              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Typography style={{ fontSize: 20, fontWeight: 1000 }}>Không tìm thấy dữ liệu</Typography>\r\n                              </Box>\r\n                            </React.Fragment>\r\n                          </Fade>\r\n                          : \"\"\r\n                      }\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n                {/* <Grid container spacing={2}>\r\n            {courses.map((course) => <Grid key={course.id} item xs={12} sm={4} md={4}><Link style={{ textDecoration: 'none' }} to={`${url}/courses/${course.id}/tasks`}><CourseItem course={course} /></Link></Grid>)}\r\n          </Grid> */}\r\n              </Grid></React.Fragment>)}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, { getUser })(CourseBody));\r\n","import React, { Component } from 'react';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nclass CardUser extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid container xs={12} spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <CardMedia\r\n                                style={{ borderRadius: '50%' }}\r\n                                component=\"img\"\r\n                                alt=\"avatar\"\r\n                                width=\"65\"\r\n                                height=\"65\"\r\n                                src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Typography gutterBottom variant=\"button\" component=\"h2\">\r\n                                {user.firstname + \" \" + user.lastname}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: \"#DB3B56\", fontWeight: \"800\" }}>\r\n                                {user.codepoint} điểm\r\n                        </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardUser;","import React, { Component } from 'react';\r\nimport { lighten, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst BorderLinearProgress = withStyles({\r\n    root: {\r\n        height: 10,\r\n        backgroundColor: lighten('#ff6c5c', 0.5),\r\n    },\r\n    bar: {\r\n        borderRadius: 20,\r\n        backgroundColor: '#ff6c5c',\r\n    },\r\n})(LinearProgress);\r\n\r\nclass UserInfo extends Component {\r\n    render() {\r\n        const { totalCourse, userCourse, minitaskInfo, fightInfo } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid xs={12} container spacing={10}>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Khóa học\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {userCourse.length + \"/\" + totalCourse}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={(userCourse.length / totalCourse) * 100}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Luyện tập\r\n                            </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {minitaskInfo.solved + \"/\" + (minitaskInfo.total_easy + minitaskInfo.total_hard + minitaskInfo.total_medium)}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={(minitaskInfo.solved / (minitaskInfo.total_easy + minitaskInfo.total_hard + minitaskInfo.total_medium)) * 100}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} md={4}>\r\n                            <Box>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 20, fontWeight: 550 }}>\r\n                                    Cuộc thi\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box mb={1}>\r\n                                <Typography variant=\"h4\" style={{ fontSize: 30, fontWeight: 600, color: \"#3B3B3B\" }}>\r\n                                    {(fightInfo.total_private_joined_fight + fightInfo.total_public_joined_fight)+\"/\"+(fightInfo.total_private_fight + fightInfo.total_public_fight)}\r\n                            </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <BorderLinearProgress\r\n                                    variant=\"determinate\"\r\n                                    color=\"secondary\"\r\n                                    value={30}\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    Fade,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { minitask } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                    <Grid item zeroMinWidth xs={4} md={4} sm={4}>\r\n                        <Box p={3} boxShadow={3}>\r\n                            <Link\r\n                                className=\"item\"\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to={`/minitask/${minitask.id}`}\r\n                            >\r\n                                <Grid container justify=\"center\" alignContent=\"center\">\r\n                                    <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n                                        <Typography noWrap variant=\"h3\" style={{ fontSize: 18, fontWeight: 600, color: \"#3B3B3B\" }}>{minitask.name_func}</Typography>\r\n                                    </Tooltip>\r\n\r\n                                </Grid>\r\n                            </Link>\r\n                            <Box display=\"flex\" p={2} justifyContent=\"center\">\r\n                                {this.renderLevel(minitask.level)}\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Fade>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    CardMedia,\r\n    Typography,\r\n    Box,\r\n    Button\r\n} from '@material-ui/core'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Fight extends Component {\r\n    render() {\r\n        const { fight } = this.props;\r\n        return (\r\n            <Grid item container xs={6} md={6} sm={6}>\r\n                <Paper style={{ width: '100%' }}>\r\n                    <Grid container xs={12}>\r\n                        <Box>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Fight img\"\r\n                                height=\"200\"\r\n                                src={fight.backgroud_img}\r\n                                title=\"Fight img\"\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Box mx={2} mb={1}>\r\n                        <Grid container xs={12}>\r\n                            <Grid xs={12} container>\r\n                                <Box my={2}>\r\n                                    <Typography style={{ fontSize: 32, fontWeight: 400 }}>\r\n                                        {fight.fight_name}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid xs={12} container>\r\n                                <Typography noWrap style={{ fontSize: 18, fontWeight: 200 }}>\r\n                                    {fight.fight_desc}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs={12}>\r\n                            <Grid xs={6} container>\r\n                                <Box my={3} mb={1}>\r\n                                    <Typography style={{ fontSize: 18, fontWeight: 600 }}>\r\n                                        Đã đăng ký {fight.numbers_std} đội\r\n                                </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid xs={6} container justify=\"flex-end\" alignItems=\"center\">\r\n                                <Box my={3} mb={1}>\r\n                                    <Button variant=\"contained\" onClick={this.handleJoinFight} style={{ backgroundColor: \"#E8505B\" }}\r\n                                    component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                                        <Typography variant=\"button\" style={{ color: \"white\" }}>Code ngay</Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fight;","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardUser from './CardUser';\r\nimport UserInfo from './UserInfo';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CourseItem from \"../course/CourseItem\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Minitask from './Minitask';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Fight from './Fight';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box >{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  paper: {\r\n    padding: 16,\r\n    // marginTop: 16,\r\n    minHeight: 200\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    // width: \"100%\",\r\n\r\n    height: 180,\r\n    objectFit: \"cover\"\r\n  }\r\n};\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      courses: [],\r\n      events: [],\r\n      books: [],\r\n      daily_minitask: {},\r\n      isLoadingCoursePassInfo: true,\r\n      totalCourse: 0,\r\n      chartInfo: [],\r\n      newestCourse: [],\r\n      tab: 0,\r\n      threeRandomMinitask: [],\r\n      user_fight_info: {},\r\n      twoNewestFights: [],\r\n    };\r\n    this.getApi = this.getApi.bind(this);\r\n  }\r\n\r\n  handleChangeTab = (event, newValue) => {\r\n    this.setState({ tab: newValue });\r\n  }\r\n\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/auth/usercourse`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses);\r\n        this.setState({ courses: courses.course_info });\r\n        var c = this.state.courses;\r\n        this.state.courses.forEach((e, i) => {\r\n          axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${e.course_id}`).then(res => {\r\n            // console.log(\"[CoursePass]\");\r\n            // console.log(res.data);\r\n            // c[i].progress = res.data.minitask_solved +\"/\"+res.data.total_minitask\r\n            c[i].completed_tasks_count = res.data.minitask_solved\r\n            c[i].total_tasks_count = res.data.total_minitask\r\n            this.setState({ courses: c, isLoadingCoursePassInfo: false });\r\n          });\r\n        });\r\n      }).catch(err => {\r\n        console.log(err);\r\n      }),\r\n\r\n      axios.get(`http://localhost:8081/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/dailyminitask`).then(res => {\r\n        const daily_minitasks = res.data;\r\n        console.log(daily_minitasks);\r\n        this.setState({ daily_minitasks: daily_minitasks });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/totalCourse`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ totalCourse: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ chartInfo: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/getNewestCourse`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ newestCourse: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/get3RandomMinitask`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ threeRandomMinitask: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/user-fight-info/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_fight_info: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/2NewestFights/`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ twoNewestFights: res.data });\r\n      }),\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    document.title = \"Lập trình mỗi ngày để trở thành lập trình viên ưu tú\";\r\n    this.getApi();\r\n  }\r\n\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    console.log(minitask.level);\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isLoadingCoursePassInfo, totalCourse, chartInfo, courses, newestCourse, tab, threeRandomMinitask, user_fight_info, twoNewestFights } = this.state;\r\n    const { classes } = this.props;\r\n    let url = this.props.url;\r\n    const newestCourseList = newestCourse.map((course, i) => {\r\n      return <Grid item xs={12} sm={3} md={3}>\r\n        <Typography variant=\"subtitle1\">\r\n          <CourseItem course={course} page={\"overview\"} />\r\n        </Typography>\r\n      </Grid>\r\n    });\r\n\r\n    const threeRandomMinitaskList = threeRandomMinitask.map((minitask, i) => {\r\n      return <Minitask minitask={minitask} />\r\n    });\r\n\r\n    const twoNewestFightsList = twoNewestFights.map((fight, index) => {\r\n      return <Fight fight={fight} />\r\n    });\r\n\r\n    return (\r\n      <Grid spacing={2}>\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <Box my={2} mx={1}>\r\n                    <Typography variant=\"h5\" style={{ fontSize: 18, fontWeight: 450 }}>Xin chào <span style={{ fontSize: 18, color: \"#DB3B56\" }}>{this.props.user.firstname}</span>.\r\n                    Chào mừng bạn đến với Hocode, tiếp tục khám phá nhé!</Typography>\r\n                  </Box>\r\n                  <Box my={4} mx={1}>\r\n                    <Grid container>\r\n                      <Grid item xs={3} md={3} sm={3}>\r\n                        <CardUser user={this.props.user} />\r\n                      </Grid>\r\n                      <Grid item xs={9} md={9} sm={9}>\r\n                        <UserInfo totalCourse={totalCourse} userCourse={courses} minitaskInfo={chartInfo} fightInfo={user_fight_info} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Khóa học</Typography>\r\n              </Box>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={tab} onChange={this.handleChangeTab} style={{ color: \"#3B3B3B\", backgroundColor: \"white\" }}>\r\n                  <Tab label={<Typography style={{ fontSize: 18, fontWeight: 500, textTransform: 'none' }}>Khóa học gợi ý</Typography>} />\r\n                  <Tab label={<Typography style={{ fontSize: 18, fontWeight: 500, textTransform: 'none' }}>Đang học ({courses.length})</Typography>} />\r\n                </Tabs>\r\n              </AppBar>\r\n              <TabPanel value={tab} index={0}>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Grid container xs={12} spacing={2}>\r\n                        {newestCourseList}\r\n                      </Grid>\r\n                      <Box my={3} mr={1}>\r\n                        <Grid container xs={12} spacing={2} justify=\"flex-end\">\r\n                          <Link\r\n                            style={{ textDecoration: 'none' }}\r\n                            className=\"item\"\r\n                            to={\"/profile/course\"}\r\n                          >\r\n                            <Typography style={{ fontSize: 18, fontWeight: 400, textTransform: 'none' }}>Xem tất cả</Typography>\r\n                          </Link>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Fade>\r\n              </TabPanel>\r\n              <TabPanel value={tab} index={1}>\r\n                <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                  <Grid item xs={12} sm={12} md={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Grid container style={{ marginBottom: 15 }}>\r\n                        <Grid item style={{ flexGrow: 1 }}>\r\n                          <div style={{ fontWeight: \"bold\" }}>Khóa học đã tham gia</div>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                      {this.state.courses.length === 0 ? (\r\n                        <div style={{}}>Bạn chưa tham gia khóa học nào.</div>\r\n                      ) : (\r\n                          this.state.courses.map(course => {\r\n                            return (\r\n                              <React.Fragment key={course.course_id}>\r\n                                <Grid\r\n                                  container\r\n                                  style={{ alignItems: \"center\", flexWrap: \"unset\" }}\r\n                                >\r\n                                  <Grid item>\r\n                                    <img\r\n                                      className={classes.img}\r\n                                      style={{\r\n                                        width: \"50px\",\r\n                                        height: \"50px\",\r\n                                        objectFit: \"cover\",\r\n                                        borderRadius: \"8px\"\r\n                                      }}\r\n                                      alt=\"complex\"\r\n                                      src={course.background_image}\r\n                                    />\r\n                                  </Grid>\r\n                                  <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                                    <Tooltip title=\"Tên chủ đề\" placement=\"top\">\r\n                                      <div style={{ fontWeight: \"bold\" }}>\r\n                                        <Link\r\n                                          className=\"item\"\r\n                                          key={course.course_id}\r\n                                          style={{ textDecoration: \"none\" }}\r\n                                          to={`${url}/courses/${course.course_id}/tasks`}\r\n                                        >\r\n                                          <Typography variant=\"subtitle1\">\r\n                                            {course.course_name}\r\n                                          </Typography>\r\n                                        </Link>\r\n                                      </div>\r\n                                    </Tooltip>\r\n                                    <Tooltip\r\n                                      title=\"Số lượng bài học đã hoàn thành\"\r\n                                      placement=\"top\"\r\n                                    >\r\n                                      {isLoadingCoursePassInfo ?\r\n                                        <CircularProgress size={22} color=\"black\" />\r\n                                        :\r\n                                        <div style={{ color: \"#9d9d9d\" }}>\r\n                                          {course.completed_tasks_count}/\r\n                                      {course.total_tasks_count}\r\n                                        </div>}\r\n                                    </Tooltip>\r\n                                  </Grid>\r\n                                  <Grid item>\r\n                                    <Tooltip title=\"Tiến độ\" placement=\"top\">\r\n                                      <LinearProgress\r\n                                        variant=\"determinate\"\r\n                                        value={\r\n                                          (course.completed_tasks_count /\r\n                                            course.total_tasks_count) *\r\n                                          100\r\n                                        }\r\n                                        style={{ width: 115 }}\r\n                                      />\r\n                                    </Tooltip>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Divider style={{ margin: \"auto\" }} />{\" \"}\r\n                              </React.Fragment>\r\n                            );\r\n                          })\r\n                        )}\r\n                    </Paper>\r\n                  </Grid>\r\n                </Fade>\r\n              </TabPanel>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Cuộc thi lập trình</Typography>\r\n              </Box>\r\n              <Grid container xs={12} spacing={2}>\r\n                {twoNewestFightsList}\r\n                <Grid container xs={12} spacing={2} justify=\"flex-end\">\r\n                  <Box my={3} mr={1}>\r\n                    <Link\r\n                      style={{ textDecoration: 'none' }}\r\n                      className=\"item\"\r\n                      to={\"/profile/contest\"}\r\n                    >\r\n                      <Typography style={{ fontSize: 18, fontWeight: 400, textTransform: 'none' }}>Xem tất cả</Typography>\r\n                    </Link>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Box my={2}>\r\n                <Typography variant=\"h3\" style={{ fontSize: 30, fontWeight: 500, color: \"#3B3B3B\" }}>Luyện tập hàng ngày</Typography>\r\n              </Box>\r\n              <Grid container xs={12} spacing={2}>\r\n                <Grid item xs={8} md={8} sm={8}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container xs={12}>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#7BC043\" }}>{chartInfo.easy + \"/\" + chartInfo.total_easy}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Đơn giản</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#FAA05E\" }}>{chartInfo.medium + \"/\" + chartInfo.total_medium}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Trung bình</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={4} md={4} sm={4}>\r\n                        <Box p={2}>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 25, fontWeight: 400, color: \"#F1646C\" }}>{chartInfo.hard + \"/\" + chartInfo.total_hard}</Typography>\r\n                          <Typography variant=\"h3\" style={{ fontSize: 28, fontWeight: 100, color: \"#3B3B3B\" }}>Phức tạp</Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Box mt={1}>\r\n                      <Grid container style={{ marginBottom: 15 }}>\r\n                        <Grid item style={{ flexGrow: 1 }}>\r\n                          <div style={{ fontWeight: \"bold\" }}>Bài tập cho hôm nay</div>{\" \"}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                    <Grid container xs={12} spacing={1}>\r\n                      {threeRandomMinitaskList}\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={4} md={4} sm={4}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container style={{ marginBottom: 15 }}>\r\n                      <Grid item style={{ flexGrow: 1 }}>\r\n                        <div style={{ fontWeight: \"bold\" }}>Thách thức mới</div>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                    {this.state.daily_minitasks.map(daily_minitask => {\r\n                      return (\r\n                        <React.Fragment key={daily_minitask.id}>\r\n                          <Grid\r\n                            container\r\n                            style={{ alignItems: \"center\", flexWrap: \"unset\" }}\r\n                          >\r\n                            {/* <Grid item>\r\n                              <img\r\n                                className={classes.img}\r\n                                style={{\r\n                                  width: \"50px\",\r\n                                  height: \"50px\",\r\n                                  objectFit: \"cover\",\r\n                                  borderRadius: \"8px\"\r\n                                }}\r\n                                alt=\"complex\"\r\n                                src={daily_minitask.avatar}\r\n                              />\r\n                            </Grid> */}\r\n                            <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                              <div style={{ fontWeight: \"bold\" }}>\r\n                                <Link\r\n                                  className=\"item\"\r\n                                  style={{ textDecoration: \"none\" }}\r\n                                  to={`/minitask/${daily_minitask.id}`}\r\n                                >\r\n                                  {daily_minitask.mini_task_name}\r\n                                </Link>\r\n                              </div>\r\n                              <div\r\n                                style={{ display: \"flex\", alignItems: \"center\" }}\r\n                              >\r\n                                <Tooltip title=\"Số đậu\" placement=\"top\">\r\n                                  <div style={{ color: \"#9d9d9d\" }}>\r\n                                    Số đậu: {daily_minitask.code_point}\r\n                                  </div>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                  <div style={{ marginLeft: 10 }}>\r\n                                    {this.renderLevelMinitaskChip(daily_minitask)}\r\n                                  </div>\r\n                                </Tooltip>\r\n                              </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"auto\" }} />{\" \"}\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(Overview));\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./certificate.css\";\r\nconst styles = {};\r\n\r\nclass Certificate extends Component {\r\n  componentDidMount() {\r\n    // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n    // const currentParams = getParams(location.pathname);\r\n    // console.log(currentParams);\r\n    // axios\r\n    //   .get(\r\n    //     `http://localhost:8081/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n    //   )\r\n    //   .then(res => {\r\n    //     console.log(res.data);\r\n    //     const tasks = res.data;\r\n    //     let tasks1 = tasks.reverse();\r\n    //     this.setState({ tasks: tasks1, isLoading: false });\r\n    //   });\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const Certificate = this.props.Certificate;\r\n\r\n    //   const { isLoading } = this.state;\r\n    return (\r\n      <Grid\r\n        style={{\r\n          minWidth: \"1000px\",\r\n          minHeight: \"700px\",\r\n          background: `url(\"/certificateBackground.jpg\") no-repeat`,\r\n          backgroundSize: \"100%\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <div  className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\" style={{marginLeft: 100, marginTop: 80}}>\r\n                <img src=\"../logo_HCMUTE.png\" alt=\"\" height=\"80\" width=\"80\" />\r\n            </div>\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\" style={{position: 'absolute',right: 100, top: 80}}>\r\n                <img src=\"../logo.png\" alt=\"\" height=\"80\" width=\"80\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <Grid\r\n          container\r\n          style={{\r\n            justifyContent: \"center\",\r\n           \r\n            position: \"absolute\",\r\n            top:\"37%\"\r\n          }}\r\n        >\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <p\r\n              style={{ fontFamily: `'Dancing Script', cursive`, fontSize: 40, margin:\"15px 0px\", textAlign: \"center\",}}\r\n            >\r\n              {Certificate.user === undefined ?\"\":Certificate.user.lastname} {Certificate.user === undefined ?\"\":Certificate.user.firstname}\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} style={{margin:\"0px 135px\"}}>\r\n            {\" \"}\r\n            \r\n            <div><p style={{ fontFamily: `'Dancing Script', cursive`, fontSize:30,margin:\"20px 0px\", textAlign:\"center\"}}>For successfully completion of Java program following Hocode qualification .</p></div>\r\n            <div><p style={{ margin:\"20px 0px\", textAlign:\"center\",textTransform:\"uppercase\",fontWeight:\"bold\",fontSize:20}}>ID:  {Certificate.cert === undefined ?\"\":Certificate.cert.search_id}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",left:\"22%\",bottom:\"14%\",transform:\"translateX(-50%)\"}}>\r\n        {Certificate.cert === undefined ?\"\":new Date(Certificate.cert.timestamp).toLocaleDateString()}\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",right:\"20%\",bottom:\"10%\",transform:\"translateX(50%)\"}}>\r\n        {Certificate.config === undefined ?\"\": <img src={Certificate.config.electronic_signature} style={{height:90}} alt=\"electronic_signature\"/>}\r\n           \r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, {})(Certificate)\r\n);\r\n","import React, { Component } from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Course extends Component {\r\n    render() {\r\n        const { name, rating, backgroundImage, id } = this.props;\r\n\r\n        return (\r\n            <Grid item xs={12} sm={4} md={4}>\r\n                <Card>\r\n                    <CardMedia\r\n                        style={{ height: '150px' }}\r\n                        image={backgroundImage}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent container>\r\n                        <Link\r\n                            className=\"item\"\r\n                            key={id}\r\n                            style={{ textDecoration: \"none\" }}\r\n                            to={`/profile/courses/${id}/tasks`}\r\n                        >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {name}\r\n                            </Typography>\r\n                        </Link>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Rating name=\"read-only\" value={rating} precision={0.5} readOnly />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Typography variant=\"caption\"></Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { status, level, name, minitask } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box mx={2}>\r\n                    <Divider />\r\n                    <Box>\r\n                        <Grid container mx={2}>\r\n                            <ListItem button component={props => <Link to={`/minitask/${minitask.id}`} {...props} />}>\r\n                                <Grid xs={2} md={2} sm={2}>\r\n                                    {this.renderStatus(status)}\r\n                                </Grid>\r\n                                <Grid container xs={6} md={6} sm={6}>\r\n                                    <Typography noWrap variant=\"button\">{name}</Typography>\r\n                                </Grid>\r\n                                <Grid xs={4} md={4} sm={4}>\r\n                                    {this.renderLevel(level)}\r\n                                </Grid>\r\n                            </ListItem>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Divider />\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Minitask from './Minitask';\r\nimport axios from 'axios';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    Chart,\r\n    PieSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nclass Practice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            user_minitask: [],\r\n            user_minitask_favourite: [],\r\n            isLoading: true,\r\n            chartInfo: [],\r\n            data: [],\r\n            allTask: [],\r\n            tab: 0\r\n        });\r\n    }\r\n\r\n    handleChangeTab = (event, newValue) => {\r\n        this.setState({ tab: newValue });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskPractice`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ user_minitask: res.data });\r\n        });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskFavouriteList`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ user_minitask_favourite: res.data });\r\n        });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`)\r\n            .then(res => {\r\n                console.info(res.data)\r\n                const chartInfo = res.data;\r\n                const data = [\r\n                    { key: 'Medium', value: chartInfo.medium },\r\n                    { key: 'Hard', value: chartInfo.hard },\r\n                    { key: 'Easy', value: chartInfo.easy },\r\n                ];\r\n\r\n                const allTask = [\r\n                    { key: 'Todo', value: chartInfo.todo - (chartInfo.solved + chartInfo.attempted) },\r\n                    { key: 'Attempted', value: chartInfo.attempted },\r\n                    { key: 'Solved', value: chartInfo.solved },\r\n                ];\r\n\r\n                this.setState({\r\n                    data,\r\n                    allTask,\r\n                    chartInfo,\r\n                    isLoading: false\r\n                }, () => {\r\n                    console.log(this.state.data);\r\n                    console.log(this.state.allTask);\r\n                })\r\n            });\r\n    }\r\n\r\n    renderLevel = (color, nums) => {\r\n        return <Box style={{ position: 'relative' }} >\r\n            <img\r\n                component=\"img\"\r\n                style={{ color: \"red\" }}\r\n                height=\"100\"\r\n                width=\"100\"\r\n                alt=\"\"\r\n                src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources-cdn/Images/cv/badge-created.svg?v=4\"\r\n            />\r\n            <div style={{\r\n                position: 'absolute',\r\n                color: 'black',\r\n                left: '50%',\r\n                top: '28%',\r\n                transform: 'translateX(-50%)'\r\n            }} >\r\n                <Box>\r\n                    <Typography variant=\"h4\" style={{ color: color }}>\r\n                        {nums}\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <FavoriteIcon style={{ color: color }} />\r\n                </Box>\r\n            </div>\r\n        </Box>\r\n    }\r\n\r\n    renderMinitaskInfo = (level, nums) => {\r\n        var color = \"\", title = \"\";\r\n        if (level === \"easy\") {\r\n            color = \"#7BC043\";\r\n            title = \"đơn giản\";\r\n        }\r\n        else if (level === \"medium\") {\r\n            color = \"#F69046\";\r\n            title = \"trung bình\";\r\n        }\r\n        else if (level === \"hard\") {\r\n            color = \"#EE4035\";\r\n            title = \"phức tạp\";\r\n        }\r\n        return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1400 } : {})}>\r\n            <Grid item xs={4}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box>\r\n                        {this.renderLevel(color, nums)}\r\n                    </Box>\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box>\r\n                        <Typography variant=\"overline\">{nums} bài {title}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Fade>\r\n    }\r\n\r\n    render() {\r\n        const { user_practice_info } = this.props;\r\n        const { user_minitask, user_minitask_favourite, isLoading, chartInfo, data: chartData, tab } = this.state;\r\n        const minitaskList = user_minitask.map((minitask, i) => {\r\n            return <Fade in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}>\r\n                <Minitask minitask={minitask} name={minitask.mini_task_name} status={minitask.status} level={minitask.level} />\r\n            </Fade>;\r\n        });\r\n        const user_minitask_favourite_list = user_minitask_favourite.map((minitask, i) => {\r\n            return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1500 } : {})}>\r\n                <Minitask minitask={minitask} name={minitask.mini_task_name} status={minitask.status} level={minitask.level} />\r\n            </Fade>;\r\n        });\r\n        return (\r\n            <Box mt={1}>\r\n                {isLoading ?\r\n                    <Box p={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    </Box>\r\n                    :\r\n                    <React.Fragment>\r\n                        <AppBar position=\"static\" style={{backgroundColor:\"white\", color: \"#3B3B3B\"}}>\r\n                            <Tabs value={tab} onChange={this.handleChangeTab}\r\n                             aria-label=\"simple tabs example\" centered>\r\n                                <Tab label=\"Luyện tập\" />\r\n                                <Tab label=\"Yêu thích\" />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel value={tab} index={0}>\r\n                            <Paper\r\n                            // style={{\r\n                            //     minHeight: 250,\r\n                            //     // overflowY: \"auto\",\r\n                            //     display: \"flex\",\r\n                            //     flexDirection: \"column\"\r\n                            // }}\r\n                            >\r\n                                <Grid container xs={12}>\r\n                                    <Grid container item style={{ flexGrow: 1 }}>\r\n                                        <Box p={2}>\r\n                                            <Typography noWrap variant=\"h6\" component=\"h1\">Luyện tập</Typography>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Box p={2}>\r\n                                    <Grid container spacing={3}>\r\n                                        {this.renderMinitaskInfo(\"easy\", user_practice_info.easy)}\r\n                                        {this.renderMinitaskInfo(\"medium\", user_practice_info.medium)}\r\n                                        {this.renderMinitaskInfo(\"hard\", user_practice_info.hard)}\r\n                                        {/* {this.renderMinitaskInfo(\"easy\",(user_practice_info.total))} */}\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box mx={2}>\r\n                                    <Divider />\r\n                                </Box>\r\n                                <Grid container>\r\n                                    <Grid item xs={7}>\r\n                                        <Box p={2}>\r\n                                            <Typography variant=\"h6\" component=\"h1\">Đã tham gia ({user_minitask.length})</Typography>\r\n                                        </Box>\r\n                                        <Box mb={2}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    {minitaskList}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        {/* <Box p={2}>\r\n                                    <Typography variant=\"h6\" component=\"h1\">Thích ({user_minitask_favourite_list.length})</Typography>\r\n                                </Box>\r\n                                <Box mb={2}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            {user_minitask_favourite_list}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box> */}\r\n                                        <Paper style={{ backgroundColor: \"#FAFAFA\" }}>\r\n                                            <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"h5\">SỐ BÀI ĐÃ LÀM</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {chartInfo.easy === 0 && chartInfo.medium === 0 && chartInfo.hard === 0 ?\r\n                                                <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Typography variant=\"button\">Bạn chưa thực hiện bài thực hành nào</Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                :\r\n                                                <Chart\r\n                                                    data={chartData}\r\n                                                >\r\n                                                    <PieSeries\r\n                                                        valueField=\"value\"\r\n                                                        argumentField=\"key\"\r\n                                                        innerRadius={0.6}\r\n                                                    />\r\n                                                    {/* <Title\r\n                                                text=\"SỐ BÀI ĐÃ LÀM\"\r\n                                            /> */}\r\n                                                    <Animation />\r\n                                                </Chart>\r\n                                            }\r\n                                            <Box display=\"flex\" justifyContent=\"center\" p={2} alignItems=\"center\">\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#9CCC65\" }}>\r\n                                                        Easy: {chartInfo.easy + \"/\" + chartInfo.total_easy}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#42A5F5\" }}>\r\n                                                        Medium: {chartInfo.medium + \"/\" + chartInfo.total_medium}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box mx={1}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#FF7043\" }}>\r\n                                                        Hard: {chartInfo.hard + \"/\" + chartInfo.total_hard}\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </TabPanel>\r\n                        <TabPanel value={tab} index={1}>\r\n                            <Box mb={2}>\r\n                                <Paper\r\n                                // style={{\r\n                                //     minHeight: 250,\r\n                                //     // overflowY: \"auto\",\r\n                                //     display: \"flex\",\r\n                                //     flexDirection: \"column\"\r\n                                // }}\r\n                                >\r\n                                    <Box p={2}>\r\n                                        <Typography variant=\"h6\" component=\"h1\">Thích ({user_minitask_favourite_list.length})</Typography>\r\n                                    </Box>\r\n                                    {user_minitask_favourite_list.length === 0 ?\r\n                                        <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                            <Box>\r\n                                                <Typography variant=\"h2\">Bạn chưa thích bài nào</Typography>\r\n                                            </Box>\r\n                                        </Box>\r\n                                        :\r\n                                        <Box p={2}>\r\n                                            <Grid container>\r\n                                                <Grid item xs={12}>\r\n                                                    {user_minitask_favourite_list}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    }\r\n                                </Paper>\r\n                            </Box>\r\n                        </TabPanel>\r\n                    </React.Fragment>\r\n                }\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Practice;","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Divider from \"@material-ui/core/Divider\";\r\nimport Certificate from \"./Certificate\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Course from './Course';\r\nimport Practice from './Practice';\r\nimport Slide from '@material-ui/core/Fade';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n// const styles = {};\r\n\r\nclass PrintBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitasks: [],\r\n      openDialogCertificate: false,\r\n      isLoading: true,\r\n      certificateViewStart: {},\r\n      certificate: {},\r\n      review_point: 0,\r\n      user_codepoint: 0,\r\n      isLoadingCert: false,\r\n      user_course: [],\r\n      user_practice_info: {},\r\n    };\r\n  }\r\n\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      // axios\r\n      //   .get(`http://localhost:8081/api/v1/curd/configs/byname/hocode`)\r\n      //   .then(res => {\r\n      //     console.log(res.data);\r\n      //     const certificateConfig = res.data;\r\n\r\n      //     this.setState({ review_point: certificateConfig.review_point });\r\n      //   }),\r\n      axios.get(\"http://localhost:8081/auth/userinfo\").then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_codepoint: res.data.codepoint });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/auth/viewcert`).then(res => {\r\n        const certificate = res.data;\r\n        console.log(res.data);\r\n        this.setState({ certificateViewStart: certificate });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/auth/usercourseProfile`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_course: res.data });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`).then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_practice_info: res.data })\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  getCertificate = async () => {\r\n    this.setState({ isLoadingCert: true });\r\n    this.setState({\r\n      openDialogCertificate: true\r\n    });\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/auth/reviewcert`).then(res => {\r\n        const certificate = res.data;\r\n        console.log(res.data);\r\n        this.setState({ certificateViewStart: certificate });\r\n        this.setState({ isLoadingCert: false });\r\n\r\n      })\r\n    ]);\r\n  };\r\n  handleDialogCertificateOpen = () => {\r\n    this.setState({\r\n      openDialogCertificate: true\r\n    });\r\n    //this.getCertificate();\r\n  };\r\n  handleDialogCertificateCheck = () => {\r\n\r\n    this.getCertificate();\r\n  };\r\n\r\n  handleDialogCertificateClose = () => {\r\n    this.setState({ openDialogCertificate: false });\r\n  };\r\n  renderButtonCertificate(certificateViewStart) {\r\n    if (certificateViewStart.cert !== undefined) {\r\n      if (certificateViewStart.cert.status === \"Inactive\" || certificateViewStart.cert.status === \"\") {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateCheck}\r\n          >\r\n            Xét chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n      else if (certificateViewStart.cert.status === \"Active\") {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateOpen}\r\n          >\r\n            Xem chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n            onClick={this.handleDialogCertificateOpen}\r\n            disabled={true}\r\n          >\r\n            Đang xét chứng chỉ\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  renderDialog = (certificate) => {\r\n    if (certificate.cert !== undefined) {\r\n      if (certificate.cert.status === \"Inactive\" || certificate.cert.status === \"\") {\r\n        return (\r\n          <DialogContent dividers>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{ marginLeft: 4, textAlign: \"center\" }}\r\n            >\r\n              Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n              {this.state.review_point}\r\n            </Typography>\r\n          </DialogContent>\r\n        )\r\n      }\r\n      else if (certificate.cert.status === \"Active\") {\r\n        return (<>\r\n\r\n          <DialogContent dividers>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Certificate\r\n                  ref={el => (this.CertificateRef = el)}\r\n                  Certificate={this.state.certificateViewStart}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.handleDialogCertificateClose}\r\n          >\r\n            <Grid\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <ReactToPrint\r\n                trigger={() => (\r\n                  <Button\r\n                    style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    In chứng chỉ\r\n                  </Button>\r\n                )}\r\n                content={() => this.CertificateRef}\r\n              />\r\n            </Grid>\r\n          </DialogTitle>\r\n        </>)\r\n      }\r\n      else {\r\n        return (\r\n          <DialogContent dividers>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              style={{ marginLeft: 4, textAlign: \"center\" }}\r\n            >\r\n              Đã gửi yêu cầu xét chứng chỉ.\r\n            </Typography>\r\n          </DialogContent>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const { user_course, user_practice_info } = this.state;\r\n    const courseList = user_course.map((course, i) => {\r\n      return <Slide in={true} direction=\"down\" {...(true ? { timeout: 1500 } : {})}>\r\n        <Course id={course.id} name={course.course_name} backgroundImage={course.background_image} rating={course.rating_value} />\r\n      </Slide>\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                style={{ height: \"100%\", maxHeight: \"352px\" }}\r\n              >\r\n                <Grid item xs={12} sm={4} md={4}>\r\n                  <Paper\r\n                    style={{\r\n                      height: \"351px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\"\r\n                    }}\r\n                  >\r\n                    <Grid container direction=\"row\">\r\n                      <Grid item xs={12} md={12} sm={12}>\r\n                        <Grid item xs={12} md={12} sm={12}>\r\n                          <Box display=\"flex\" p={1} bgcolor=\"grey.300\">\r\n                            <Box mr={1} mt={1} flexGrow={1}>\r\n                              <PersonIcon fontSize=\"large\" />\r\n                            </Box>\r\n                            <Box mt={1} flexGrow={6}>\r\n                              <Typography variant=\"h5\">Thông tin cá nhân</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <IconButton color=\"primary\" aria-label=\"Edit\">\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </Box>\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} sm={12}>\r\n                          <Grid container xs={12}>\r\n                            <Grid item xs={4} md={4} sm={4} borderColor=\"grey.500\">\r\n                              <Box p={1}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Contemplative Reptile\"\r\n                                  height=\"100\"\r\n                                  src={this.props.user.avatar}\r\n                                  title=\"Contemplative Reptile\"\r\n                                />\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item xs={8} md={8} sm={8} borderColor=\"grey.500\">\r\n                              <Grid item container xs={12} md={12} sm={12}>\r\n                                <Typography noWrap variant=\"overline\">\r\n                                  Họ và tên: {this.props.user.lastname}{\" \"}\r\n                                  {this.props.user.firstname}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item container xs={12} md={12} sm={12}>\r\n                                <Typography noWrap variant=\"overline\">Email: {this.props.user.email}</Typography>\r\n                              </Grid>\r\n                              <Grid item container xs={12} md={12} sm={12} zeroMinWidth>\r\n                                <Typography noWrap variant=\"overline\">Điểm: {this.props.user.codepoint}</Typography>\r\n                              </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} sm={12}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ marginLeft: 4, textAlign: \"center\" }}\r\n                      >\r\n                        Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n                        {this.state.review_point}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} sm={12}>\r\n                      <Box p={2}>\r\n                        {this.renderButtonCertificate(this.state.certificateViewStart)}\r\n                      </Box>\r\n                    </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={8}>\r\n                <Paper\r\n                  style={{\r\n                    minHeight: 350,\r\n                    overflowY: \"auto\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\"\r\n                  }}\r\n                >\r\n                  <Grid container>\r\n                    <Grid item container style={{ flexGrow: 1 }}>\r\n                      <Box p={2}>\r\n                        <Typography noWrap variant=\"h6\">Học tập</Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box p={2}>\r\n                    <Grid container spacing={2}>\r\n                      {courseList.length === 0 ?\r\n                        <Box p={1}>\r\n                          <Typography variant=\"h3\">Bạn chưa tham gia khóa học nào</Typography>\r\n                        </Box>\r\n                        :\r\n                        courseList\r\n                      }\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              <Dialog\r\n                maxWidth={false}\r\n                open={this.state.openDialogCertificate}\r\n                onClose={this.handleDialogCertificateClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n              >\r\n                {\" \"}\r\n                {this.state.isLoadingCert === true ? (\r\n                  <div\r\n                    className=\"sweet-loading\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                      overflow: \"hidden\"\r\n                    }}\r\n                  >\r\n                    <HashLoader\r\n                      sizeUnit={\"px\"}\r\n                      size={50}\r\n                      color={\"#AEA8A8\"}\r\n                      loading={this.state.isLoadingCert}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                    this.renderDialog(this.state.certificateViewStart)\r\n                  )}\r\n              </Dialog>\r\n              </Grid>\r\n            <Box mt={2}>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={12}>\r\n                  <Practice user_practice_info={user_practice_info} />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            </React.Fragment>\r\n    )\r\n  }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(null, { withTheme: true })(\r\n  connect(mapStateToProps, {})(PrintBody)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./taskItem.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    marginBottom: \"50px\",\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.2) 0px 0px 0px 0px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px\"\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"5px\",\r\n    backgroundColor: \"#dddddd\",\r\n    padding: \"5px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\n\r\n\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass TaskItem extends Component {\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n\r\n    var { task } = this.props;\r\n\r\n    if (minitask.status === \"hoanthanh\") {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            alignItems: \"center\",\r\n            margin: \"auto\"\r\n          }}\r\n        >\r\n          <Grid container item xs={12} sm={12} spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid container item xs={3} sm={3}  spacing={1}>\r\n              <Tooltip title=\"Tên bài thực hành\" placement=\"top-start\">\r\n                <div style={{ flexGrow: 1 }}> {minitask.mini_task_name}</div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={3} sm={3} spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n              <Tooltip title=\"Số đậu\" placement=\"top\">\r\n                <div\r\n                  style={{\r\n                    fontSize: 12,\r\n                    margin: \"0px 4px\",\r\n                    color: \"#4978cc\",\r\n                    // marginLeft: 10,\r\n                    height: 30\r\n                  }}\r\n                  className=\"centerDiv\"\r\n                >\r\n                  <div>\r\n                    <p\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        verticalAlign: \"middle\",\r\n                        lineHeight: \"30px\",\r\n                        margin: 0\r\n                      }}\r\n                    >\r\n                      {minitask.code_point}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <EmojiNatureIcon style={{ fontSize: 24, marginRight: 1 }} />\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={3} sm={3} spacing={1}>\r\n              <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                <div className=\"level-minitask\" style={{ marginLeft: 0 }}>\r\n                  {this.renderLevelMinitaskChip(minitask)}\r\n                </div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={3} sm={3} spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n              <Tooltip title=\"Hoàn thành\" placement=\"top\">\r\n              <div\r\n                style={{\r\n                  width: \"20px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  // marginLeft: 10\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ width: \"100%\" }}\r\n                  src={require(\"../icons/hoanthanh.svg\")}\r\n                  alt=\"Kiwi standing on oval\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri === true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n          \r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{ width: \"1em\" }}>\r\n            <img\r\n              style={{ width: \"100%\" }}\r\n              src={require(\"../icons/user.svg\")}\r\n              alt=\"Kiwi standing on oval\"\r\n            />\r\n          </div>\r\n        </a>\r\n      );\r\n    } else if (\r\n      minitask.status === \"chuahoanthanh\" &&\r\n      minitask.vitri === false\r\n    ) {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}/${this.props.courseId}/${task.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            alignItems: \"center\",\r\n            margin: \"auto\"\r\n          }}\r\n        >\r\n          <Grid container xs={12} sm={12} spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <Grid container item xs={4} sm={4}  spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n              <Tooltip title=\"Tên bài thực hành\" placement=\"top-start\">\r\n                <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={2} sm={2}  spacing={1} >\r\n              <Tooltip title=\"Số đậu\" placement=\"top\">\r\n                <div\r\n                  style={{\r\n                    fontSize: 12,\r\n                    margin: \"0px 4px\",\r\n                    color: \"#4978cc\",\r\n                    marginLeft: 10\r\n                  }}\r\n                >\r\n                  {minitask.code_point}\r\n                  <EmojiNatureIcon style={{ fontSize: 16, marginRight: 1 }} />\r\n                </div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={2} sm={2}  spacing={1} >\r\n              <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                <div className=\"level-minitask\" style={{ marginLeft: 10 }}>\r\n                  {\" \"}\r\n                  {this.renderLevelMinitaskChip(minitask)}\r\n                </div>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid container item xs={2} sm={2}>\r\n              <Tooltip title=\"Chưa hoàn thành\" placement=\"top\">\r\n                <div\r\n                  style={{\r\n                    width: \"20px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginLeft: 10\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: \"100%\",\r\n                      backgroundColor: \"#F5F5F5\",\r\n                      borderRadius: \"50%\"\r\n                    }}\r\n                    src={require(\"../icons/chuahoanthanh.svg\")}\r\n                    alt=\"Kiwi standing on oval\"\r\n                  />\r\n                </div>\r\n              </Tooltip>       \r\n            </Grid>  \r\n            <Grid container item xs={2} sm={2}>\r\n              <Tooltip title=\"Số lượt làm còn lại\" placement=\"top\">\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      marginLeft: 0\r\n                    }}\r\n                  \r\n                  > {minitask.numbers_doing > 0 ? (\r\n                    <p><b style={{color:\"red\"}}>{minitask.numbers_doing}</b> <i>lượt</i></p>\r\n                  ): (<b><i style={{color:\"red\"}}>Hết lượt</i></b>)} \r\n                  </div>   \r\n              </Tooltip>\r\n            </Grid>\r\n              \r\n            \r\n                     \r\n          </Grid>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            \r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"1em\" }}>\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                src={require(\"../icons/padlock-unlock.svg\")}\r\n                alt=\"Kiwi standing on oval\"\r\n              />\r\n            </div>\r\n            <div className=\"hidden\" style={{ display: \"none\" }}>\r\n              {minitask.point_unlock}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes, task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n           \r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width: \"200px\",\r\n                boxShadow:\r\n                  \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              <Typography variant=\"button\">\r\n                {task.task_name}\r\n              </Typography>\r\n              {/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          >\r\n            {\" \"}\r\n            {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                borderRadius: \"4px 4px 0 0\"\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            style={{\r\n              padding: \"10px 0\",\r\n              background: \"white\",\r\n              boxShadow:\r\n                \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {/* danh sách mini task */}\r\n            {task.minitasks.map(minitask => (\r\n              <Grid\r\n                item\r\n                className={`${classes.MiniTaskItem}`}\r\n                key={minitask.id}\r\n                style={{\r\n                  width:\"100%\",\r\n                  verticalAlign:\"middle\"\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {this.renderMiniItem(minitask)}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass UserRank extends Component {\r\n    render() {\r\n        let { user, rank, isCurrentUser } = this.props;\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Divider light />\r\n                {/* <Box p={1}> */}\r\n                    <Box p={1} display=\"flex\" style={{backgroundColor:  isCurrentUser ? \"#F1F1F1\" : \"\"}}>\r\n                        <Box p={1} style={{ width: '10%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {rank}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar alt=\"Cindy Baker\" src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.user_info.avt : user.user_info.avatar} />\r\n                        <Box p={1} style={{ width: '34%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {user.user_info.firstname + \" \" + user.user_info.lastname}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {user.user_point}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                {/* </Box> */}\r\n                <Divider light />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserRank;","import React, { Component } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport UserRank from \"./UserRank\";\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CourseLeaderBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courseLeaderBoard: [],\r\n            isLoading: true,\r\n            currentUser: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:8081/api/v1/auth/getCourseLeaderBoard/${this.props.courseId}`).then(res => {\r\n            this.setState({ courseLeaderBoard: res.data, isLoading: false, currentUser: this.props.user });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, courseLeaderBoard } = this.state;\r\n        const leaderBoard = courseLeaderBoard.map((user, index) => {\r\n            return <UserRank user={user} rank={index + 1} isCurrentUser={user.user_info.id === this.props.user.id} />\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    isLoading ?\r\n                        <React.Fragment>\r\n                            <div\r\n                                className=\"sweet-loading\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    width: \"100%\",\r\n                                    height: \"50vh\"\r\n                                }}\r\n                            >\r\n                                <HashLoader\r\n                                    sizeUnit={\"px\"}\r\n                                    size={50}\r\n                                    color={\"#AEA8A8\"}\r\n                                    loading={isLoading}\r\n                                />\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Fade in={!isLoading} {...(true ? { timeout: 1000 } : {})}>\r\n                                <Box bgcolor=\"white\" boxShadow={2} mb={3}>\r\n                                    <Box display=\"flex\" fontStyle=\"italic\">\r\n                                        <Box p={1} style={{ width: '10%' }} >\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                #\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '36%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Tên người dùng\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '30%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Điểm\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider light />\r\n                                    {courseLeaderBoard.length!==0 ? leaderBoard : \r\n                                    <Box p={3}>\r\n                                        <Typography variant=\"h2\">Chưa có người dùng nào tham gia</Typography>\r\n                                    </Box>}\r\n                                </Box>\r\n                            </Fade>\r\n                        </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.rootReducer.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null) (CourseLeaderBoard);","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { matchPath } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { randomColor } from \"../course/CourseItem\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\n\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CourseLeaderBoard from '../courseLeaderBoard/CourseLeaderBoard';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      p={1}\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Fade in={!(value !== index)} {...(true ? { timeout: 1000 } : {})}>{children}</Fade>}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    height: 150,\r\n    width: \"100%\"\r\n  },\r\n\r\n  TasksContainer: {\r\n    // paddingTop: 30,\r\n\r\n    // minHeight: \"87vh\"\r\n  }\r\n};\r\nconst getParams = pathname => {\r\n  const course = matchPath(pathname, {\r\n    path: `/profile/courses/:courseId/tasks`\r\n  });\r\n  return (course && course.params) || {};\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      isLoading: true,\r\n      course: {},\r\n      courseId: \"\",\r\n      totalMinitask: 0,\r\n      coursPassInfo: {},\r\n      courseStatus: '',\r\n      userCourse: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      value: 0,\r\n      // value to check show form reasons\r\n      showForm: false,\r\n      reason: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({reason: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({showForm: false});\r\n\r\n    let location = this.props.location;\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    newcourse.status = \"Pedding\";\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n    \r\n    // get course name \r\n    var nameCourse = this.state.course.course_name;\r\n    // eslint-disable-next-line no-useless-concat\r\n    let msg_deny = \"Subject: Thông báo từ Hocode\\r\\n\" + \"Khóa học \" + nameCourse + \" của bạn không được ban quản trị xét duyệt.\\r\\n\"\r\n    let reasonsText =  \"Lí do: \" + this.state.reason\r\n    var content = msg_deny + reasonsText\r\n    console.log(msg_deny)\r\n    this.handleSendEmail(content)\r\n\r\n    alert('Thông báo đã gửi đi !');\r\n    event.preventDefault();\r\n  }\r\n  componentWillUnmount() {\r\n    this.stop();\r\n  }\r\n\r\n  handleChangeValue = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    const currentParams = getParams(location.pathname);\r\n    console.log(currentParams);\r\n\r\n    this.setState({courseId: currentParams.courseId});\r\n\r\n    axios.get(`http://localhost:8081/api/v1/curd/getCoursePassInfo/${currentParams.courseId}`).then(res => {\r\n      console.log(\"[CoursePass]\")\r\n      this.setState({ coursPassInfo: res.data, courseId: currentParams.courseId });\r\n      console.log(res.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:8081/api/v1/totalMinitask/${currentParams.courseId}`).then(res => {\r\n      this.setState({ totalMinitask: res.data })\r\n    });\r\n\r\n    axios.get(`http://localhost:8081/api/v1/auth/usercourse`).then(res => {\r\n      var isFound = false;\r\n      for (var i = 0; i < res.data.course_info.length; i++) {\r\n        if (res.data.course_info[i].course_id === currentParams.courseId) {\r\n          isFound = true;\r\n        }\r\n        if (isFound) {\r\n          this.setState({ userCourse: res.data.course_info[i].code_point });\r\n          break;\r\n        }\r\n      }\r\n      if(!isFound) {\r\n        this.setState({ userCourse: 0 });\r\n      }\r\n      console.log(this.state.userCourse);\r\n    });\r\n\r\n    axios\r\n      .get(\r\n        `http://localhost:8081/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const tasks = res.data;\r\n        let tasks1 = tasks.reverse();\r\n        this.setState({ tasks: tasks1, isLoading: false });\r\n      });\r\n\r\n    \r\n\r\n    axios\r\n      .get(`http://localhost:8081/api/v1/courses/${currentParams.courseId}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const course = res.data;\r\n        var code;\r\n        if ((new Date() < new Date(course.start_time))) {\r\n          code = -1;\r\n        }\r\n        if ((new Date() > new Date(course.start_time)) && (new Date() < new Date(course.end_time))) {\r\n          code = 0;\r\n        }\r\n        if ((new Date() > new Date(course.end_time))) {\r\n          code = 1;\r\n        }\r\n        this.setState({ course: course, courseStatus: code });\r\n      });\r\n\r\n    this.interval = setInterval(() => {\r\n      const date = this.calculateCountdown(this.state.courseStatus === -1 ? this.state.course.start_time : this.state.course.end_time);\r\n      date ? this.setState(date) : this.stop();\r\n    }, 1000);\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n\r\n  }\r\n\r\n  onClickRating(val) {\r\n    let location = this.props.location;\r\n\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    if (newcourse.rating === null) newcourse.rating = [];\r\n    newcourse.rating.push(val);\r\n    newcourse.rating_value = average(newcourse.rating);\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      years: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n      diff -= timeLeft.years * 365.25 * 86400;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n      timeLeft.days = Math.floor(diff / 86400);\r\n      diff -= timeLeft.days * 86400;\r\n    }\r\n    if (diff >= 3600) { // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = '0' + value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // covert string utf8 to bytes array\r\n  string2Bin(str) {\r\n    var utf8 = unescape(encodeURIComponent(str));\r\n    var result = [];\r\n    for (var i = 0; i < utf8.length; i++) {\r\n      result.push(utf8.charCodeAt(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  \r\n  // handle send email after click buttons. \r\n  handleSendEmail(msg) {\r\n    var to_mail = []\r\n    // to_mail.push(\"nqhien026@gmail.com\")\r\n    // to_mail.push(\"16110070@student.hcmute.edu.vn\")\r\n    to_mail.push(this.state.course.user_create)\r\n    var Message = this.string2Bin(msg)\r\n    var mail = {}\r\n    mail[\"Message\"] = Message\r\n    mail[\"To\"] = to_mail\r\n    console.log(mail)\r\n    axios\r\n      .post(\r\n        `http://localhost:8081/api/v1/sendmail`,\r\n        mail\r\n      )\r\n      .then(response => {\r\n        \r\n      });\r\n  }\r\n\r\n  handleBtnAccepted() {\r\n    let location = this.props.location;\r\n\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    newcourse.status = \"Active\";\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n    \r\n     // get course name \r\n    var nameCourse = this.state.course.course_name;\r\n    let msg_accept = \"Khóa học\" + nameCourse + \" của bạn đã được ban quản trị xét duyệt thành công\"\r\n    console.log(msg_accept)\r\n    this.handleSendEmail(msg_accept)\r\n  }\r\n\r\n  handleBtnDeny() {\r\n    this.setState({showForm: true})\r\n    \r\n  }\r\n\r\n  // show alert \r\n  showAlert() {\r\n    alert(\"Thông tin kiểm duyệt đã gửi cho người tạo khóa học !\")\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({showForm: false})\r\n  }\r\n  // show form reasons \r\n  showFormReasons = () => {\r\n    return (\r\n      <div style={{borderRadius:\"5px\", backgroundColor:\"#f2f2f2\", padding: \"20px\", margin: \"0 auto\"}} className=\"container\">\r\n        <form  onSubmit={this.handleSubmit}>\r\n          <label>Góp ý:</label>\r\n          <textarea \r\n          style={{height:200,\r\n                width:\"100%\", padding:\"12px\",\r\n                border:\"1px solid #ccc\",\r\n                borderTopLeftRadius:4,\r\n                boxSizing: \"border-box\",\r\n                marginTop:6,\r\n                marginBottom: 16,\r\n                resize:\"vertical\"\r\n          }} id=\"reasons\" name=\"reasons\" value={this.state.reason} onChange={this.handleChange} />\r\n          <input\r\n            style={{\r\n              backgroundColor: \"#4CAF50\",\r\n              color: \"white\",\r\n              padding: \"12px 12px\",\r\n              border: \"none\", \r\n              borderRadius: \"4px\",\r\n              cursor:PointerEvent,\r\n            }}\r\n          type=\"submit\" value=\"Submit\"  placeholder=\"Ý kiến góp ý...\"/>\r\n          <button style={{\r\n            backgroundColor: \"#4CAF50\",\r\n            color: \"white\",\r\n            padding: \"12px 12px\",\r\n            border: \"none\", \r\n            borderRadius: \"4px\",\r\n            cursor:PointerEvent,\r\n            position:\"relative\", marginLeft:\"10px\"\r\n          }} onClick={() => this.handleCancel()} >Cancel</button>\r\n        </form>\r\n      </div>      \r\n    );\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks, course, courseStatus, value, days, hours, min, sec } = this.state;\r\n    const { isLoading } = this.state;\r\n    let courseLoop;\r\n    if (courseStatus === -1) {\r\n      if (this.props.user.role === \"admin\" || this.props.user.role === \"mod\") {\r\n        courseLoop = tasks.map(task => (\r\n          <TaskItem key={task.id} task={task} courseId={this.state.courseId} />\r\n        ))\r\n      }\r\n      else {\r\n        courseLoop =\r\n          <React.Fragment>\r\n            <Box justifyContent=\"center\">\r\n              <Typography align=\"center\" variant=\"h3\">\r\n                Course hiện tại chưa được mở vui lòng quay lại vào {new Date(course.start_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')} nhé! <InsertEmoticonIcon />\r\n              </Typography>\r\n            </Box>\r\n          </React.Fragment>\r\n      }\r\n    }\r\n    else {\r\n      courseLoop = tasks.map(task => (\r\n        <TaskItem key={task.id} task={task} courseId={this.state.courseId} />\r\n      ))\r\n    }\r\n\r\n    let timer;\r\n    if (courseStatus === 0) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" flexGrow={1} color=\"#ef5350\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Đang diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" color=\"#f44336\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              Còn lại &nbsp;{this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === -1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\" color=\"#212121\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            Sắp diển ra\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n          <Box order={4}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={3}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={2}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n          <Box order={1}>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </React.Fragment>\r\n    } else if (courseStatus === 1) {\r\n      timer = <React.Fragment>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"h5\" display=\"block\" gutterBottom>\r\n            Tình trạng: &nbsp;\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"#757575\" display=\"block\" gutterBottom>\r\n            Kết thúc\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} display=\"flex\" color=\"#757575\">\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            {new Date(course.end_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n          </Typography>\r\n        </Box>\r\n      </React.Fragment>\r\n    }\r\n\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        {/* <Card className={classes.card}>\r\n</Card> */}\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Grid item xs={12} sm={12} style={{ marginBottom: 0 }}>\r\n                <Paper >\r\n                  <Grid container style={{ padding: 20 }} spacing={2}>\r\n                    <Grid item xs={4} sm={4}>\r\n                      <Card>\r\n                        <CardMedia\r\n                          style={{ height: 120 }}\r\n                          image={this.state.course.background_image}\r\n                          title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                          {timer}\r\n                          <Box display=\"flex\" color=\"#5c6bc0\" justifyContent=\"flex-end\">\r\n                            <Typography variant=\"h4\">\r\n                              {this.state.userCourse? this.state.userCourse : 0} <EmojiNatureIcon />\r\n                            </Typography>\r\n                          </Box>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={8}>\r\n                      <Box display=\"flex\">\r\n                        <Box flexGrow={1} mt={3} mb={2}>\r\n                          <Typography variant=\"h3\" component=\"h3\">\r\n                            {course.course_name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box mt={3} mb={2}>\r\n                          {course.status === \"Active\" ? null : (\r\n                            <Box display=\"flex\">\r\n                              <Box p={1}>\r\n                                <Button size=\"small\"\r\n                                  variant=\"contained\"\r\n                                  aria-label=\"small outlined button group\"\r\n                                  color=\"primary\"\r\n                                  onClick={\r\n                                    () => { this.handleBtnAccepted(); this.showAlert();}\r\n                                  }>\r\n                                  Duyệt khóa học\r\n                                </Button>\r\n                              </Box>\r\n                              <Box p={1}>\r\n                                <Button size=\"small\"\r\n                                  variant=\"contained\"\r\n                                  aria-label=\"small outlined button group\"\r\n                                  color=\"secondary\"\r\n                                  onClick={\r\n                                    () => { this.handleBtnDeny() }\r\n                                  }>\r\n                                  Góp ý\r\n                                </Button>\r\n                              </Box>\r\n                            </Box>\r\n                          )}\r\n                        </Box>\r\n                      </Box>\r\n                      <Grid\r\n                        item\r\n                        xs={8}\r\n                        sm={8}\r\n                        container\r\n                        style={{ justifyContent: \"space-between\" }}\r\n                      >\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            className={classes.smallAvatar}\r\n                            style={{ backgroundColor: randomColor() }}\r\n                          >\r\n                            {\" \"}\r\n                            {course.user_create\r\n                              ? course.user_create.charAt(0).toUpperCase()\r\n                              : \"H\"}\r\n                          </Avatar>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{ marginLeft: 6 }}\r\n                          >\r\n                            {/* {course.total_minitask} */}\r\n                            {course.user_create !== \"\"\r\n                              ? course.user_create\r\n                              : \"Hocode\"}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                          }}\r\n                        >\r\n                          <Rating\r\n                            name=\"a\"\r\n                            value={course.rating_value}\r\n                            read-only=\"true\"\r\n                            precision={0.5}\r\n                            size=\"large\"\r\n                            onChange={(event, newValue) => {\r\n                              this.onClickRating(newValue);\r\n                            }}\r\n                          />\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{ marginLeft: 4 }}\r\n                          >\r\n                            {/* {course.total_minitask} */}\r\n                            Đánh giá({course.rating ? course.rating.length : 0})\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Box display=\"flex\" mt={1}>\r\n                          <LaptopIcon fontSize=\"large\" />\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            style={{ marginLeft: 6 }}\r\n                          >\r\n                            {/* {course.total_minitask} */}\r\n                            {this.state.totalMinitask} bài học\r\n                            </Typography>\r\n                        </Box>\r\n                        <Grid item xs={12} sm={12} style={{ paddingTop: '15px' }}>\r\n                          <Typography variant=\"overline\">\r\n                            {course.course_desc}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Box>\r\n                          {/* <Typography variant=\"cation\" display=\"block\" gutterBottom>\r\n                            Ngày bắt đầu: {new Date(course.start_time).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n                            Ngày bắt đầu: {course.start_time}\r\n                          </Typography> */}\r\n                          {/* <Typography variant=\"cation\" display=\"block\" gutterBottom>\r\n                            Ngày kết thúc: {course.end_time}\r\n                          </Typography> */}\r\n                        </Box>\r\n                      </Grid>\r\n\r\n                      <Grid\r\n                        item\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\"\r\n                        }}\r\n                      >\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              <Box p={1}>\r\n\r\n              </Box>\r\n              <Grid xs={12} justify=\"center\" >\r\n                <AppBar position=\"static\" style={{ backgroundColor: \"#FAFAFA\", color: \"#242424\" }}>\r\n                  <Tabs value={value} onChange={this.handleChangeValue} variant=\"fullWidth\"\r\n                    indicatorColor=\"primary\"\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Bài tập\" />\r\n                    <Tab label=\"Xếp hạng\" />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                  <Box display=\"flex\" justifyContent=\"center\" p={1} className=\"Hello\">\r\n                    <Grid item xs={12} sm={6} >\r\n                      {courseLoop}\r\n                    </Grid>\r\n                  </Box>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <Box display=\"flex\" justifyContent=\"center\" p={1} className=\"Hello\">\r\n                    <Grid item xs={12} sm={12} >\r\n                      <CourseLeaderBoard courseId={this.state.courseId}/>\r\n                    </Grid>\r\n                  </Box>\r\n                </TabPanel>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        {this.state.showForm ? this.showFormReasons(): null}\r\n      </Grid>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst average = list => list.reduce((prev, curr) => prev + curr) / list.length;\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(TaskBody));\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\"\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight: \"unset\",\r\n    height: \"25px\",\r\n    \"&:focus\": {\r\n      // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\nfunction CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: 3 }}>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{ color: \"#282828\" }}\r\n      />\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <AccountBoxIcon style={{ fontSize: 16 }} />\r\n\r\n          <Link\r\n            to=\"/profile/account\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={() => {\r\n              setAnchorEl(null);\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 12,\r\n                marginLeft: \"3px\",\r\n                textDecoration: \"none\"\r\n              }}\r\n            >\r\n              Thông tin cá nhân\r\n            </p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <SearchIcon style={{ fontSize: 16 }} />\r\n\r\n          <Link\r\n            to=\"/searchcert\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={() => {\r\n              setAnchorEl(null);\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 12,\r\n                marginLeft: \"3px\",\r\n                textDecoration: \"none\"\r\n              }}\r\n            >\r\n              Tra chứng chỉ\r\n            </p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n          <ExitToAppIcon style={{ fontSize: 16 }} />\r\n          <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(CustomizedMenus);\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import Typography from \"@material-ui/core/Typography\";\r\n//import Paper from \"@material-ui/core/Paper\";\r\n//import InputBase from \"@material-ui/core/InputBase\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport \"./appbarcontent.css\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\n//import IconButton from \"@material-ui/core/IconButton\";\r\nconst styles = theme => ({\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  },\r\n  mobileHide: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\nclass AppBarContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {/* <Typography variant=\"h6\" noWrap style={{ borderRadius: \"30px\" }}>\r\n              {\" \"}\r\n            \r\n              <Paper className={classes.searchComponent}>\r\n                <InputBase\r\n                  className={classes.inputSearchComponent}\r\n                  placeholder=\"Tìm kiếm khóa học,...\"\r\n                  inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                />\r\n                <IconButton\r\n                  className={classes.iconButtonSearchComponent}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n            </Typography> */}\r\n\r\n            {this.props.user.role === \"mod\" ||\r\n            this.props.user.role === \"admin\" ? (\r\n              <Link\r\n                to=\"/profile/minitasks/createminitask\"\r\n                style={{ textDecoration: \"none\",\r\n              \r\n              \r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n              >\r\n                <Fab\r\n                  //className={classes.mobileHide}\r\n                  variant=\"extended\"\r\n                  aria-label=\"like\"\r\n                  style={{\r\n                    height: \"32px\",\r\n                    fontSize: \"10px\",\r\n                    background: \"#dbe4f8\",\r\n                    color: \"#1f74be\",\r\n                    marginLeft: 10\r\n                  }}\r\n                >\r\n                  <NavigationIcon style={{ fontSize: 14, marginRight: 2 }} />\r\n                  <div className=\"dangBaiTap\">Đăng bài thực hành</div>\r\n                </Fab>\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                margin: \"0px 4px\",\r\n                color: \"#4978cc\",\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div>\r\n              Số đậu: {this.props.user.codepoint}\r\n</div>              <div>\r\n              \r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"#595959\",\r\n                // fontFamily: \"Yanone Kaffeesatz, sans-serif\",\r\n                fontSize: \"20px\",\r\n\r\n                padding: \"5px\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <div>{this.props.user.firstname} </div>\r\n            </div>\r\n            <Avatar\r\n              className={classes.mobileHide}\r\n              style={{ width: \"30px\", height: \"30px\", marginLeft: 10 }}\r\n              alt=\"Remy Sharp\"\r\n              src={this.props.user.avatar}\r\n            />\r\n            <UserMenu />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(AppBarContent)\r\n);\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: 151\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  }\r\n});\r\nclass NavRight extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      daily_minitask: {},\r\n      isLoading: true,\r\n      books: [],\r\n      events: [],\r\n      openDialogReadmore: false,\r\n      bookcontent: \"\",\r\n      booktitlet: \"\",\r\n      bookImage: \"\"\r\n    };\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`http://localhost:8081/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`http://localhost:8081/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  handleClickDialogReadmoreOpen = (bookcontent, bookImage, booktitlet) => {\r\n    this.setState({\r\n      openDialogReadmore: true,\r\n      bookcontent: bookcontent,\r\n      bookImage: bookImage,\r\n      booktitlet: booktitlet\r\n    });\r\n  };\r\n\r\n  handleDialogReadmoreClose = () => {\r\n    this.setState({ openDialogReadmore: false });\r\n  };\r\n  componentDidMount() {\r\n    this.props.getUser();\r\n    this.getApi();\r\n  }\r\n  limitText(text, limitNum) {\r\n    let newText = text;\r\n    if (text.length > limitNum) {\r\n      newText = text.substring(0, limitNum);\r\n    }\r\n    return newText;\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const itemCard = (listitem, type, time) => (\r\n      <Grid\r\n        xs\r\n        item\r\n        // style={{\r\n        //   flexDirection: \"column\",\r\n        //   justifyContent: \"center\",\r\n        //   display: \"flex\"\r\n        // }}\r\n      >\r\n        <p style={{fontWeight:\"bold\"}}>{type === \"books\" ? \"Sách lập trình\" : \"\"} {type === \"events\" ? \"Sự kiện nổi bật\" : \"\"}</p>\r\n        \r\n\r\n        <Carousel indicators={false} interval={time}>\r\n          {/* <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Sách đề xuất\r\n          </Typography> */}\r\n          {listitem.map(book => {\r\n            return (\r\n              <React.Fragment key={book.id}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                  <Grid\r\n                    style={{\r\n                      marginTop: 10,\r\n                      marginBottom: 10\r\n                    }}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          if (type === \"books\") {\r\n                            this.handleClickDialogReadmoreOpen(\r\n                              book.content,\r\n                              book.image,\r\n                              book.title\r\n                            );\r\n                          }\r\n                          if (type === \"events\") {\r\n                            window.open(book.link, \"_blank\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        {/* <img\r\n                         \r\n                          alt=\"complex\"\r\n                          src={book.image}\r\n                        /> */}\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: type === \"books\" ? \"200px\" : \"60px\",\r\n                            // objectFit: \"cover\",\r\n                            background: `url(${book.image}) no-repeat center`,\r\n                            backgroundSize: \"cover\"\r\n                          }}\r\n                        ></div>\r\n                        <CardContent>\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h2\"\r\n                            style={{\r\n                              height: 55,\r\n                              overflow: \"hidden\",\r\n                              wordBreak: \"break-word\"\r\n                            }}\r\n                          >\r\n                            {book.title}\r\n                          </Typography>\r\n\r\n                          {book.content.length > 100 ? (\r\n                            <React.Fragment>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                                style={{\r\n                                  height: 48,\r\n                                  overflow: \"hidden\",\r\n                                  wordBreak: \"break-word\"\r\n                                }}\r\n                              >\r\n                                {this.limitText(book.content, 100)}...\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            book.content\r\n                          )}\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        <Dialog\r\n          open={this.state.openDialogReadmore}\r\n          onClose={this.handleDialogReadmoreClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.handleDialogReadmoreClose}\r\n          >\r\n            {this.state.booktitlet}\r\n          </DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  background: `url(${this.state.bookImage}) no-repeat center`,\r\n                  backgroundSize: \"cover\",\r\n                  height: \"300px\"\r\n                }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                xs={8}\r\n                style={{\r\n                  padding: \"16px\"\r\n                }}\r\n              >\r\n                {/* <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.booktitlet}\r\n\r\n                </DialogContentText> */}\r\n\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.bookcontent}\r\n                </DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          // alignItems=\"center\"\r\n          style={{ height: \"100%\",flexWrap:\"unset\" }}\r\n        >\r\n          {typeof this.state.books !== \"undefined\" &&\r\n          this.state.books.length > 0\r\n            ? itemCard(this.state.books, \"books\", 8000)\r\n            : null}\r\n\r\n          {typeof this.state.events !== \"undefined\" &&\r\n          this.state.events.length > 0\r\n            ? itemCard(this.state.events, \"events\", 12000)\r\n            : null}\r\n\r\n          {/* <Grid style={{ flexGrow: 1 }}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <div style={{ fontWeight: \"bold\" }}>Sự kiện nổi bật</div>{\" \"}\r\n                <Carousel>\r\n                  {this.state.events.map(event => {\r\n                    return (\r\n                      <React.Fragment key={event.id}>\r\n                        <Grid\r\n                          style={{\r\n                            border: \"1px solid #0000001f\",\r\n                            borderRadius: \"4px\",\r\n                            marginTop: 10,\r\n                            marginBottom: 10\r\n                          }}\r\n                        >\r\n                          <Card className={classes.card}>\r\n                            <a\r\n                              href={event.link}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              <CardActionArea>\r\n                                <img\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    height: \"100\",\r\n                                    objectFit: \"cover\"\r\n                                  }}\r\n                                  alt=\"complex\"\r\n                                  src={event.image}\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography\r\n                                    gutterBottom\r\n                                    variant=\"h5\"\r\n                                    component=\"h2\"\r\n                                  >\r\n                                    {event.title}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                  >\r\n                                    {event.content}\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </a>\r\n                          </Card>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </Carousel>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid> */}\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(NavRight)\r\n);\r\n","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\n// import Avatar from '@material-ui/core/Avatar'\r\nimport { Link } from \"react-router-dom\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport axios from \"axios\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Minitask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isUserLikeMinitask: true,\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/getUserMinitaskFavourite/${this.props.minitask.id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.data.id === \"\") {\r\n                    this.setState({ isUserLikeMinitask: false });\r\n                }\r\n            });\r\n    }\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    handleUserLikeMinitask = () => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/handleLikeMinitask/${this.props.minitask.id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            });\r\n        this.setState({ isUserLikeMinitask: !this.state.isUserLikeMinitask });\r\n    }\r\n\r\n    render() {\r\n        const { minitask } = this.props;\r\n        const { isUserLikeMinitask } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Slide in={true} direction=\"right\" {...(true ? { timeout: 1550 } : {})}>\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <Grid xs={12} container style={{ backgroundColor: \"\" }} borderRadius={16} justify=\"center\" alignItems=\"center\">\r\n                                <Grid xs={2}>\r\n                                    <Box p={1} ml={1}>\r\n                                        {this.renderStatus(minitask.status)}\r\n                                    </Box>\r\n                                </Grid>\r\n                                {/* <Grid xs={1}>\r\n                                    <Box p={2}>\r\n                                        <Typography variant=\"h6\">\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Grid> */}\r\n                                <Grid item container xs={5} md={5} sm={5}>\r\n                                    <Box p={1}>\r\n                                        <Link to={`/minitask/${minitask.id}`} style={{ textDecoration: 'none' }}>\r\n                                            <Tooltip title={minitask.mini_task_name} placement=\"top\">\r\n                                                <Typography noWrap variant=\"h6\" style={{ color: \"#0088CC\" }}>\r\n                                                    {minitask.name_func}\r\n                                                </Typography>\r\n                                            </Tooltip>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={3}>\r\n                                    <Box p={1}>\r\n                                        {this.renderLevel(minitask.level)}\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={2}>\r\n                                    <Box display=\"flex\" justifyContent=\"flex-end\" p={1}>\r\n                                        <Box>\r\n                                            {!isUserLikeMinitask ?\r\n                                                <StarBorderRoundedIcon fontSize=\"large\" style={{ cursor: \"pointer\", }} onClick={this.handleUserLikeMinitask} />\r\n                                                :\r\n                                                <StarIcon fontSize=\"large\" style={{ cursor: \"pointer\", color: \"#FCB829\" }} onClick={this.handleUserLikeMinitask} />\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Box p={1}>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <img style={{ position: \"absolute\", zIndex: 1, borderRadius: '50%' }} width=\"50px\"\r\n                                        src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/level-avatars/User-05.svg?v=3\" alt=\"\" srcset=\"\" />\r\n                                    <img width=\"44px\" height=\"45px\" style={{ borderRadius: '50%', marginLeft: 3, marginTop: 1 }}\r\n                                        src=\"https://codelearnstorage.s3.amazonaws.com/CodeCamp/CodeCamp/Upload/Avatar/f52dd2000202428db182bacf9e92ab3c.png\" alt=\"Duy\" />\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                            <Box>\r\n                                <Typography variant=\"caption\">vanduyit027@gamail.com</Typography>\r\n                            </Box>\r\n                        </Box> */}\r\n                        </Paper>\r\n                    </Grid>\r\n                </Slide>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    PieSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nimport Minitask from './Minitask';\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass HeaderPracticePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            allTask: [],\r\n            minitaskList: [],\r\n            page: 1,\r\n            chartInfo: [],\r\n            isLoadingData: true,\r\n            totalPage: 0,\r\n            searchKeyWord: \"\",\r\n            status: '',\r\n            level: '',\r\n            tempData: [],\r\n            isLoadingFilterData: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ isLoadingFilterData: true })\r\n        axios.get(`http://localhost:8081/api/v1/curd/getAllMinitask/${this.state.page - 1}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskList: res.data, tempData: res.data, isLoadingFilterData: false });\r\n            });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getTotalMinitask`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ totalPage: res.data % 16 === 0 ? Math.floor(res.data / 16) : Math.floor(res.data / 16) + 1 });\r\n            });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getChartInfo`)\r\n            .then(res => {\r\n                console.info(res.data)\r\n                const chartInfo = res.data;\r\n                const data = [\r\n                    { key: 'Medium', value: chartInfo.medium },\r\n                    { key: 'Hard', value: chartInfo.hard },\r\n                    { key: 'Easy', value: chartInfo.easy },\r\n                ];\r\n\r\n                const allTask = [\r\n                    { key: 'Todo', value: chartInfo.todo - (chartInfo.solved + chartInfo.attempted) },\r\n                    { key: 'Attempted', value: chartInfo.attempted },\r\n                    { key: 'Solved', value: chartInfo.solved },\r\n                ];\r\n\r\n                this.setState({\r\n                    data,\r\n                    allTask,\r\n                    chartInfo,\r\n                    isLoadingData: false\r\n                }, () => {\r\n                    console.log(this.state.data);\r\n                    console.log(this.state.allTask);\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChangePage = (event, value) => {\r\n        this.setState({ isLoadingData: true });\r\n        axios.get(`http://localhost:8081/api/v1/curd/getAllMinitask/${value - 1}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskList: res.data, page: value, isLoadingData: false });\r\n            });\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        // const { searchKeyWord, status, level } = this.state;\r\n        // if (searchKeyWord.trim() === \"\" && status === \"\" && level === \"\") {\r\n        //     this.setState({minitaskList: this.state.tempData});\r\n        // } else {\r\n        //     // this.setState({isFilter: true});\r\n        // }\r\n    }\r\n\r\n    handleChangeStatus = (event) => {\r\n        this.setState({ isLoadingFilterData: true });\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${this.state.searchKeyWord}/${event.target.value}/${this.state.level}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ status: event.target.value, minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    handleChangeLevel = (event) => {\r\n        this.setState({ isLoadingFilterData: true, });\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${this.state.searchKeyWord}/${this.state.status}/${event.target.value}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ level: event.target.value, minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    handleChangeKeyword = (event) => {\r\n        this.setState({ searchKeyWord: event.target.value, isLoadingFilterData: true });\r\n        console.log(event.target.value);\r\n        axios.get(`http://localhost:8081/api/v1/curd/searchMinitasksPracticePage/${event.target.value}/${this.state.status}/${this.state.level}/`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ minitaskList: res.data, isLoadingFilterData: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data: chartData, allTask: chartAllTask, minitaskList, chartInfo, isLoadingData, page, totalPage,\r\n            searchKeyWord, status, level, isLoadingFilterData } = this.state;\r\n\r\n        const list = minitaskList.map((minitask, index) => {\r\n            return <Minitask index={index} minitask={minitask} />\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isLoadingData ?\r\n                    <div\r\n                        className=\"sweet-loading\"\r\n                        style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            width: \"100%\",\r\n                            height: \"100vh\"\r\n                        }}\r\n                    >\r\n                        <HashLoader\r\n                            sizeUnit={\"px\"}\r\n                            size={50}\r\n                            color={\"#AEA8A8\"}\r\n                            loading={isLoadingData}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <Box>\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify=\"center\" spacing={1}>\r\n                                <Grid item xs={9}>\r\n                                    <Box>\r\n                                        <img src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/content/training.jpg\"\r\n                                            width=\"100%\"\r\n                                            height=\"250px\" alt=\"banner\" />\r\n                                    </Box>\r\n                                    <Box style={{\r\n                                        marginTop: \"-5px\",\r\n                                        backgroundColor: \"#FFFFFF\",\r\n                                    }}>\r\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                            <Grid item xs={2} >\r\n                                                <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <img src=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/ChallengesIcon.svg\"\r\n                                                            width=\"50px\" height=\"50px\" alt=\"\" srcset=\"\" />\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={4} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl style={{ width: '100%' }}>\r\n                                                        <TextField id=\"outlined-basic\"\r\n                                                            placeholder=\"Nhập nội dung tìm kiếm\"\r\n                                                            variant=\"outlined\"\r\n                                                            value={searchKeyWord}\r\n                                                            onChange={this.handleChangeKeyword}\r\n                                                            InputProps={{\r\n                                                                startAdornment: (\r\n                                                                    <InputAdornment position=\"start\">\r\n                                                                        <SearchIcon />\r\n                                                                    </InputAdornment>\r\n                                                                ),\r\n                                                            }}\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl variant=\"filled\" style={{ width: \"100%\" }}>\r\n                                                        <InputLabel id=\"demo-simple-select-filled-label\">Trạng thái</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-filled-label\"\r\n                                                            id=\"demo-simple-select-filled\"\r\n                                                            value={status}\r\n                                                            onChange={this.handleChangeStatus}\r\n                                                        >\r\n                                                            {/* <MenuItem value=\"\">\r\n                                                                <em>Tar</em>\r\n                                                            </MenuItem> */}\r\n                                                            <MenuItem value={\"\"}>Trạng thái</MenuItem>\r\n                                                            <MenuItem value={\"done\"}>Đã hoàn thành</MenuItem>\r\n                                                            <MenuItem value={\"tried\"}>Chưa hoàn thành</MenuItem>\r\n                                                            <MenuItem value={\"normal\"}>Chưa làm</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box mx={1} display=\"flex\" justifyContent=\"center\">\r\n                                                    <FormControl variant=\"filled\" style={{ width: \"100%\" }}>\r\n                                                        <InputLabel id=\"demo-simple-select-filled-label\">Cấp độ</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-filled-label\"\r\n                                                            id=\"demo-simple-select-filled\"\r\n                                                            value={level}\r\n                                                            onChange={this.handleChangeLevel}\r\n                                                        >\r\n                                                            {/* <MenuItem value=\"\">\r\n                                                                <em>Tar</em>\r\n                                                            </MenuItem> */}\r\n                                                            <MenuItem value={\"\"}>Cấp độ</MenuItem>\r\n                                                            <MenuItem value={\"easy\"}>Đơn giản</MenuItem>\r\n                                                            <MenuItem value={\"medium\"}>Trung bình</MenuItem>\r\n                                                            <MenuItem value={\"hard\"}>Phức tạp</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                <Box display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        {isLoadingFilterData ?\r\n                                            <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Box>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                    <Box>\r\n                                                        <Typography variant=\"overline\">\r\n                                                            Đang tải\r\n                                                    </Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            :\r\n                                            minitaskList.length === 0 ?\r\n                                                <Box p={5} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Typography variant=\"h2\">Không có dữ liệu</Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                :\r\n                                                <Grid container xs={12} spacing={2}>\r\n                                                    {list}\r\n                                                </Grid>\r\n                                        }\r\n                                        {status === \"\" && level === \"\" && searchKeyWord.trim() === \"\" ?\r\n                                            <Fade in={!isLoadingData} {...(true ? { timeout: 1400 } : {})}>\r\n                                                <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                                    <Box>\r\n                                                        <Pagination count={totalPage} page={page} onChange={this.handleChangePage} />\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Fade>\r\n                                            :\r\n                                            \"\"\r\n                                        }\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Box >\r\n                                        <Paper>\r\n                                            <Box p={1} display=\"flex\" justifyContent=\"center\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"h5\">THỐNG KÊ CHUNG</Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Chart\r\n                                                data={chartAllTask}\r\n                                            >\r\n                                                <PieSeries\r\n                                                    valueField=\"value\"\r\n                                                    argumentField=\"key\"\r\n                                                />\r\n                                                {/* <Title\r\n                                                    text=\"THỐNG KÊ CHUNG\"\r\n                                                /> */}\r\n                                                <Animation />\r\n                                            </Chart>\r\n                                            <Grid container xs={12}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={3} sm={3} md={3}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#42A5F5\" }}>\r\n                                                        To do: {chartInfo.todo - (chartInfo.solved + chartInfo.attempted)}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={5} sm={5} md={5}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#9CCC65\" }}>\r\n                                                        Solved: {chartInfo.solved + \"/\" + chartInfo.todo}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={4} sm={4} md={4}>\r\n                                                    <Typography noWrap variant=\"overline\" style={{ color: \"#FF7043\" }}>\r\n                                                        Attempted: {chartInfo.attempted}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Paper style={{ backgroundColor: \"#FAFAFA\" }}>\r\n                                            <Box p={1}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\">\r\n                                                    <Typography noWrap variant=\"h5\">SỐ BÀI ĐÃ HOÀN THÀNH</Typography>\r\n                                                </Grid>\r\n                                            </Box>\r\n                                            {chartInfo.easy === 0 && chartInfo.medium === 0 && chartInfo.hard === 0 ?\r\n                                                <Box p={1}>\r\n                                                    <Grid container justify=\"center\" alignContent=\"center\">\r\n                                                        <Typography noWrap variant=\"h5\">Bạn chưa thực hiện bài thực hành nào</Typography>\r\n                                                    </Grid>\r\n                                                </Box>\r\n                                                :\r\n                                                <Chart\r\n                                                    data={chartData}\r\n                                                >\r\n                                                    <PieSeries\r\n                                                        valueField=\"value\"\r\n                                                        argumentField=\"key\"\r\n                                                        innerRadius={0.6}\r\n                                                    />\r\n                                                    {/* <Title\r\n                                                text=\"SỐ BÀI ĐÃ LÀM\"\r\n                                            /> */}\r\n                                                    <Animation />\r\n                                                </Chart>\r\n                                            }\r\n                                            <Grid container xs={12}>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={3} sm={3} md={3}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#9CCC65\" }}>\r\n                                                        Easy: {chartInfo.easy + \"/\" + chartInfo.total_easy}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={5} sm={5} md={5}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#42A5F5\" }}>\r\n                                                        Medium: {chartInfo.medium + \"/\" + chartInfo.total_medium}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container justify=\"center\" alignContent=\"center\" xs={4} sm={4} md={4}>\r\n                                                    <Typography variant=\"overline\" style={{ color: \"#FF7043\" }}>\r\n                                                        Hard: {chartInfo.hard + \"/\" + chartInfo.total_hard}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderPracticePage;","import React, { Component } from 'react';\r\nimport HeaderPracticePage from './HeaderPracticePage';\r\n\r\nclass PracticePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderPracticePage />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PracticePage;","import React, { Component } from 'react';\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport axios from 'axios';\r\n\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nclass Room extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { fight } = this.props;\r\n        console.log(fight);\r\n        var code;\r\n        if ((new Date() < new Date(fight.time_start))) {\r\n            code = -1;\r\n        }\r\n        if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n            code = 0;\r\n        }\r\n        if ((new Date() > new Date(fight.time_end))) {\r\n            code = 1;\r\n        }\r\n        this.setState({ contestStatus: code });\r\n        this.interval = setInterval(() => {\r\n            const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n            date ? this.setState(date) : this.stop();\r\n        }, 1000);\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    renderJoinContestButton = () => {\r\n        const { contestStatus } = this.state;\r\n        const { fight } = this.props;\r\n        if (fight.is_user_register) {\r\n            if (contestStatus === 0 || contestStatus === -1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E8505B\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />}\r\n                    component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Xem chi tiết</Typography>\r\n                </Button>\r\n            } else if (contestStatus === 1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đã kết thúc</Typography>\r\n                </Button>\r\n            }\r\n        } else {\r\n            if (contestStatus === 1) {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đã kết thúc</Typography>\r\n                </Button>\r\n            } else {\r\n                return <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Đăng ký ngay</Typography>\r\n                </Button>\r\n            }\r\n        }\r\n    }\r\n\r\n    handleJoinFight = () => {\r\n        const { fight } = this.props;\r\n        axios.post(`http://localhost:8081/api/v1/curd/jointFight/${fight.id}/`).then(res => {\r\n            // console.log(res.data);\r\n            this.props.enqueueSnackbar('Đăng ký thành công', {\r\n                variant: 'success',\r\n            });\r\n        });\r\n    }\r\n\r\n    renderContestStatus = () => {\r\n        const { contestStatus } = this.state;\r\n        const { fight } = this.props;\r\n        if (contestStatus === -1) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#777777\" }}>\r\n                Bắt đầu {new Date(fight.time_start).getDay() + \" tháng \" + new Date(fight.time_start).getMonth().toLocaleString()} <EventNoteIcon style={{ fontSize: 19 }}/>\r\n            </Typography>\r\n        } else if (contestStatus === 0) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#439555\" }}>\r\n                Đang diển ra\r\n            </Typography>\r\n        } else if (contestStatus === 1) {\r\n            return <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#E8505B\" }}>\r\n                Kết thúc\r\n            </Typography>\r\n        }\r\n    }\r\n\r\n    renderUserFightButton = () => {\r\n        const { fight } = this.props;\r\n        return <Grid container spacing={2} justify=\"flex-end\" alignItems=\"flex-end\">\r\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" justifyContent=\"center\" xs={12}>\r\n                <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }}\r\n                    startIcon={<CreateIcon style={{ color: \"white\" }} />} component={Link} to={`/profile/update-contest/${fight.id}`}>\r\n                    <Typography variant=\"button\" style={{ color: \"white\" }}>Chỉnh sửa</Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\" alignItems=\"flex-end\" xs={12}>\r\n                <Box my={1}>\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#E24CE1\", borderRadius: 18 }} startIcon={<FilterCenterFocusIcon style={{ color: \"white\" }} />}\r\n                        component={Link} to={`/profile/contest-detail/${fight.id}`}>\r\n                        <Typography variant=\"button\" style={{ color: \"white\" }}>Xem chi tiết</Typography>\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>;\r\n    }\r\n\r\n    render() {\r\n        const { fight, isUserRoom } = this.props;\r\n\r\n        return (\r\n            <SnackbarProvider maxSnack={1}>\r\n                <Box my={2} boxShadow={4} borderRadius={16} style={{ backgroundColor: \"white\" }}>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={12} sm={3} md={3}>\r\n                            <Box display=\"flex\" justifyContent=\"center\">\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Fight image\"\r\n                                    height=\"200\"\r\n                                    src={fight.backgroud_img}\r\n                                    title=\"Fight image\"\r\n                                    style={{ borderRadius: 16 }}\r\n                                />\r\n                                {/* <img src=\"https://assets.leetcode.com/static_assets/public/images/LeetCode_Cup.png\"\r\n                                width=\"100px\"\r\n                                height=\"100px\" alt=\"banner\" /> */}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5} md={5}>\r\n                            <Box mx={2}>\r\n                                <Box mt={1}>\r\n                                    <Typography style={{ fontSize: 25, fontWeight: 600, color: \"#459556\" }}>{fight.fight_name}</Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography noWrap style={{ fontSize: 15, fontWeight: 200 }}>\r\n                                        {fight.fight_desc}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container item xs={12} sm={4} md={4}>\r\n                            <Grid xs={12} container>\r\n                                <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-start\">\r\n                                    <Box mx={4} mt={2}>\r\n                                        {this.renderContestStatus()}\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-start\">\r\n                                    <Box mx={4} display=\"flex\" style={{ color: \"#777777\" }}>\r\n                                        <Box mr={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <PersonIcon fontSize=\"small\" />\r\n                                        </Box>\r\n                                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Typography style={{ fontSize: 15, fontWeight: 400, color: \"#777777\" }}>{fight.numbers_std} thí sinh</Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid xs={12} container justify=\"flex-end\" alignItems=\"flex-end\">\r\n                                <Box mx={3} my={2}>\r\n                                    {\r\n                                        isUserRoom ?\r\n                                            this.renderUserFightButton()\r\n                                            :\r\n                                            this.renderJoinContestButton()\r\n                                    }\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </SnackbarProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(Room);","import React, { Component } from 'react';\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Typography,\r\n    Button,\r\n    Slide,\r\n    CardMedia\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import {\r\n//     Pagination\r\n// } from '@material-ui/lab';\r\n\r\nimport Room from './Room';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport axios from 'axios';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={1}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nclass RoomPracticePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            tab: 0,\r\n            isLoading: true,\r\n            publicFightPages: '',\r\n            currentPublicFightPage: 0,\r\n            privateFightPages: '',\r\n            currentPrivateFightPage: 0,\r\n            publicFights: [],\r\n            privateFights: [],\r\n            fight_user: [],\r\n            fight_user_joined: [],\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currentPublicFightPage } = this.state;\r\n        axios.get(`http://localhost:8081/api/v1/curd/fights/public/${currentPublicFightPage}/`).then(res => {\r\n            this.setState({ publicFights: res.data });\r\n            axios.get(`http://localhost:8081/api/v1/curd/privateFights`).then(res => {\r\n                this.setState({ privateFights: res.data });\r\n                axios.get(`http://localhost:8081/api/v1/curd/fightsByUser`).then(res => {\r\n                    this.setState({ fight_user: res.data });\r\n                    axios.get(`http://localhost:8081/api/v1/curd/getUserFight`).then(res => {\r\n                        console.log(res.data);\r\n                        this.setState({ fight_user_joined: res.data, isLoading: false });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChangeTab = (event, newValue) => {\r\n        this.setState({ tab: newValue });\r\n    }\r\n\r\n    render() {\r\n        const { tab, publicFights, privateFights, fight_user, isLoading, fight_user_joined } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n\r\n        const publicFightsList = publicFights.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        const privateFightsList = privateFights.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        const fight_user_list = fight_user.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} isUserRoom={true} /></Slide>\r\n        });\r\n\r\n        const fight_user_joined_list = fight_user_joined.map((fight, index) => {\r\n            return <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}><Room fight={fight} index={index} /></Slide>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid className=\"banner\" container xs={12} justify=\"center\" style={{borderRadius: 8}}>\r\n                    <Grid xs={12} sm={6} md={6}>\r\n                        <Box mt={4} display=\"flex\" justifyContent=\"center\">\r\n                            <img src=\"https://assets.leetcode.com/static_assets/public/images/LeetCode_Cup.png\"\r\n                                // width=\"100%\"\r\n                                height=\"60px\" alt=\"banner\" />\r\n                        </Box>\r\n                        <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                            <Typography style={{ fontSize: 30, fontWeight: 200, color: \"#b3b3b3\" }}>\r\n                                <span style={{ fontSize: 30, fontWeight: 200, color: \"#FFFFFF\" }}>Đấu trường </span> Hocode\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box mb={4} display=\"flex\" justifyContent=\"center\">\r\n                            <Typography style={{ fontSize: 18, fontWeight: 200, color: \"#b3b3b3\" }}>\r\n                                Hãy cùng chiến đấu mỗi tuần cùng Hocode nhé\r\n                            </Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* <Box my={2} display=\"flex\" justifyContent=\"center\">\r\n                    <Box flexGrow={1}>\r\n                        <Typography style={{ fontSize: 28, fontWeight: 460 }}>Chiến trường</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button variant=\"contained\" style={{ backgroundColor: \"#F1B729\" }} component={Link} to={`/profile/create-contest`}\r\n                            startIcon={<AddBoxIcon style={{ color: \"white\" }} />}>\r\n                            <Typography variant=\"button\" style={{ color: \"white\" }}>Tạo cuộc thi</Typography>\r\n                        </Button>\r\n                    </Box>\r\n                </Box> */}\r\n                {/* <Grid container xs={12}> */}\r\n                <AppBar position=\"static\" style={{ backgroundColor: \"white\", color: \"black\" }}>\r\n                    <Tabs value={tab} onChange={this.handleChangeTab} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Công khai\" />\r\n                        <Tab label=\"Riêng tư\" />\r\n                        <Tab label={`Đã tham gia (${fight_user_joined_list.length})`} />\r\n                        <Tab label=\"Cuộc thi của bạn\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={tab} index={0}>\r\n                    {publicFightsList}\r\n                    {/* <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <Pagination count={3} page={1} />\r\n                        </Box>\r\n                    </Box> */}\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    {privateFightsList.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        privateFightsList\r\n                    }\r\n                    {/* <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Box>\r\n                            <Pagination count={3} page={1} />\r\n                        </Box>\r\n                    </Box> */}\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={2}>\r\n                    {fight_user_joined_list.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        fight_user_joined_list\r\n                    }\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={3}>\r\n                    {fight_user_list.length === 0 ?\r\n                        <Grid container justify=\"center\" alignContent=\"center\">\r\n                            <Box>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    style={{ width: 200, height: 200 }}\r\n                                    image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/code-learn/not-found.svg\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Không có dữ liệu\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Grid>\r\n                        :\r\n                        fight_user_list\r\n                    }\r\n                </TabPanel>\r\n                {/* </Grid> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoomPracticePage;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    // Button,\r\n    TextField,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Paper,\r\n    InputBase, Divider, Slider, IconButton,\r\n    Table,\r\n    Button,\r\n    Tooltip,\r\n    Chip,\r\n    TableBody, TableCell, TableHead, TableRow,\r\n    Slide,\r\n    CardMedia\r\n} from \"@material-ui/core\";\r\n\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport axios from \"axios\";\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nclass CreateRoomPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            start_time: new Date(),\r\n            isStartTimeValid: true,\r\n            start_time_error_message: \"\",\r\n            end_time: new Date(),\r\n            isEndTimeValid: true,\r\n            end_time_error_message: \"\",\r\n            minitaskBank: [],\r\n            tempMinitaskList: [],\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            minitaskDesc: \"\",\r\n            open: false,\r\n            sliderValue: [0, 200],\r\n            sortByLevel: 40,\r\n            isOpenError: false,\r\n            errorMessage: \"\",\r\n            // Fight field\r\n            fight_name: \"\",\r\n            numbers_std: \"\",\r\n            fight_desc: \"\",\r\n            backgroud_img: \"\",\r\n            time_start: \"\",\r\n            time_end: \"\",\r\n            // validate\r\n            isFightNameError: false,\r\n            fight_name_error: \"\",\r\n            isFightDescError: false,\r\n            fight_desc_error: \"\",\r\n            isFightBackGroundImgError: false,\r\n            fight_backgroundImg_error: \"\",\r\n            isFightNumStdError: false,\r\n            fight_numStd_error: \"\",\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n            this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n        });\r\n    }\r\n\r\n    onChangeFightName = (e) => {\r\n        const fight_name = e.target.value;\r\n        this.setState({ fight_name })\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightDesc = (e) => {\r\n        const fight_desc = e.target.value;\r\n        this.setState({ fight_desc })\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightBackgroundImg = (e) => {\r\n        const backgroud_img = e.target.value;\r\n        this.setState({ backgroud_img })\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeNumStd = (e) => {\r\n        const numbers_std = e.target.value;\r\n        this.setState({ numbers_std })\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderLevelMinitaskChip(minitask) {\r\n        if (minitask === \"easy\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#76d38e\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Easy\"}\r\n                />\r\n            );\r\n        } else if (minitask === \"medium\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#1d97c6\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Medium\"}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#CB3837\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Hard\"}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    onChangeSearch = (event) => {\r\n        const keyword = event.target.value;\r\n        // console.log\r\n        if (keyword === \"\") {\r\n            axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n            });\r\n        }\r\n        else {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}/`).then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStartTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { end_time } = this.state;\r\n        if (new Date(end_time) - new Date(e._d) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { start_time } = this.state;\r\n        console.log(new Date(e._d) - new Date(start_time))\r\n        if (new Date(e._d) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    getMinitaskDesc = (id) => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n            console.log(res.data.mini_task_desc);\r\n            this.setState({\r\n                minitaskDesc: res.data.mini_task_desc,\r\n                open: true\r\n            });\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    checkFilterCondition = (minitask, sortByLevel) => {\r\n        const code_point_Range = this.state.sliderValue;\r\n        if (sortByLevel === \"all\") {\r\n            if (minitask.code_point >= code_point_Range[0] &&\r\n                minitask.code_point <= code_point_Range[1]) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (minitask.level === sortByLevel &&\r\n            minitask.code_point >= code_point_Range[0] &&\r\n            minitask.code_point <= code_point_Range[1]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChangeSlider = (event, value) => {\r\n        this.setState({\r\n            sliderValue: value,\r\n        }, () => {\r\n            const level = this.state.sortByLevel;\r\n            if (level === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeSort = (event) => {\r\n        this.setState({\r\n            tempMinitaskList: []\r\n        }, () => {\r\n            if (event.target.value === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // import minitask to fight_minitask\r\n    getMinitaskFromBank = (minitask) => {\r\n        const { fight_minitask } = this.state;\r\n        const fight_minitask_temp = fight_minitask;\r\n        if (this.isMinitaskExist(minitask.id)) {\r\n            minitask[\"isNew\"] = true\r\n            fight_minitask_temp.push(minitask);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    // check if minitask already exist\r\n    isMinitaskExist = (id) => {\r\n        const { fight_minitask } = this.state;\r\n        for (var i = 0; i < fight_minitask.length; i++) {\r\n            if (fight_minitask.id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // remove minitask from fight_minitask\r\n    removeMinitask(id) {\r\n        const fight_minitask_temp = this.state.fight_minitask;\r\n        var i = -1;\r\n\r\n        fight_minitask_temp.forEach((minitask, index) => {\r\n            if (id.isNew === true) {\r\n                if (minitask.id === id.id) {\r\n                    console.log(minitask.id);\r\n                    i = index;\r\n                }\r\n            }\r\n            else if (id.isNew === undefined && id.id === minitask.id) {\r\n                // call api here\r\n\r\n            }\r\n        });\r\n        console.log(i);\r\n        if (i !== -1) {\r\n            fight_minitask_temp.splice(i, 1);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        }\r\n    }\r\n\r\n    // Validate data\r\n    validate = async () => {\r\n        const { fight_name, fight_desc, backgroud_img, numbers_std, end_time, start_time } = this.state;\r\n        // Fight name\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n        // Fight desc\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n        // Fight background img\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n        // Fight nums std\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n        // Fight start time, end time\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    // save fight\r\n    saveFight = async () => {\r\n        await Promise.all([\r\n            this.validate(),\r\n        ]).then(() => {\r\n            const { isFightNameError, isFightDescError, isFightBackGroundImgError, isFightNumStdError, isEndTimeValid, isStartTimeValid, fight_minitask\r\n            } = this.state;\r\n            console.log(fight_minitask.length);\r\n            if (isFightNameError || isFightDescError || isFightBackGroundImgError || isFightNumStdError || !isEndTimeValid || !isStartTimeValid || fight_minitask.length === 0) {\r\n                this.setState({\r\n                    isOpenError: true,\r\n                    errorMessage: \"Dữ liệu ko hợp lệ\"\r\n                });\r\n            } else {\r\n                // call api here\r\n                const { end_time, start_time, fight_name, numbers_std, fight_desc, backgroud_img, fight_minitask } = this.state;\r\n                console.log(start_time);\r\n                axios.post(`http://localhost:8081/api/v1/curd/fights`, {\r\n                    \"_id\": \"\",\r\n                    \"fight_name\": fight_name,\r\n                    \"numbers_std\": parseInt(numbers_std),\r\n                    \"fight_desc\": fight_desc,\r\n                    \"backgroud_img\": backgroud_img,\r\n                    \"time_start\": start_time,\r\n                    \"time_end\": end_time,\r\n                    \"user_created\": \"\",\r\n                    \"del\": false,\r\n                    \"fight_type\": \"private\"\r\n                }).then(res => {\r\n                    for (var x = 0; x < fight_minitask.length; x++) {\r\n                        axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, {\r\n                            \"_id\": \"\",\r\n                            \"fight_id\": res.data.id,\r\n                            \"minitask_id\": fight_minitask[x].id\r\n                        }).then(res => {\r\n                        });\r\n                    }\r\n                    this.props.enqueueSnackbar('Tạo cuộc thi thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModalError = () => {\r\n        this.setState({ isOpenError: false })\r\n    }\r\n\r\n    render() {\r\n        const { start_time, end_time, isEndTimeValid, isStartTimeValid, end_time_error_message, start_time_error_message, isOpenError, errorMessage,\r\n            // Fight name\r\n            fight_name,\r\n            isFightNameError,\r\n            fight_name_error,\r\n            // Fight Desc\r\n            fight_desc,\r\n            isFightDescError,\r\n            fight_desc_error,\r\n            // Fight backgournd Img\r\n            backgroud_img,\r\n            isFightBackGroundImgError,\r\n            fight_backgroundImg_error,\r\n            // Fight num std\r\n            numbers_std,\r\n            isFightNumStdError,\r\n            fight_numStd_error,\r\n        } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <SnackbarProvider maxSnack={1}>\r\n                    <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n                        <Box p={2}>\r\n                            <MDReactComponent text={this.state.minitaskDesc} />\r\n                        </Box>\r\n                    </Modal>\r\n                    <Modal visible={isOpenError} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n                        <Box p={2}>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h6\">Lỗi</Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h2\">{errorMessage}</Typography>\r\n                            </Box>\r\n                            {/* <MDReactComponent text={errorMessage} /> */}\r\n                        </Box>\r\n                    </Modal>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Tạo cuộc thi</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Box p={2}>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Tên cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\" label=\"Tên cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={fight_name}\r\n                                                error={isFightNameError}\r\n                                                helperText={fight_name_error}\r\n                                                onChange={this.onChangeFightName}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Mô tả cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Mô tả cuộc thi\" multiline\r\n                                                rows={4} variant=\"outlined\" fullWidth\r\n                                                value={fight_desc}\r\n                                                error={isFightDescError}\r\n                                                helperText={fight_desc_error}\r\n                                                onChange={this.onChangeFightDesc}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ảnh</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Ảnh cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={backgroud_img}\r\n                                                error={isFightBackGroundImgError}\r\n                                                helperText={fight_backgroundImg_error}\r\n                                                onChange={this.onChangeFightBackgroundImg}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid container item xs={5} sm={5} md={5} justify=\"center\">\r\n                                            <Box mx={2} border={2}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Ảnh cuộc thi\"\r\n                                                    height=\"200\"\r\n                                                    image={backgroud_img===\"\"?\"https://icye.vn/Images/images/contest.jpg\":backgroud_img}\r\n                                                    title=\"Ảnh cuộc thi\"\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày bắt đầu</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    label=\"Ngày bắt đầu\"\r\n                                                    helperText={start_time_error_message}\r\n                                                    error={!isStartTimeValid}\r\n                                                    ampm={false}\r\n                                                    disablePast\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={start_time}\r\n                                                    onChange={this.handleStartTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Số lượng người tham gia</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField style={{ minWidth: 200 }} id=\"outlined-basic\" label=\"Số lượng người tham gia\" type=\"number\" min=\"1\" variant=\"outlined\"\r\n                                                value={numbers_std}\r\n                                                error={isFightNumStdError}\r\n                                                helperText={fight_numStd_error}\r\n                                                onChange={this.onChangeNumStd}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày kết thúc</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    disablePast\r\n                                                    helperText={end_time_error_message}\r\n                                                    error={!isEndTimeValid}\r\n                                                    label=\"Ngày kết thúc\"\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={end_time}\r\n                                                    onChange={this.handleEndTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Loại cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <FormControl variant=\"outlined\" style={{ minWidth: 200 }}>\r\n                                                <InputLabel id=\"demo-simple-select-outlined-label\">Loại cuộc thi</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                                    id=\"demo-simple-select-outlined\"\r\n                                                    value={2}\r\n                                                    disabled\r\n                                                    // onChange={handleChange}\r\n                                                    label=\"Loại cuộc thi\"\r\n                                                >\r\n                                                    {/* <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem> */}\r\n                                                    {/* <MenuItem value={1}>Công khai</MenuItem> */}\r\n                                                    <MenuItem value={2}>Riêng tư</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Thêm thách thức</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Grid xs={12} container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper >\r\n                                        <Box height={449} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                                            <Box display=\"flex\">\r\n                                                <Box p={1} flexGrow={1}>\r\n                                                    <Typography variant=\"h5\" gutterBottom>\r\n                                                        Thách thức ({this.state.fight_minitask.length})\r\n                                                </Typography>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    {this.state.fight_minitask.length > 0 ?\r\n                                                        <Button variant=\"contained\" color=\"#b39ddb\" onClick={this.saveMinitaskList}>Import</Button> :\r\n                                                        \"\"\r\n                                                    }\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {this.state.fight_minitask.length > 0 ?\r\n                                                <div style={{ overflow: 'auto', minHeight: '350px', backgroundColor: \"white\" }}>\r\n                                                    <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow style={{\r\n                                                                backgroundColor: \"#ffred5f5\",\r\n                                                                height: \"5px\"\r\n                                                            }}>\r\n                                                                <TableCell>Tên thách thức</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                                                <TableCell align=\"right\">Điểm</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                                                <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {this.state.fight_minitask.map(row => (\r\n                                                                <Silde in={true} direction=\"left\" {...(true ? { timeout: 100 } : {})}>\r\n                                                                    <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                                            {row.mini_task_name}\r\n                                                                        </TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                                <div style={{ marginLeft: 10 }}>\r\n                                                                                    {this.renderLevelMinitaskChip(row.level)}\r\n                                                                                </div>\r\n                                                                            </Tooltip>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Xóa</Button>\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </Silde>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                                :\r\n                                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                                    Chưa có thách thức nào.\r\n                                            </Typography>}\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Box p={2} boxShadow={2}>\r\n                                        <Box p={1}>\r\n                                            <Grid xs={12} container justify=\"center\" spacing={2}>\r\n                                                <Grid xs={5} item>\r\n                                                    <Paper component=\"form\">\r\n                                                        <IconButton aria-label=\"search\">\r\n                                                            <SearchIcon />\r\n                                                        </IconButton>\r\n                                                        <InputBase\r\n                                                            placeholder=\"Search\"\r\n                                                            inputProps={{ 'aria-label': 'search google maps' }}\r\n                                                            onChange={this.onChangeSearch}\r\n                                                        />\r\n                                                        <Divider orientation=\"vertical\" />\r\n                                                    </Paper>\r\n                                                </Grid>\r\n                                                <Grid xs={3} bgcolor=\"white\" item>\r\n                                                    <FormControl fullWidth={true}>\r\n                                                        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-label\"\r\n                                                            id=\"demo-simple-select\"\r\n                                                            value={this.state.sortByLevel}\r\n                                                            onChange={this.onChangeSort}\r\n                                                        >\r\n                                                            <MenuItem value={10}>Easy</MenuItem>\r\n                                                            <MenuItem value={20}>Medium</MenuItem>\r\n                                                            <MenuItem value={30}>Hard</MenuItem>\r\n                                                            <MenuItem value={40}>All</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                <Grid xs={4} bgcolor=\"white\" item>\r\n                                                    <Typography id=\"range-slider\" gutterBottom>\r\n                                                        Code point\r\n                                            </Typography>\r\n                                                    <Slider\r\n                                                        value={this.state.sliderValue}\r\n                                                        onChange={this.onChangeSlider}\r\n                                                        valueLabelDisplay=\"auto\"\r\n                                                        aria-labelledby=\"range-slider\"\r\n                                                        min={0}\r\n                                                        max={200}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                                            <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                <TableHead style={{ backgroundColor: \"#F1F1F1\", minHeight: \"50px\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell></TableCell>\r\n                                                        <TableCell>Tên thách thức</TableCell>\r\n                                                        <TableCell align=\"right\">Điểm</TableCell>\r\n                                                        <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                        <TableCell align=\"right\"></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.tempMinitaskList.map(row => (\r\n                                                        <TableRow key={row.task_name}>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    size=\"small\"\r\n                                                                    startIcon={<ArrowBackIcon />}\r\n                                                                    aria-label=\"move selected right\"\r\n                                                                    onClick={() => this.getMinitaskFromBank(row)}\r\n                                                                >\r\n                                                                    {/* &lt; */}\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                <Typography style={{ fontWeight: 700, fontSize: 14 }}>\r\n                                                                    {row.mini_task_name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                            <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                            <TableCell align=\"right\">\r\n                                                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                    <div style={{ marginLeft: 10 }}>\r\n                                                                        {/* {row.level} */}\r\n                                                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                                                    </div>\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box p={2}>\r\n                                <Button variant=\"contained\" onClick={this.saveFight} style={{ backgroundColor: \"#7BC043\", color: \"white\" }}>\r\n                                    Lưu\r\n                            </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                </SnackbarProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(CreateRoomPage);","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    // Button,\r\n    TextField,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Paper,\r\n    InputBase, Divider, Slider, IconButton,\r\n    Table,\r\n    Button,\r\n    Tooltip,\r\n    Chip,\r\n    TableBody, TableCell, TableHead, TableRow,\r\n    Slide,\r\n    CardMedia,\r\n    Backdrop, CircularProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport Silde from '@material-ui/core/Slide';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { matchPath } from \"react-router-dom\";\r\n\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport MDReactComponent from 'markdown-react-js';\r\n\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\n\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nclass UpdateFightPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            start_time: new Date(),\r\n            isStartTimeValid: true,\r\n            start_time_error_message: \"\",\r\n            end_time: new Date(),\r\n            isEndTimeValid: true,\r\n            end_time_error_message: \"\",\r\n            minitaskBank: [],\r\n            tempMinitaskList: [],\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            minitaskDesc: \"\",\r\n            open: false,\r\n            sliderValue: [0, 200],\r\n            sortByLevel: 40,\r\n            isOpenError: false,\r\n            errorMessage: \"\",\r\n            isUpdating: false,\r\n            // Fight field\r\n            id: \"\",\r\n            fight_name: \"\",\r\n            numbers_std: \"\",\r\n            fight_desc: \"\",\r\n            backgroud_img: \"\",\r\n            time_start: \"\",\r\n            time_end: \"\",\r\n            // validate\r\n            isFightNameError: false,\r\n            fight_name_error: \"\",\r\n            isFightDescError: false,\r\n            fight_desc_error: \"\",\r\n            isFightBackGroundImgError: false,\r\n            fight_backgroundImg_error: \"\",\r\n            isFightNumStdError: false,\r\n            fight_numStd_error: \"\",\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n            this.setState({ minitaskBank: res.data, tempMinitaskList: res.data, isLoading: false });\r\n        });\r\n\r\n        axios.get(`http://localhost:8081/api/v1/curd/getOneFight/${id}`).then(res => {\r\n            const fight = res.data;\r\n            this.setState({\r\n                id: fight.id,\r\n                fight_name: fight.fight_name,\r\n                numbers_std: fight.numbers_std,\r\n                fight_desc: fight.fight_desc,\r\n                backgroud_img: fight.backgroud_img,\r\n                start_time: fight.time_start,\r\n                end_time: fight.time_end,\r\n            });\r\n            axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(res => {\r\n                const fight_minitask = res.data;\r\n                this.setState({\r\n                    fight_minitask,\r\n                    isLoading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/update-contest/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    onChangeFightName = (e) => {\r\n        const fight_name = e.target.value;\r\n        this.setState({ fight_name })\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightDesc = (e) => {\r\n        const fight_desc = e.target.value;\r\n        this.setState({ fight_desc })\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeFightBackgroundImg = (e) => {\r\n        const backgroud_img = e.target.value;\r\n        this.setState({ backgroud_img })\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeNumStd = (e) => {\r\n        const numbers_std = e.target.value;\r\n        this.setState({ numbers_std })\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderLevelMinitaskChip(minitask) {\r\n        if (minitask === \"easy\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#76d38e\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Easy\"}\r\n                />\r\n            );\r\n        } else if (minitask === \"medium\") {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#1d97c6\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Medium\"}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Chip\r\n                    style={{ background: \"#CB3837\", color: \"white\" }}\r\n                    size=\"small\"\r\n                    label={\"Hard\"}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    onChangeSearch = (event) => {\r\n        const keyword = event.target.value;\r\n        // console.log\r\n        if (keyword === \"\") {\r\n            axios.get(\"http://localhost:8081/api/v1/curd/minitasks\").then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data });\r\n            });\r\n        }\r\n        else {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchMinitasks/${keyword}/`).then(res => {\r\n                console.log(res.data);\r\n                this.setState({ minitaskBank: res.data, isLoading: false, tempMinitaskList: res.data })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStartTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { end_time } = this.state;\r\n        if (new Date(end_time) - new Date(e._d) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndTimeChange = (e) => {\r\n        // console.log(new Date(e._d));\r\n        const { start_time } = this.state;\r\n        console.log(new Date(e._d) - new Date(start_time))\r\n        if (new Date(e._d) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(e._d),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    getMinitaskDesc = (id) => {\r\n        axios.get(`http://localhost:8081/api/v1/curd/minitasks/${id}`).then(res => {\r\n            console.log(res.data.mini_task_desc);\r\n            this.setState({\r\n                minitaskDesc: res.data.mini_task_desc,\r\n                open: true\r\n            });\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    checkFilterCondition = (minitask, sortByLevel) => {\r\n        const code_point_Range = this.state.sliderValue;\r\n        if (sortByLevel === \"all\") {\r\n            if (minitask.code_point >= code_point_Range[0] &&\r\n                minitask.code_point <= code_point_Range[1]) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (minitask.level === sortByLevel &&\r\n            minitask.code_point >= code_point_Range[0] &&\r\n            minitask.code_point <= code_point_Range[1]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChangeSlider = (event, value) => {\r\n        this.setState({\r\n            sliderValue: value,\r\n        }, () => {\r\n            const level = this.state.sortByLevel;\r\n            if (level === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n            else if (level === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeSort = (event) => {\r\n        this.setState({\r\n            tempMinitaskList: []\r\n        }, () => {\r\n            if (event.target.value === 10) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"easy\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 20) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"medium\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 30) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"hard\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n            else if (event.target.value === 40) {\r\n                const listFilter = this.state.minitaskBank;\r\n                const filterList = listFilter.filter(minitask => this.checkFilterCondition(minitask, \"all\"));\r\n                this.setState({\r\n                    tempMinitaskList: filterList,\r\n                    sortByLevel: event.target.value\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // import minitask to fight_minitask\r\n    getMinitaskFromBank = (minitask) => {\r\n        const { fight_minitask } = this.state;\r\n        const fight_minitask_temp = fight_minitask;\r\n        if (this.isMinitaskExist(minitask.id)) {\r\n            minitask[\"isNew\"] = true\r\n            fight_minitask_temp.push(minitask);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    // check if minitask already exist\r\n    isMinitaskExist = (id) => {\r\n        const { fight_minitask } = this.state;\r\n        for (var i = 0; i < fight_minitask.length; i++) {\r\n            if (fight_minitask.id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // remove minitask from fight_minitask\r\n    removeMinitask(id) {\r\n        const fight_minitask_temp = this.state.fight_minitask;\r\n        var i = -1;\r\n\r\n        fight_minitask_temp.forEach((minitask, index) => {\r\n            if (id.isNew === true) {\r\n                if (minitask.id === id.id) {\r\n                    console.log(minitask.id);\r\n                    i = index;\r\n                }\r\n            }\r\n            else if (id.isNew === undefined && id.id === minitask.id) {\r\n                // call api here\r\n                axios.delete(`http://localhost:8081/api/v1/curd/delminitask/${this.state.id}/${id.id}`).then(res => {\r\n                    fight_minitask_temp.splice(i, 1);\r\n                    this.setState({ fight_minitask: fight_minitask_temp });\r\n                    this.props.enqueueSnackbar('Xóa thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        console.log(i);\r\n        if (i !== -1) {\r\n            fight_minitask_temp.splice(i, 1);\r\n            this.setState({ fight_minitask: fight_minitask_temp });\r\n        }\r\n    }\r\n\r\n    // Validate data\r\n    validate = async () => {\r\n        const { fight_name, fight_desc, backgroud_img, numbers_std, end_time, start_time } = this.state;\r\n        // Fight name\r\n        if (fight_name === \"\") {\r\n            this.setState({\r\n                isFightNameError: true,\r\n                fight_name_error: \"Tên cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNameError: false,\r\n                fight_name_error: \"\"\r\n            });\r\n        }\r\n        // Fight desc\r\n        if (fight_desc === \"\") {\r\n            this.setState({\r\n                isFightDescError: true,\r\n                fight_desc_error: \"Mô tả cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightDescError: false,\r\n                fight_desc_error: \"\"\r\n            });\r\n        }\r\n        // Fight background img\r\n        if (backgroud_img === \"\") {\r\n            this.setState({\r\n                isFightBackGroundImgError: true,\r\n                fight_backgroundImg_error: \"Ảnh cuộc thi không được để trống\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightBackGroundImgError: false,\r\n                fight_backgroundImg_error: \"\"\r\n            });\r\n        }\r\n        // Fight nums std\r\n        if (numbers_std === \"\" || numbers_std <= 0) {\r\n            this.setState({\r\n                isFightNumStdError: true,\r\n                fight_numStd_error: \"Số lượng người tham gia không hợp lệ\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFightNumStdError: false,\r\n                fight_numStd_error: \"\"\r\n            });\r\n        }\r\n        // Fight start time, end time\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isStartTimeValid: false,\r\n                start_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                start_time: new Date(start_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n        if (new Date(end_time) - new Date(start_time) <= 0) {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: false,\r\n                end_time_error_message: \"Ngày bắt đầu phải bé hơn ngày kết thúc\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                end_time: new Date(end_time),\r\n                isEndTimeValid: true,\r\n                end_time_error_message: \"\",\r\n                isStartTimeValid: true,\r\n                start_time_error_message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    // save fight\r\n    saveFight = async () => {\r\n        this.setState({ isUpdating: true })\r\n        await Promise.all([\r\n            this.validate(),\r\n        ]).then(() => {\r\n            const { isFightNameError, isFightDescError, isFightBackGroundImgError, isFightNumStdError, isEndTimeValid, isStartTimeValid, fight_minitask\r\n            } = this.state;\r\n            console.log(fight_minitask.length);\r\n            if (isFightNameError || isFightDescError || isFightBackGroundImgError || isFightNumStdError || !isEndTimeValid || !isStartTimeValid || fight_minitask.length === 0) {\r\n                this.setState({\r\n                    isOpenError: true,\r\n                    errorMessage: \"Dữ liệu ko hợp lệ\",\r\n                    isUpdating: false,\r\n                });\r\n            } else {\r\n                // call api here\r\n                const { end_time, start_time, fight_name, numbers_std, fight_desc, backgroud_img, fight_minitask, id } = this.state;\r\n                console.log(start_time);\r\n                axios.put(`http://localhost:8081/api/v1/curd/fights/${id}`, {\r\n                    \"_id\": id,\r\n                    \"fight_name\": fight_name,\r\n                    \"numbers_std\": parseInt(numbers_std),\r\n                    \"fight_desc\": fight_desc,\r\n                    \"backgroud_img\": backgroud_img,\r\n                    \"time_start\": start_time,\r\n                    \"time_end\": end_time,\r\n                    \"user_created\": \"\",\r\n                    \"del\": false,\r\n                    \"fight_type\": \"private\"\r\n                }).then(res => {\r\n                    for (var x = 0; x < fight_minitask.length; x++) {\r\n                        if (fight_minitask[x].isNew === true) {\r\n                            axios.post(`http://localhost:8081/api/v1/curd/fightminitask`, {\r\n                                \"_id\": \"\",\r\n                                \"fight_id\": res.data.id,\r\n                                \"minitask_id\": fight_minitask[x].id\r\n                            }).then(res => {\r\n\r\n                            });\r\n                        }\r\n                    }\r\n                    this.setState({ isUpdating: false })\r\n                    this.props.enqueueSnackbar('Chỉnh sửa cuộc thi thành công', {\r\n                        variant: 'success',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModalError = () => {\r\n        this.setState({ isOpenError: false })\r\n    }\r\n\r\n    render() {\r\n        const { start_time, end_time, isEndTimeValid, isStartTimeValid, end_time_error_message, start_time_error_message, isOpenError, errorMessage,\r\n            isLoading,\r\n            isUpdating,\r\n            // Fight name\r\n            fight_name,\r\n            isFightNameError,\r\n            fight_name_error,\r\n            // Fight Desc\r\n            fight_desc,\r\n            isFightDescError,\r\n            fight_desc_error,\r\n            // Fight backgournd Img\r\n            backgroud_img,\r\n            isFightBackGroundImgError,\r\n            fight_backgroundImg_error,\r\n            // Fight num std\r\n            numbers_std,\r\n            isFightNumStdError,\r\n            fight_numStd_error,\r\n        } = this.state;\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop open={isUpdating} style={{ zIndex: 999 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <SnackbarProvider maxSnack={1}>\r\n                    <Modal visible={this.state.open} effect=\"fadeInDown\" onClickAway={() => this.closeModal()}>\r\n                        <Box p={2}>\r\n                            <MDReactComponent text={this.state.minitaskDesc} />\r\n                        </Box>\r\n                    </Modal>\r\n                    <Modal visible={isOpenError} effect=\"fadeInDown\" onClickAway={() => this.closeModalError()}>\r\n                        <Box p={2}>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h6\">Lỗi</Typography>\r\n                            </Box>\r\n                            <Box p={1}>\r\n                                <Typography variant=\"h2\">{errorMessage}</Typography>\r\n                            </Box>\r\n                            {/* <MDReactComponent text={errorMessage} /> */}\r\n                        </Box>\r\n                    </Modal>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Chỉnh sửa cuộc thi</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1200 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Box p={2}>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Tên cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\" label=\"Tên cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={fight_name}\r\n                                                error={isFightNameError}\r\n                                                helperText={fight_name_error}\r\n                                                onChange={this.onChangeFightName}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Mô tả cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={10} sm={10} md={10}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Mô tả cuộc thi\" multiline\r\n                                                rows={4} variant=\"outlined\" fullWidth\r\n                                                value={fight_desc}\r\n                                                error={isFightDescError}\r\n                                                helperText={fight_desc_error}\r\n                                                onChange={this.onChangeFightDesc}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ảnh</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField id=\"outlined-basic\" label=\"Ảnh cuộc thi\" variant=\"outlined\" fullWidth\r\n                                                value={backgroud_img}\r\n                                                error={isFightBackGroundImgError}\r\n                                                helperText={fight_backgroundImg_error}\r\n                                                onChange={this.onChangeFightBackgroundImg}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid container item xs={5} sm={5} md={5} justify=\"center\">\r\n                                            <Box mx={2} border={2}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Ảnh cuộc thi\"\r\n                                                    height=\"200\"\r\n                                                    image={backgroud_img === \"\" ? \"https://icye.vn/Images/images/contest.jpg\" : backgroud_img}\r\n                                                    title=\"Ảnh cuộc thi\"\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày bắt đầu</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    label=\"Ngày bắt đầu\"\r\n                                                    helperText={start_time_error_message}\r\n                                                    error={!isStartTimeValid}\r\n                                                    ampm={false}\r\n                                                    disablePast\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={start_time}\r\n                                                    onChange={this.handleStartTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Số lượng người tham gia</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <TextField style={{ minWidth: 200 }} id=\"outlined-basic\" label=\"Số lượng người tham gia\" type=\"number\" min=\"1\" variant=\"outlined\"\r\n                                                value={numbers_std}\r\n                                                error={isFightNumStdError}\r\n                                                helperText={fight_numStd_error}\r\n                                                onChange={this.onChangeNumStd}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <Grid xs={12} container>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Ngày kết thúc</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={3} sm={3} md={3}>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    disablePast\r\n                                                    helperText={end_time_error_message}\r\n                                                    error={!isEndTimeValid}\r\n                                                    label=\"Ngày kết thúc\"\r\n                                                    inputVariant=\"outlined\"\r\n                                                    value={end_time}\r\n                                                    onChange={this.handleEndTimeChange}\r\n                                                    showTodayButton\r\n                                                    format=\"DD/MM/YYYY hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                        </Grid>\r\n                                        <Grid container item xs={2} sm={2} md={2} alignItems=\"flex-start\">\r\n                                            <Typography style={{ fontWeight: 500, fontSize: 17 }}>Loại cuộc thi</Typography>\r\n                                        </Grid>\r\n                                        <Grid xs={5} sm={5} md={5}>\r\n                                            <FormControl variant=\"outlined\" style={{ minWidth: 200 }}>\r\n                                                <InputLabel id=\"demo-simple-select-outlined-label\">Loại cuộc thi</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                                    id=\"demo-simple-select-outlined\"\r\n                                                    value={2}\r\n                                                    disabled\r\n                                                    // onChange={handleChange}\r\n                                                    label=\"Loại cuộc thi\"\r\n                                                >\r\n                                                    {/* <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem> */}\r\n                                                    {/* <MenuItem value={1}>Công khai</MenuItem> */}\r\n                                                    <MenuItem value={2}>Riêng tư</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Grid>\r\n                            <Typography style={{ fontWeight: 200, fontSize: 35 }}>Thêm thách thức</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide in={true} direction=\"up\" {...(true ? { timeout: 1700 } : {})}>\r\n                        <Box my={2} style={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n                            <Grid xs={12} container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Paper >\r\n                                        <Box height={449} bgcolor=\"#1F74BE\" color=\"primary.contrastText\" p={{ xs: 2, sm: 2, md: 2 }}>\r\n                                            <Box display=\"flex\">\r\n                                                <Box p={1} flexGrow={1}>\r\n                                                    <Typography variant=\"h5\" gutterBottom>\r\n                                                        Thách thức ({this.state.fight_minitask.length})\r\n                                                </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            {this.state.fight_minitask.length > 0 ?\r\n                                                <div style={{ overflow: 'auto', minHeight: '350px', backgroundColor: \"white\" }}>\r\n                                                    <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow style={{\r\n                                                                backgroundColor: \"#ffred5f5\",\r\n                                                                height: \"5px\"\r\n                                                            }}>\r\n                                                                <TableCell>Tên thách thức</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask name</TableCell> */}\r\n                                                                <TableCell align=\"right\">Điểm</TableCell>\r\n                                                                {/* <TableCell align=\"right\">Minitask Desc</TableCell> */}\r\n                                                                <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                                <TableCell align=\"right\"></TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {this.state.fight_minitask.map(row => (\r\n                                                                <Silde in={true} direction=\"left\" {...(true ? { timeout: 100 } : {})}>\r\n                                                                    <TableRow bgcolor={row.isNew ? \"#bbdefb\" : \"\"} key={row.task_name}>\r\n                                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                                            {row.mini_task_name}\r\n                                                                        </TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                                        {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                                <div style={{ marginLeft: 10 }}>\r\n                                                                                    {this.renderLevelMinitaskChip(row.level)}\r\n                                                                                </div>\r\n                                                                            </Tooltip>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell align=\"right\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                                        <TableCell align=\"right\">\r\n                                                                            <Button onClick={() => { this.removeMinitask(row) }} startIcon={<DeleteForeverIcon />} size=\"large\" color=\"secondary\"> Xóa</Button>\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </Silde>\r\n                                                            ))}\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                                :\r\n                                                <Typography variant=\"subtitle1\" gutterBottom>\r\n                                                    Chưa có thách thức nào.\r\n                                            </Typography>}\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Box p={2} boxShadow={2}>\r\n                                        <Box p={1}>\r\n                                            <Grid xs={12} container justify=\"center\" spacing={2}>\r\n                                                <Grid xs={5} item>\r\n                                                    <Paper component=\"form\">\r\n                                                        <IconButton aria-label=\"search\">\r\n                                                            <SearchIcon />\r\n                                                        </IconButton>\r\n                                                        <InputBase\r\n                                                            placeholder=\"Search\"\r\n                                                            inputProps={{ 'aria-label': 'search google maps' }}\r\n                                                            onChange={this.onChangeSearch}\r\n                                                        />\r\n                                                        <Divider orientation=\"vertical\" />\r\n                                                    </Paper>\r\n                                                </Grid>\r\n                                                <Grid xs={3} bgcolor=\"white\" item>\r\n                                                    <FormControl fullWidth={true}>\r\n                                                        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-label\"\r\n                                                            id=\"demo-simple-select\"\r\n                                                            value={this.state.sortByLevel}\r\n                                                            onChange={this.onChangeSort}\r\n                                                        >\r\n                                                            <MenuItem value={10}>Easy</MenuItem>\r\n                                                            <MenuItem value={20}>Medium</MenuItem>\r\n                                                            <MenuItem value={30}>Hard</MenuItem>\r\n                                                            <MenuItem value={40}>All</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                <Grid xs={4} bgcolor=\"white\" item>\r\n                                                    <Typography id=\"range-slider\" gutterBottom>\r\n                                                        Code point\r\n                                            </Typography>\r\n                                                    <Slider\r\n                                                        value={this.state.sliderValue}\r\n                                                        onChange={this.onChangeSlider}\r\n                                                        valueLabelDisplay=\"auto\"\r\n                                                        aria-labelledby=\"range-slider\"\r\n                                                        min={0}\r\n                                                        max={200}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                        <div style={{ overflow: 'auto', height: '340px' }}>\r\n                                            <Table style={{ tableLayout: 'fixed' }} size=\"small\" aria-label=\"a dense table\">\r\n                                                <TableHead style={{ backgroundColor: \"#F1F1F1\", minHeight: \"50px\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell></TableCell>\r\n                                                        <TableCell>Tên thách thức</TableCell>\r\n                                                        <TableCell align=\"right\">Điểm</TableCell>\r\n                                                        <TableCell align=\"right\">Độ khó</TableCell>\r\n                                                        <TableCell align=\"right\"></TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.tempMinitaskList.map(row => (\r\n                                                        <TableRow key={row.task_name}>\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    size=\"small\"\r\n                                                                    startIcon={<ArrowBackIcon />}\r\n                                                                    aria-label=\"move selected right\"\r\n                                                                    onClick={() => this.getMinitaskFromBank(row)}\r\n                                                                >\r\n                                                                    {/* &lt; */}\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                <Typography style={{ fontWeight: 700, fontSize: 14 }}>\r\n                                                                    {row.mini_task_name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_name}</TableCell> */}\r\n                                                            <TableCell align=\"right\">{row.code_point}</TableCell>\r\n                                                            {/* <TableCell align=\"right\">{row.mini_task_desc}</TableCell> */}\r\n                                                            <TableCell align=\"right\">\r\n                                                                <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                                                                    <div style={{ marginLeft: 10 }}>\r\n                                                                        {/* {row.level} */}\r\n                                                                        {this.renderLevelMinitaskChip(row.level)}\r\n                                                                    </div>\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"center\" onClick={() => this.getMinitaskDesc(row.id)}><Button color=\"primary\">Mô tả</Button></TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box p={2}>\r\n                                <Button startIcon={<SaveIcon />} variant=\"contained\" onClick={this.saveFight} style={{ backgroundColor: \"#7BC043\", color: \"white\" }}>\r\n                                    Lưu\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </Slide>\r\n                </SnackbarProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSnackbar(UpdateFightPage);","import React, { Component } from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Minitask extends Component {\r\n\r\n    renderLevel = (level) => {\r\n        if (level === \"easy\") {\r\n            return <Chip size=\"small\" label=\"Đơn giản\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        } else if (level === \"medium\") {\r\n            return <Chip size=\"small\" label=\"Trung bình\" style={{ backgroundColor: \"#42A5F5\", color: \"white\" }} />\r\n        } else if (level === \"hard\") {\r\n            return <Chip size=\"small\" label=\"Phức tạp\" style={{ backgroundColor: \"#FF7043\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    renderStatus = (status) => {\r\n        if (status === \"done\") {\r\n            return <DoneIcon fontSize=\"medium\" style={{ color: \"#449D44\" }} />;\r\n        } else if (status === \"tried\") {\r\n            return <HelpOutlineIcon fontSize=\"medium\" style={{ color: \"#0088CC\" }} />\r\n        } else if (status === \"normal\") {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    renderChinhPhucButton = (contestStatus, isUserJoinFight, minitask_id) => {\r\n        if (isUserJoinFight) {\r\n            if (contestStatus === 0) {\r\n                return <Box>\r\n                    <Button variant=\"contained\" component={Link} to={`/minitask/${minitask_id}`} style={{ backgroundColor: \"#4FA34F\", color: \"white\" }}>\r\n                        <Typography style={{ color: \"white\", fontWeight: 500 }} >Chinh phục</Typography>\r\n                    </Button>\r\n                </Box>\r\n            } else {\r\n                return \"\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { status, level, name, minitask, } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box mx={2}>\r\n                    <Divider />\r\n                    <Box my={1}>\r\n                        <Grid container xs={12}>\r\n                            <Grid container item xs={1} sm={1} md={1} alignContent=\"center\" justify=\"center\">\r\n                                {this.renderStatus(status)}\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8} md={8}>\r\n                                <Grid container mx={2} xs={12}>\r\n                                    <Grid container item xs={12} md={12} sm={12}>\r\n                                        <Typography noWrap style={{ color: \"#0373BB\", fontWeight: \"500\", fontSize: 18 }}>{name}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container mx={2} xs={12}>\r\n                                    <Grid item xs={4} md={4} sm={4}>\r\n                                        <Typography variant=\"button\">Điểm: {minitask.code_point}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8} md={8} sm={8}>\r\n                                        <Typography variant=\"button\">Độ khó: </Typography> {this.renderLevel(level)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid container item xs={3} sm={3} md={3} justify=\"center\" alignContent=\"center\">\r\n                                {\r\n                                    this.renderChinhPhucButton(contestStatus, isUserJoinFight, minitask.id)\r\n                                }\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Box>\r\n                    <Divider />\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Minitask;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nclass UserRank extends Component {\r\n    componentDidMount(){\r\n        console.log(this.props.user);\r\n    }\r\n    render() {\r\n        const { user, rank, isCurrentUser } = this.props;\r\n        return (\r\n            <Grid container xs={12} wrap=\"nowrap\" spacing={2} style={{backgroundColor: isCurrentUser?\"#F1F1F1\":\"\"}}>\r\n                <Grid item xs={1} md={1} sm={1}>\r\n                    <Typography style={{fontWeight:350, fontSize:16}}>{rank+1}</Typography>\r\n                </Grid>\r\n                <Grid item xs={7} md={7} sm={7} wrap=\"nowrap\">\r\n                    <Typography style={{fontWeight:350, fontSize:16}} noWrap>{user.email}</Typography>\r\n                </Grid>\r\n                <Grid item container justify=\"center\"  xs={4} md={4} sm={4}>\r\n                    <Typography style={{fontWeight:350, fontSize:16}}>{user.point}</Typography>\r\n                </Grid>\r\n                {/* <Grid item container xs={4} md={4} sm={4}>\r\n                    <Typography noWrap style={{fontWeight:350, fontSize:16}}>{new Date(user.finished_time).toLocaleTimeString() === \"06:42:04\"}</Typography>\r\n                </Grid> */}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserRank;","import React, { Component } from 'react';\r\n\r\nimport './room.css';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    // AppBar,\r\n    // Tabs,\r\n    // Tab,\r\n    Typography,\r\n    Button,\r\n    Divider,\r\n    Paper,\r\n    TextField,\r\n    Chip,\r\n    Avatar,\r\n    Fade,\r\n    CardMedia,\r\n    Slide,\r\n} from \"@material-ui/core\";\r\n\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\n\r\nimport Minitask from \"./Minitask\";\r\nimport UserRank from './UserRank';\r\n\r\n// import Modal from 'react-awesome-modal';\r\nimport axios from 'axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withSnackbar, SnackbarProvider } from 'notistack';\r\nimport { matchPath } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { connect } from \"react-redux\";\r\nimport Notfoundpage from './Notfoundpage';\r\n\r\n\r\nimport { sendMsg } from \"../../websocket\";\r\n\r\n// import { connectWebSocket } from \"../../websocket\"\r\nimport { withRouter } from 'react-router-dom'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass RoomDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            isOpenSearchFriend: false,\r\n            users: [],\r\n            email: '',\r\n            invitedUsers: [],\r\n            isLoadingSearch: false,\r\n            fight: {},\r\n            fight_minitask: [],\r\n            isLoading: true,\r\n            users_fight: [],\r\n            isUserJoinFight: '',\r\n            minitaskList: [],\r\n            firstIdMinitask: \"\",\r\n            isLoadingStartBtn: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(res => {\r\n            this.setState({ fight: res.data }, () => {\r\n                var code;\r\n                const { fight } = this.state;\r\n                if ((new Date() < new Date(fight.time_start))) {\r\n                    code = -1;\r\n                }\r\n                if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n                    // Đang diển ra\r\n                    code = 0;\r\n                }\r\n                if ((new Date() > new Date(fight.time_end))) {\r\n                    code = 1;\r\n                }\r\n                this.setState({ contestStatus: code });\r\n                this.interval = setInterval(() => {\r\n                    const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n                    date ? this.setState(date) : this.stop();\r\n                }, 1000);\r\n                // Get list minitask\r\n                axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(res => {\r\n                    const fight_minitask = res.data;\r\n                    const completed = res.data;\r\n                    this.setState({ minitaskList: completed, firstIdMinitask: completed[0].id })\r\n                    console.log(this.state.minitaskList);\r\n                    console.log(this.state.firstIdMinitask);\r\n                    this.setState({\r\n                        fight_minitask,\r\n                    }, () => {\r\n                        axios.get(`http://localhost:8081/api/v1/curd/user-fight/${id}`).then(user => {\r\n                            const users_fight = user.data;\r\n                            console.log(users_fight);\r\n                            this.setState({\r\n                                users_fight: user.data,\r\n                                invitedUsers: user.data,\r\n                            }, () => {\r\n                                axios.get(`http://localhost:8081/api/v1/curd/isUserJoinFight/${id}/`).then(isUserJoin => {\r\n                                    console.log(isUserJoin);\r\n                                    this.setState({\r\n                                        isUserJoinFight: isUserJoin.data,\r\n                                        isLoading: false\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n        // Websocket\r\n        // connectWebSocket((msg) => {\r\n        //     // alert(\"hello\")\r\n        //     console.log(msg.data);\r\n        // });\r\n\r\n        // axios\r\n        //     .get(`http://localhost:8081/api/v1/curd/listminitaskfight/5ea6ec54e939f21a5432ba66`)\r\n        //     .then(res => {\r\n        //         const completed = res.data;\r\n        //         this.setState({ minitaskList: completed, firstIdMinitask: completed[0].id})\r\n        //         console.log(this.state.minitaskList);\r\n        //         console.log(this.state.firstIdMinitask);\r\n        //     });\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/contest-detail/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    // handle search user\r\n    handleSearchUser = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({ email, isLoadingSearch: true }, () => {\r\n            axios.get(`http://localhost:8081/api/v1/curd/searchUser/${email}/`).then(res => {\r\n                this.setState({\r\n                    users: res.data,\r\n                    isLoadingSearch: false,\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    headerLeaderBoard = () => {\r\n        return <Grid container xs={12} wrap=\"nowrap\" spacing={2}>\r\n            <Grid item xs={1} md={1} sm={1}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>#</Typography>\r\n            </Grid>\r\n            <Grid item xs={7} md={7} sm={7} wrap=\"nowrap\">\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Tên đăng nhập</Typography>\r\n            </Grid>\r\n            <Grid item container justify=\"center\" xs={4} md={4} sm={4}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Điểm</Typography>\r\n            </Grid>\r\n            {/* <Grid item xs={4} md={4} sm={4}>\r\n                <Typography style={{ fontWeight: 700, fontSize: 18 }}>Thời gian</Typography>\r\n            </Grid> */}\r\n        </Grid>;\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    handleOpenSearchUserModal = () => {\r\n        this.setState({ isOpenSearchFriend: true });\r\n    }\r\n\r\n    checkUserInInvitedList = (id) => {\r\n        const invitedUsers = this.state.invitedUsers;\r\n        console.log(invitedUsers);\r\n        for (var i = 0; i < invitedUsers.length; i++) {\r\n            if (invitedUsers[i].id === id) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleInviteUser = (user) => {\r\n        const { invitedUsers, users_fight, fight } = this.state;\r\n        console.log(fight.numbers_std);\r\n        console.log(users_fight.length);\r\n        if (users_fight.length < fight.numbers_std) {\r\n            if (this.checkUserInInvitedList(user.id)) {\r\n                user.isNew = true;\r\n                invitedUsers.push(user);\r\n                this.setState({ invitedUsers });\r\n            } else {\r\n                this.props.enqueueSnackbar('Người dùng đã được mời', {\r\n                    variant: 'warning',\r\n                });\r\n            }\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'warning',\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteUserFromInvitedList = (deleted_user) => {\r\n        const { invitedUsers, fight } = this.state;\r\n        var i = -1;\r\n\r\n        console.log(deleted_user.id);\r\n\r\n        invitedUsers.forEach((user, index) => {\r\n            if (user.id === deleted_user.id) {\r\n                i = index;\r\n            }\r\n        });\r\n        if (i !== -1) {\r\n            invitedUsers.splice(i, 1);\r\n            this.setState({ invitedUsers });\r\n            if (!deleted_user.isNew) {\r\n                // kick user\r\n                axios.delete(`http://localhost:8081/api/v1/curd/kick-user-out-fight/${deleted_user.id}/${fight.id}/`).then(res => {\r\n                    if (res.data === \"ok\") {\r\n                        this.send(fight.id);\r\n                        this.props.enqueueSnackbar('Xóa thành công', {\r\n                            variant: 'success',\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                this.props.enqueueSnackbar('Xóa thành công', {\r\n                    variant: 'success',\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModalError = (e) => {\r\n        this.setState({ isOpenSearchFriend: false });\r\n    }\r\n\r\n    send = (id) => {\r\n\r\n        console.log(\"send\");\r\n\r\n        sendMsg(JSON.stringify({\r\n            fight_id: id,\r\n            user_id: \"\",\r\n            minitask_id: \"\",\r\n            point: 0,\r\n            request: \"get-leader-board\",\r\n        }))\r\n    }\r\n\r\n    handleJoinFight = () => {\r\n        const { users_fight, fight } = this.state;\r\n        if (users_fight.length < fight.numbers_std) {\r\n            axios.post(`http://localhost:8081/api/v1/curd/jointFight/${fight.id}/`).then(res => {\r\n                console.log(res.data);\r\n                const { users_fight } = this.state;\r\n                users_fight.push(res.data)\r\n                this.setState({ isUserJoinFight: true, users_fight }, () => {\r\n                    console.log(this.state.users_fight);\r\n                })\r\n                this.props.enqueueSnackbar('Đăng ký thành công', {\r\n                    variant: 'success',\r\n                });\r\n                this.send(fight.id);\r\n            });\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'warning',\r\n            });\r\n        }\r\n    }\r\n\r\n    renderInviteFriendButton = (user_created, contestStatus) => {\r\n        if (user_created === this.props.user.email) {\r\n            if (contestStatus !== 1) {\r\n                return <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#4FA34F\", color: \"white\" }} onClick={this.handleOpenSearchUserModal}\r\n                        startIcon={<PersonAddIcon style={{ color: \"white\" }} />}>\r\n                        <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                            Mời bạn\r\n                        </Typography>\r\n                    </Button>\r\n                </Fade>\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    inviteFriendByMail = () => {\r\n        const { users_fight, fight } = this.state;\r\n        console.log(users_fight);\r\n        if (users_fight.length <= fight.numbers_std) {\r\n            for (var i = 0; i < users_fight.length; i++) {\r\n                if (users_fight[i][\"isNew\"]) {\r\n                    if (users_fight.length <= fight.numbers_std) {\r\n                        users_fight[i][\"isNew\"] = false;\r\n                        axios.post(`http://localhost:8081/api/v1/curd/jointFight_1/${fight.id}/${users_fight[i].id}/${users_fight[i].email}/`).then(res => {\r\n                            this.props.enqueueSnackbar(`Đã thêm ${res.data.email} vào cuộc thi!`, {\r\n                                variant: 'success',\r\n                            });\r\n                        });\r\n                        axios.post(`http://localhost:8081/api/v1/curd/invite-user`, {\r\n                            host: this.props.user.email,\r\n                            user: users_fight[i].email,\r\n                            link: `http://localhost:3000/profile/contest-detail/${fight.id}`\r\n                        }).then(res => {\r\n                            console.log(res);\r\n                        });\r\n                    } else {\r\n                        this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                            variant: 'warning',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            this.send(fight.id);\r\n        } else {\r\n            this.props.enqueueSnackbar('Vượt quá số lượng người dùng cho phép', {\r\n                variant: 'success',\r\n            });\r\n        }\r\n    }\r\n\r\n    renderRegisterButton = (contestStatus, isUserJoinFight) => {\r\n        if (!isUserJoinFight) {\r\n            if (contestStatus !== 1) {\r\n                return <Box>\r\n                    <Fade in={!isUserJoinFight} {...(true ? { timeout: 1000 } : {})}>\r\n                        <Button variant=\"contained\" onClick={this.handleJoinFight} style={{ backgroundColor: \"#4F5060\" }}>\r\n                            <Typography variant=\"button\" style={{ color: \"white\" }}>Đăng ký ngay</Typography>\r\n                        </Button>\r\n                    </Fade>\r\n                </Box>;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    renderFighType = (fight_type) => {\r\n        if (fight_type === \"private\") {\r\n            return <Chip size=\"small\" label=\"Riêng tư\" style={{ backgroundColor: \"#C24535\", color: \"white\" }} />;\r\n        } else if (fight_type === \"public\") {\r\n            return <Chip size=\"small\" label=\"Công khai\" style={{ backgroundColor: \"#77C148\", color: \"white\" }} />\r\n        }\r\n    }\r\n\r\n    handleClickStartButton = () => {\r\n        const { fight } = this.state;\r\n        this.setState({ isLoadingStartBtn: true })\r\n        axios.get(`http://localhost:8081/api/v1/curd/start-fight/${fight.id}`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({ isLoadingStartBtn: false });\r\n            this.props.history.push(`/fight/${fight.id}/minitask/${this.state.firstIdMinitask}`)\r\n        });\r\n    }\r\n\r\n    renderStartButton = () => {\r\n        const { isUserJoinFight, contestStatus, isLoadingStartBtn } = this.state;\r\n        if (isUserJoinFight && contestStatus !== 1) {\r\n            return <Button variant=\"contained\" onClick={this.handleClickStartButton} style={{ backgroundColor: \"#DE1F45 \", color: \"white\" }}\r\n                // component={Link} to={`/fight/${fight.id}/minitask/${this.state.firstIdMinitask}`}\r\n                startIcon={<PlayArrowIcon style={{ color: \"white\" }} />}>\r\n                <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                    {\r\n                        isLoadingStartBtn ?\r\n                            <CircularProgress size={20} style={{ color: \"white\", fontSize: 10 }} /> : \"Bắt đầu\"\r\n                    }\r\n                </Typography>\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    handleClickViewLeaderBoard = () => {\r\n        const { fight } = this.state;\r\n        this.props.history.push(`/profile/fight-leader-board/${fight.id}`);\r\n    }\r\n\r\n    render() {\r\n        const { contestStatus, days, hours, min, sec, isOpenSearchFriend, email, users, invitedUsers, isLoadingSearch, fight, fight_minitask, isLoading, users_fight\r\n            , isUserJoinFight } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <div\r\n                className=\"sweet-loading\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\"\r\n                }}\r\n            >\r\n                <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={isLoading}\r\n                />\r\n            </div>\r\n        }\r\n        let timer;\r\n        if (contestStatus === 0) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#f44336\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                        Còn lại\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === -1) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#4caf50\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                        Sắp diển ra\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === 1) {\r\n            timer = <React.Fragment>\r\n                <Box display=\"flex\" color=\"#757575\">\r\n                    <Box mx={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            Kết thúc\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={1} display=\"flex\" color=\"#757575\">\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {new Date(fight.time_end).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </React.Fragment>\r\n        }\r\n\r\n        const userList = users.map((user, index) => {\r\n            return <Box display=\"flex\" p={1} onClick={() => this.handleInviteUser(user)}>\r\n                <Chip\r\n                    avatar={<Avatar alt=\"Ảnh đại diện\" src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar} />}\r\n                    label={user.email}\r\n                    variant=\"outlined\"\r\n                />\r\n            </Box>\r\n        });\r\n\r\n        const invitedUserList = invitedUsers.map((user, index) => {\r\n            return <Fade in={true}><Box p={1}>\r\n                <Chip\r\n                    avatar={<Avatar alt=\"Ảnh đại diện\" src={(user.socialAccount === \"google\" || user.socialAccount === \"facebook\") ? user.avt : user.avatar} />}\r\n                    label={user.email}\r\n                    variant=\"outlined\"\r\n                    color={!user.isNew ? \"\" : \"primary\"}\r\n                    onDelete={() => this.handleDeleteUserFromInvitedList(user)}\r\n                />\r\n            </Box>\r\n            </Fade>;\r\n        });\r\n\r\n        const fight_minitask_list = fight_minitask.map((minitask, index) => {\r\n            return <Slide direction=\"right\" in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                <Minitask status={\"tried\"} level={minitask.level} name={minitask.mini_task_name} minitask={minitask} isUserJoinFight={isUserJoinFight} contestStatus={contestStatus} />\r\n            </Slide>\r\n        });\r\n\r\n        const leaderBoard = users_fight.map((user, index) => {\r\n            return <Fade in={true} direction=\"left\" {...(true ? { timeout: 1000 } : {})}>\r\n                <UserRank user={user} rank={index} isCurrentUser={this.props.user.email === user.email} />\r\n            </Fade>\r\n        });\r\n\r\n        if (!isUserJoinFight && fight.fight_type === \"private\" && this.props.user.email !== fight.user_created) {\r\n            return <Slide in={true} direction=\"down\" {...(true ? { timeout: 1000 } : {})} style={{ minWidth: 100 }}>\r\n                <Notfoundpage />\r\n            </Slide>\r\n        }\r\n\r\n        return (\r\n            <SnackbarProvider maxSnack={1}>\r\n                <Grid xs={12} style={{ position: 'relative', display: 'flex', justifyContent: 'flex-end', alignItems: \"flex-start\" }}>\r\n                    <Slide in={isOpenSearchFriend} direction=\"down\" {...(true ? { timeout: 1000 } : {})} style={{ minWidth: 100 }}>\r\n                        <Grid container xs={7} style={{ position: 'absolute', zIndex: 999 }} onClickAway={this.closeModalError}>\r\n                            <Grid item xs={6} md={6} sm={6}>\r\n                                <Box p={2} borderRadius={16} borderColor=\"grey.500\" border={4} style={{ width: '100%', height: 500, overflowY: \"auto\", overflowX: \"hidden\", backgroundColor: \"#FFFFFF\", }}>\r\n                                    <Box p={1}>\r\n                                        <TextField id=\"outlined-basic\" label=\"Tìm kiếm bạn bè\" variant=\"outlined\" fullWidth\r\n                                            value={email}\r\n                                            onChange={this.handleSearchUser}\r\n                                            InputProps={{\r\n                                                startAdornment: <SearchIcon position=\"start\"></SearchIcon>,\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box p={1}>\r\n                                        {isLoadingSearch ?\r\n                                            <Grid container justify=\"center\" justifyContent=\"center\">\r\n                                                <CircularProgress />\r\n                                            </Grid>\r\n                                            :\r\n                                            userList\r\n                                        }\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6} md={6} sm={6}>\r\n                                <Box borderRadius={16} borderColor=\"grey.500\" border={4} p={2} style={{ width: '100%', height: 500, backgroundColor: \"#FFFFFF\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                                    <Grid container xs={12}>\r\n                                        <Grid item container xs={4} md={4} sm={4}>\r\n                                            <Box p={1}>\r\n                                                <Typography style={{ fontWeight: 600, fontSize: 15 }}>Bạn bè ({invitedUserList.length})</Typography>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Divider />\r\n                                        <Grid item container xs={6} md={6} sm={6}>\r\n                                            <Box>\r\n                                                <Button variant=\"contained\" style={{ backgroundColor: \"#257885\", color: \"white\" }} onClick={this.inviteFriendByMail}\r\n                                                    startIcon={<SendIcon style={{ color: \"white\" }} />}>\r\n                                                    <Typography style={{ color: \"white\", fontWeight: 500 }}>\r\n                                                        Gửi\r\n                                                    </Typography>\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item container xs={2} md={2} sm={2} justify=\"flex-end\">\r\n                                            <Box>\r\n                                                <IconButton aria-label=\"delete\" onClick={this.closeModalError}>\r\n                                                    <CloseIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12}>\r\n                                        <Box p={1}>\r\n                                            {invitedUserList}\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Divider />\r\n                    <Grid xs={12} style={{ zIndex: 1 }}>\r\n                        <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                            <Grid style={{ backgroundColor: \"white\", borderRadius: 8 }} container xs={12} justify=\"center\">\r\n                                <Grid xs={12} sm={3} md={3}>\r\n                                    <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"220\"\r\n                                            src={fight.backgroud_img}\r\n                                            title=\"Contemplative Reptile\"\r\n                                            style={{ borderRadius: 16 }}\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={12} sm={9} md={9}>\r\n                                    <Box mx={2} mt={2} display=\"flex\">\r\n                                        <Grid container xs={12}>\r\n                                            <Grid container item xs={6} sm={6} md={6}>\r\n                                                <Typography style={{ fontSize: 35, fontWeight: 900, color: \"#353535 \" }}>\r\n                                                    {fight.fight_name} {this.renderFighType(fight.fight_type)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={6} sm={6} md={6} justify=\"flex-end\" alignContent=\"center\">\r\n                                                {this.renderRegisterButton(contestStatus, isUserJoinFight)}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mx={2} mb={8} display=\"flex\">\r\n                                        <Typography style={{ fontSize: 20, fontWeight: 300 }}>\r\n                                            {fight.fight_desc}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    <Box p={2} display=\"flex\">\r\n                                        <Grid container xs={12}>\r\n                                            <Grid item xs={2}>\r\n                                                <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                                                    {users_fight.length + \"/\" + fight.numbers_std} thí sinh\r\n                                            </Typography>\r\n                                            </Grid>\r\n                                            <Grid item container xs={2} justify=\"center\">\r\n                                                <Typography noWrap style={{ fontSize: 18, fontWeight: 550, color: \"#4F5060\" }}>\r\n                                                    Host: {fight.user_created}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item container xs={6} justify=\"center\" alignItems=\"center\">\r\n                                                <Grid>\r\n                                                    {timer}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} container justify=\"flex-end\" alignItems=\"center\">\r\n                                                {this.renderInviteFriendButton(fight.user_created, contestStatus)}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Fade>\r\n                        <Divider />\r\n                        {\r\n                            contestStatus === -1 && this.props.user.email !== fight.user_created ?\r\n                                <Box mt={2}>\r\n                                    <Grid container xs={12} spacing={1}>\r\n                                        <Fade in={true} {...(true ? { timeout: 1000 } : {})}>\r\n                                            <Grid item xs={12} md={12} sm={12}>\r\n                                                <Paper>\r\n                                                    <Box p={1}>\r\n                                                        <Box my={1} display=\"flex\">\r\n                                                            <Box mx={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                                                <Box>\r\n                                                                    <EqualizerIcon fontSize=\"large\" />\r\n                                                                </Box>\r\n                                                            </Box>\r\n                                                            <Box mx={1}>\r\n                                                                <Typography style={{ fontWeight: 500, fontSize: 22 }}>Danh sách thí sinh</Typography>\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                        <Box my={1} p={1}>\r\n                                                            {this.headerLeaderBoard()}\r\n                                                            <Divider />\r\n                                                            <Box my={1}>\r\n                                                                {\r\n                                                                    leaderBoard.length === 0 ?\r\n                                                                        <Typography style={{ fontWeight: 200, fontSize: 18, color: \"gray\" }}>Chưa có người dùng tham gia</Typography> :\r\n                                                                        leaderBoard\r\n                                                                }\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </Fade>\r\n                                    </Grid>\r\n                                </Box>\r\n                                :\r\n                                <Box mt={1}>\r\n                                    <Grid container xs={12} spacing={1}>\r\n                                        <Grid item xs={7} md={7} sm={7} disable=\"true\">\r\n                                            <Paper>\r\n                                                <Box p={1}>\r\n                                                    <Grid container>\r\n                                                        <Grid container xs={1}>\r\n                                                            <Box ml={2}>\r\n                                                                <CodeIcon fontSize=\"large\" />\r\n                                                            </Box>\r\n                                                        </Grid>\r\n                                                        <Grid container xs={7} justify=\"flex-start\">\r\n                                                            <Typography style={{ fontWeight: 600, fontSize: 22 }}>Thách thức ({fight_minitask.length})</Typography>\r\n                                                        </Grid>\r\n                                                        <Grid container xs={4} justify=\"flex-end\" alignItems=\"flex-end\">\r\n                                                            {this.renderStartButton()}\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Box my={1}>\r\n                                                        {\r\n                                                            fight_minitask_list.length === 0 ?\r\n                                                                <Typography style={{ fontWeight: 200, fontSize: 18, color: \"gray\" }}>Không có dữ liệu</Typography> :\r\n                                                                fight_minitask_list\r\n                                                        }\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs={5} md={5} sm={5}>\r\n                                            <Paper>\r\n                                                <Grid>\r\n                                                    <Box p={1}>\r\n                                                        <Box my={1} display=\"flex\">\r\n                                                            <Grid container xs={1}>\r\n                                                                <Box mx={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                                                    <Box>\r\n                                                                        <EqualizerIcon fontSize=\"large\" />\r\n                                                                    </Box>\r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                            <Grid container xs={7}>\r\n                                                                <Box mx={1}>\r\n                                                                    <Typography style={{ fontWeight: 600, fontSize: 22 }}>Danh sách thí sinh</Typography>\r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                            <Grid container xs={4} justify=\"flex-end\">\r\n                                                                <Fade in={true}>\r\n                                                                    <Box mx={1}>\r\n                                                                        <Button variant=\"contained\" onClick={this.handleClickViewLeaderBoard} style={{ backgroundColor: \"#007ABB\" }}>\r\n                                                                            <Typography style={{ fontSize: 15, fontWeight: 500, color: \"#FFFFFF\" }}>\r\n                                                                                Xếp hạng\r\n                                                                            </Typography>\r\n                                                                        </Button>\r\n                                                                    </Box>\r\n                                                                </Fade>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                        <Box my={1} p={1}>\r\n                                                            {this.headerLeaderBoard()}\r\n                                                            <Divider />\r\n                                                            <Box my={1}>\r\n                                                                {leaderBoard}\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </SnackbarProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.rootReducer.user\r\n});\r\n\r\nexport default withSnackbar(connect(mapStateToProps, null)(withRouter(RoomDetail)));","import React, { Component } from 'react';\r\nimport {\r\n    TableCell, Typography, Grid\r\n} from \"@material-ui/core\";\r\n\r\nclass MinitaskBoard extends Component {\r\n    render() {\r\n\r\n        const { minitask, index } = this.props;\r\n\r\n        return (\r\n            <TableCell align=\"center\">\r\n                <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography noWrap style={{ fontSize: 15, fontWeight: 600, color: \"white\" }}>\r\n                            BÀI {index + 1}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography noWrap style={{ fontSize: 15, fontWeight: 600, color: \"white\" }}>\r\n                            {minitask.mini_task_name}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </TableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinitaskBoard;","import React, { Component } from 'react';\r\nimport {\r\n    TableCell, Grid, Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nclass MinitaskBoardInfo extends Component {\r\n    render() {\r\n\r\n        const { status, tried, point } = this.props;\r\n\r\n        return (\r\n            <TableCell align=\"center\">\r\n                <Grid container justify=\"center\">\r\n                    {\r\n                        status===\"tried\" ? <ErrorOutlineIcon color=\"primary\" fontSize=\"medium\" /> : <DoneIcon style={{ color: \"#4FB834\" }} fontSize=\"medium\" />\r\n                    }\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 500 }}>\r\n                        {\r\n                            status === \"tried\" ? \"-\" : point\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography style={{ fontSize: 12, fontWeight: 400, color: \"#70757A\" }}>\r\n                        {tried} lần thử\r\n                    </Typography>\r\n                </Grid>\r\n            </TableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinitaskBoardInfo;","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass TopUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            widthAvt: 0,\r\n            heightAvt: 0,\r\n            medal: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { rank } = this.props;\r\n        if (rank === 1 + \"st\") {\r\n            this.setState({ widthAvt: 100, heightAvt: 100, medal: '#EAA30B' });\r\n        }\r\n        if (rank === 2 + \"nd\") {\r\n            this.setState({ widthAvt: 80, heightAvt: 80, medal: '#A7B1B1' });\r\n        }\r\n        if (rank === 3 + \"rd\") {\r\n            this.setState({ widthAvt: 60, heightAvt: 60, medal: '#CB8E66' });\r\n        }\r\n    }\r\n\r\n    renderTopUser = () => {\r\n        const { user, rank, leader_board_type, user_fight_info, coding_time } = this.props;\r\n        const { widthAvt, heightAvt, medal } = this.state;\r\n        if (leader_board_type === \"general\") {\r\n            return <Box display=\"flex\"\r\n                alignItems=\"flex-end\"\r\n                justifyContent=\"center\"\r\n                mt={2}\r\n                css={{ height: 200 }}\r\n            >\r\n                <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n                    <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n                        <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n                            src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {rank}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                            {user.firstname + \" \" + user.lastname}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box bgcolor={medal} style={{ height: '45px' }} justifyContent=\"flex-start\" alignItems=\"center\">\r\n                        <Box p={1}>\r\n                            <Typography variant=\"overline\" display=\"block\">\r\n                                Điểm: {user.codepoint}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>;\r\n        } else if (leader_board_type === \"fight\") {\r\n            // return <Box display=\"flex\"\r\n            //     alignItems=\"center\"\r\n            //     justifyContent=\"center\"\r\n            //     mt={2}\r\n            //     css={{ height: 200 }}\r\n            // >\r\n            //     <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n            //         <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n            //             <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n            //                 src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n            //         </Box>\r\n            //         <Box display=\"flex\" justifyContent=\"center\">\r\n            //             <Typography variant=\"h5\" component=\"h2\">\r\n            //                 {rank}\r\n            //             </Typography>\r\n            //         </Box>\r\n            //         <Box display=\"flex\" justifyContent=\"center\">\r\n            //             <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n            //                 {user.firstname + \" \" + user.lastname}\r\n            //             </Typography>\r\n            //         </Box>\r\n            //         <Box bgcolor={medal} p={1} style={{ height: '47px' }}>\r\n            //             <Grid container xs={12} justify=\"center\" alignItems=\"center\">\r\n            //                 <Grid xs={6} container justify=\"center\" alignItems=\"center\">\r\n            //                     <Box>\r\n            //                         <Typography variant=\"button\" display=\"block\">\r\n            //                             Điểm: {user_fight_info.point}\r\n            //                         </Typography>\r\n            //                     </Box>\r\n            //                 </Grid>\r\n            //                 <Grid xs={6} container justify=\"center\" alignItems=\"center\">\r\n            //                     <Box>\r\n            //                         <Typography variant=\"button\" display=\"block\">\r\n            //                             Thời gian: {coding_time}\r\n            //                         </Typography>\r\n            //                     </Box>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //         </Box>\r\n            //     </Box>\r\n            // </Box>;\r\n            return <Box display=\"flex\"\r\n                alignItems=\"flex-end\"\r\n                justifyContent=\"center\"\r\n                mt={4}\r\n                mb={1}\r\n                css={{ height: 200 }}\r\n            >\r\n                <Box boxShadow={3} style={{ width: '100%' }} bgcolor=\"white\" borderRadius=\"borderRadius\">\r\n                    <Box display=\"flex\" mt={2} justifyContent=\"center\">\r\n                        <Avatar alt=\"Cindy Baker\" style={{ width: widthAvt, height: heightAvt }}\r\n                            src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {rank}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                            {user.firstname + \" \" + user.lastname}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box bgcolor={medal} display=\"flex\" style={{ height: '45px' }} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Box p={1}>\r\n                            <Typography variant=\"button\" display=\"block\">\r\n                                Điểm: {user_fight_info.point}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1}>\r\n                            <Typography variant=\"button\" display=\"block\">\r\n                                Thời gian: {coding_time}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // let { user, rank, leader_board_type } = this.props;\r\n        // let { widthAvt, heightAvt, medal } = this.state;\r\n        return (\r\n            <Grid xs={4} justify=\"center\" item>\r\n                {this.renderTopUser()}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopUser;","import React, { Component } from 'react';\r\nimport {\r\n    Grid,\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow, TableCell, TableBody, Typography, Divider,\r\n    Box, CardMedia, Paper,\r\n    Slide, Fade\r\n} from \"@material-ui/core\";\r\nimport MinitaskBoard from \"./MinitaskBoard\";\r\nimport MinitaskBoardInfo from \"./MinitaskBoardInfo\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport { matchPath } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport TopUser from \"../leaderboard/TopUser\";\r\n\r\nimport { connectWebSocket, sendMsg } from \"../../websocket\";\r\n\r\nclass MainLeaderBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            fight: {},\r\n            leaderBoard: [],\r\n            fight_minitasks: [],\r\n            contestStatus: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            isLoading: true,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var id = this.getParams(this.props.location.pathname).id;\r\n        await Promise.all([\r\n            // Fight ID\r\n            connectWebSocket((msg) => {\r\n                // alert(\"hello\")\r\n                console.log(msg.data);\r\n                var data = JSON.parse(msg.data);\r\n                if (data.message === \"get-leader-board\") {\r\n                    console.log(\"get leader board change\");\r\n                    this.setState({\r\n                        leaderBoard: data.leader_board,\r\n                    })\r\n                }\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(res => {\r\n                this.setState({ fight: res.data }, () => {\r\n                    var code;\r\n                    const { fight } = this.state;\r\n                    if ((new Date() < new Date(fight.time_start))) {\r\n                        code = -1;\r\n                    }\r\n                    if ((new Date() > new Date(fight.time_start)) && (new Date() < new Date(fight.time_end))) {\r\n                        // Đang diển ra\r\n                        code = 0;\r\n                    }\r\n                    if ((new Date() > new Date(fight.time_end))) {\r\n                        code = 1;\r\n                    }\r\n                    this.setState({ contestStatus: code });\r\n                    this.interval = setInterval(() => {\r\n                        const date = this.calculateCountdown(code === -1 ? fight.time_start : fight.time_end);\r\n                        date ? this.setState(date) : this.stop();\r\n                    }, 1000);\r\n                })\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/fights/${id}`).then(user => {\r\n                const fight = user.data;\r\n                console.log(fight);\r\n                this.setState({\r\n                    fight\r\n                });\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/user-fight-leader-board/${id}`).then(user => {\r\n                const users_fight = user.data;\r\n                console.log(users_fight);\r\n                this.setState({\r\n                    leaderBoard: user.data,\r\n                    isLoading: false,\r\n                });\r\n            }),\r\n            axios.get(`http://localhost:8081/api/v1/curd/listminitaskfight/${id}`).then(user => {\r\n                const fight_minitasks = user.data;\r\n                this.setState({ fight_minitasks })\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    send = () => {\r\n\r\n        const id = this.getParams(this.props.location.pathname).id;\r\n\r\n        console.log(\"send\");\r\n\r\n        sendMsg(JSON.stringify({\r\n            fight_id: id,\r\n            user_id: \"\",\r\n            minitask_id: \"\",\r\n            point: 0,\r\n            request: \"get-leader-board\",\r\n        }))\r\n    }\r\n\r\n    calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n\r\n        const timeLeft = {\r\n            years: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            min: 0,\r\n            sec: 0,\r\n            millisec: 0,\r\n        };\r\n\r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n            diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n            timeLeft.days = Math.floor(diff / 86400);\r\n            diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n            timeLeft.hours = Math.floor(diff / 3600);\r\n            diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n            timeLeft.min = Math.floor(diff / 60);\r\n            diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n            value = '0' + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    getParams = pathname => {\r\n        const fight = matchPath(pathname, {\r\n            path: `/profile/fight-leader-board/:id`\r\n        });\r\n        return (fight && fight.params) || {};\r\n    };\r\n\r\n    renderCodingTime = (miliSec) => {\r\n        var seconds = Math.floor((miliSec / 1000) % 60),\r\n            minutes = Math.floor((miliSec / (1000 * 60)) % 60),\r\n            hours = Math.floor((miliSec / (1000 * 60 * 60)) % 24);\r\n\r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n        seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n\r\n    renderRank = (rank) => {\r\n        if (rank === 1) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/1st.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else if (rank === 2) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/2nd.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else if (rank === 3) {\r\n            return <CardMedia\r\n                style={{\r\n                    width: 45,\r\n                    height: 40\r\n                }}\r\n                image=\"https://codelearnstorage.s3.amazonaws.com/Themes/TheCodeCampPro/Resources/Images/landing/3rd.png\"\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        } else {\r\n            return <Typography noWrap style={{ fontSize: 15, fontWeight: 600 }}>\r\n                {rank}\r\n            </Typography>\r\n        }\r\n    }\r\n\r\n    renderFightUserMinitask = (minitasks) => {\r\n        const result = minitasks.map((minitask) => {\r\n            return <MinitaskBoardInfo status={minitask.status} point={minitask.point} tried={minitask.tried} />\r\n        });\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { leaderBoard, fight_minitasks, fight, contestStatus, days, hours, min, sec, isLoading } = this.state;\r\n\r\n        const fight_minitask_list = fight_minitasks.map((minitask, index) => {\r\n            return <MinitaskBoard minitask={minitask} index={index} />\r\n        });\r\n\r\n        let timer;\r\n        if (contestStatus === 0) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#f44336\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                        Còn lại\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#f44336\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === -1) {\r\n            timer = <Box display=\"flex\">\r\n                <Box mx={2} display=\"flex\" color=\"#4caf50\">\r\n                    <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                        Sắp diển ra\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={1} display=\"flex\" color=\"#4caf50\">\r\n                    <Box order={4}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(sec) + ' giây '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={3}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(min) + ' phút '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={2}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(hours) + ' giờ '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box order={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }} gutterBottom>\r\n                            {this.addLeadingZeros(days) + ' ngày '}&nbsp;\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        } else if (contestStatus === 1) {\r\n            timer = <React.Fragment>\r\n                <Box display=\"flex\" color=\"#757575\">\r\n                    <Box mx={1}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            Kết thúc\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={1} display=\"flex\" color=\"#757575\">\r\n                        <Typography style={{ fontSize: 18, fontWeight: 550 }}>\r\n                            {new Date(fight.time_end).toISOString().replace(/T/, ' ').replace(/\\..+/, '')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </React.Fragment>\r\n        }\r\n\r\n        const userList = leaderBoard.map((user) => {\r\n            return <TableBody>\r\n                <TableRow >\r\n                    <TableCell align=\"center\">\r\n                        <Grid container justify=\"center\">\r\n                            {this.renderRank(user.rank + 1)}\r\n                        </Grid>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Grid container>\r\n                            <Typography noWrap style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                {user.email}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </TableCell>\r\n                    {this.renderFightUserMinitask(user.fight_user_minitask)}\r\n                    <TableCell>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 21, fontWeight: 500, color: \"#E3524B\" }}>\r\n                                {user.point}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 14, fontWeight: 400, color: \"#70757A\", fontStyle: \"Italic\" }}>\r\n                                {\r\n                                    user.coding_time === -1 ? \"00:00:00\" :\r\n                                        this.renderCodingTime(user.coding_time)\r\n                                }\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography style={{ fontSize: 12, fontWeight: 400, color: \"#70757A\" }}>\r\n                                {user.tried} lần thử\r\n                            </Typography>\r\n                        </Grid>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    isLoading ?\r\n                        <div\r\n                            className=\"sweet-loading\"\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                width: \"100%\",\r\n                                height: \"100vh\"\r\n                            }}\r\n                        >\r\n                            <HashLoader\r\n                                sizeUnit={\"px\"}\r\n                                size={50}\r\n                                color={\"#AEA8A8\"}\r\n                                loading={this.state.isLoading}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <Grid>\r\n                            {/* <button onClick={this.send}>Hit</button> */}\r\n                            <Slide in={true} direction=\"down\" {...(true ? { timeout: 1500 } : {})}>\r\n                                <Paper>\r\n                                    <Box p={1}>\r\n                                        <Grid container justify=\"center\">\r\n                                            <Grid container xs={12} justify=\"center\">\r\n                                                <Box display=\"flex\" p={2}>\r\n                                                    <ShowChartIcon style={{ fontSize: 60, fontWeight: 250, color: \"gray\" }} />\r\n                                                    <Typography style={{ fontSize: 40, fontWeight: 400, color: \"#009688\" }}>\r\n                                                        {fight.fight_name}\r\n                                                    </Typography>\r\n                                                    <ShowChartIcon style={{ fontSize: 60, fontWeight: 250, color: \"gray\" }} />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid container xs={12} justify=\"center\">\r\n                                                <Box display=\"flex\">\r\n                                                    {timer}\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Paper>\r\n                            </Slide>\r\n                            {/* <Divider /> */}\r\n                            <Box>\r\n                                <Grid container justify=\"center\" spacing={1}>\r\n                                    <Slide in={true} direction=\"right\" {...(true ? { timeout: 1500 } : {})}>\r\n                                        <TopUser\r\n                                            leader_board_type=\"fight\"\r\n                                            user={leaderBoard[1].user_info}\r\n                                            user_fight_info={leaderBoard[1]}\r\n                                            rank={2 + \"nd\"}\r\n                                            coding_time={\r\n                                                leaderBoard[1].coding_time === -1 ? \"00:00:00\" :\r\n                                                    this.renderCodingTime(leaderBoard[1].coding_time)\r\n                                            }\r\n                                        />\r\n                                    </Slide>\r\n                                    <Fade in={true} {...(true ? { timeout: 1500 } : {})}>\r\n                                        <TopUser \r\n                                            leader_board_type=\"fight\" \r\n                                            user={leaderBoard[0].user_info} \r\n                                            user_fight_info={leaderBoard[0]} \r\n                                            rank={1 + \"st\"} \r\n                                            coding_time={\r\n                                                leaderBoard[0].coding_time === -1 ? \"00:00:00\" :\r\n                                                    this.renderCodingTime(leaderBoard[0].coding_time)\r\n                                            }\r\n                                        />\r\n                                    </Fade>\r\n                                    <Slide in={true} direction=\"left\" {...(true ? { timeout: 1500 } : {})}>\r\n                                        <TopUser \r\n                                            leader_board_type=\"fight\" \r\n                                            user={leaderBoard[2].user_info} \r\n                                            user_fight_info={leaderBoard[2]} \r\n                                            rank={3 + \"rd\"} \r\n                                            coding_time={\r\n                                                leaderBoard[2].coding_time === -1 ? \"00:00:00\" :\r\n                                                    this.renderCodingTime(leaderBoard[2].coding_time)\r\n                                            }\r\n                                        />\r\n                                    </Slide>\r\n                                </Grid>\r\n                            </Box>\r\n                            <TableContainer >\r\n                                <Slide in={true} direction=\"up\" {...(true ? { timeout: 1500 } : {})}>\r\n                                    <Paper>\r\n                                        <Box p={1}>\r\n                                            <Table aria-label=\"simple table\">\r\n                                                <TableHead style={{ backgroundColor: \"#39B9AA\" }}>\r\n                                                    <TableRow>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                HẠNG\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                TÊN ĐĂNG NHẬP\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                        {fight_minitask_list}\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{ fontSize: 15, fontWeight: 500 }}>\r\n                                                                TỔNG ĐIỂM\r\n                                                        </Typography>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                {userList}\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Paper>\r\n                                </Slide>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainLeaderBoard;","import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\n//import ReactAdmin from \"../adminPage/hocode/ReactAdmin\";\r\nimport BallotIcon from \"@material-ui/icons/Ballot\";\r\nimport CardMembershipIcon from \"@material-ui/icons/CardMembership\";\r\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../js/actions/authActions\";\r\nimport Account from \"./content/account/Account\";\r\nimport CourseBody from \"./content/course/CourseBody1\";\r\nimport CreateMiniTask from \"./content/minitask/CreateMiniTaskBody\";\r\n//import MinitaskEdit from \"./content/minitask/MinitaskEdit\";\r\nimport Overview from \"./content/overview/Overview\";\r\nimport PrintBody from \"./content/print/PrintBody\";\r\nimport TaskBody from \"./content/task/TaskBody\";\r\nimport AppBarContent from \"./header/AppBarContent\";\r\nimport NavRight from \"./navRight/NavRight\";\r\nimport PracticePage from \"../practicePage/PracticePage\";\r\nimport \"./profilepage.css\";\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport RoomPracticePage from '../roomPractice/RoomPracticePage';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CreateRoomPage from '../roomPractice/CreateRoomPage';\r\nimport UpdateFightPage from '../roomPractice/UpdateFightPage';\r\nimport RoomDetail from '../roomPractice/RoomDetail';\r\nimport MainLeaderBoard from '../roomPractice/MainLeaderBoard';\r\n\r\nconst drawerWidth = 240;\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    background: \"#fff\"\r\n  },\r\n  drawerMain: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  navRight: {\r\n    top: \"65px\",\r\n    order: 2,\r\n    width: \"210px\",\r\n    height: \"calc(100vh - 65px)\",\r\n    display: \"none\",\r\n    padding: \"16px 32px\",\r\n    position: \"relative\", // sticky\r\n    // marginTop: \"65px\",\r\n    overflow: \"hidden\",\r\n    flexShrink: 0,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\"\r\n    },\r\n    background: \"white\"\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    },\r\n    background: \"#fff\",\r\n    boxShadow: \"unset!important\",\r\n    borderBottom: \"1px solid rgba(76, 87, 102, .1)\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    borderRadius: \"unser !important\"\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    background: \"#EFECE9\"\r\n  },\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  }\r\n});\r\nclass ProfilePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: [],\r\n      mobileOpen: false,\r\n      menu: 1\r\n    };\r\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\r\n\r\n    // console.log(this.props.match.url);\r\n  }\r\n\r\n  handleDrawerToggle() {\r\n    this.setState({ mobileOpen: !this.state.mobileOpen });\r\n  }\r\n  onClickMenuItem(menu) {\r\n    return e => {\r\n      this.setState({\r\n        menu: menu\r\n      });\r\n    };\r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    console.log(this.props);\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, container } = this.props;\r\n    const { mobileOpen } = this.state;\r\n    let { path, url } = this.props.match;\r\n    console.log(\"[path]\");\r\n    console.log(path);\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const drawer = (\r\n      <div style={{ height: \"100%\", overflow: \"hidden\" }}>\r\n        <div\r\n          className={classes.toolbar}\r\n          style={{\r\n            borderBottom: \"1px solid rgba(76, 87, 102, .1)\",\r\n            minHeight: 65,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div className=\"logo\">\r\n            <Link to=\"/profile\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                alt=\"\"\r\n                style={{ height: \"30px\" }}\r\n              ></img>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <MenuList className=\"menuLeftDrawer\" style={{ height: \"100%\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            // justify=\"center\"\r\n            // alignItems=\"center\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Link to={`${url}/overview`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/overview` || pathname === `${url}` || pathname === `${url}/`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <AppsIcon style={{ fontSize: 18 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Trang chủ</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/practice`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/practice`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <KeyboardIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Luyện tập</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/course`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/course`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <ImportContactsIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Học tập</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/print`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/print`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <CardMembershipIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>\r\n                  Nhật ký luyện tập\r\n                </p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/fight`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/fight`}\r\n                onClick={this.onClickMenuItem(1)}\r\n                dense=\"true\"\r\n              >\r\n                <GroupIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Chiến đấu</p>\r\n              </MenuItem>\r\n            </Link>\r\n            {this.props.user.role === \"mod\" ||\r\n              this.props.user.role === \"admin\" ? (\r\n                <Link to={`/admin`}>\r\n                  <MenuItem\r\n                    selected={pathname === `${url}/admin`}\r\n                    onClick={this.onClickMenuItem(1)}\r\n                  >\r\n                    <BallotIcon style={{ fontSize: 16 }} />\r\n                    <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Quản lý</p>\r\n                  </MenuItem>\r\n                </Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n            {/* <Link to={`${url}/account`}>\r\n            <MenuItem\r\n              selected={pathname === `${url}/account`}\r\n              onClick={this.onClickMenuItem(1)}\r\n            >\r\n              <AccountBoxIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n            </MenuItem>\r\n          </Link> */}\r\n\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-end\",\r\n                marginBottom: \"65px\"\r\n              }}\r\n            >\r\n              <Link to={`${url}/account`}>\r\n                <MenuItem\r\n                  selected={pathname === `${url}/account`}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  <PowerSettingsNewIcon style={{ fontSize: 16 }} />\r\n                  <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Đăng xuất</p>\r\n                </MenuItem>\r\n              </Link>{\" \"}\r\n            </Grid>\r\n          </Grid>\r\n        </MenuList>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <AppBarContent />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav\r\n          className={` ${classes.drawerMain} drawerMain `}\r\n          aria-label=\"nav main\"\r\n        >\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <nav className={classes.navRight} aria-label=\"nav right\">\r\n          <NavRight />\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/overview`}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/practice`}>\r\n              <PracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/course`}>\r\n              <CourseBody url={url} />\r\n            </Route>\r\n            <Route path={`${path}/contest`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/courses/:courseId/tasks`}>\r\n              <TaskBody location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/print`}>\r\n              <PrintBody userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/contest-detail/:id`}>\r\n              <RoomDetail location={this.props.location} userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/fight`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            {/* <Route path={`${path}/admin`}>\r\n\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/overview`}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/practice`}>\r\n              <PracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/course`}>\r\n              <CourseBody url={url} />\r\n            </Route>\r\n            <Route path={`${path}/fight`}>\r\n              <RoomPracticePage url={url} />\r\n            </Route>\r\n            <Route path={`${path}/courses/:courseId/tasks`}>\r\n              <TaskBody location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/print`}>\r\n              <PrintBody userData={this.props.user} />\r\n            </Route>\r\n            <Route path={`${path}/fight-detail/:id`}>\r\n              <RoomDetail userData={this.props.user} />\r\n            </Route>\r\n            {/* <Route path={`${path}/admin`}>\r\n              <ReactAdmin />\r\n            </Route> */}\r\n            <Route path={`${path}/create-contest`}>\r\n              <CreateRoomPage />\r\n            </Route>\r\n            <Route path={`${path}/update-contest/:id`}>\r\n              <UpdateFightPage location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/account`}>\r\n              <Account />\r\n            </Route>\r\n            <Route exact path={`${path}/minitasks/createminitask`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <CreateMiniTask location={this.props.location} />\r\n              </Paper>\r\n            </Route>\r\n            <Route exact path={`${path}/fight-leader-board/:id`}>\r\n              <MainLeaderBoard location={this.props.location} />\r\n            </Route>\r\n            {/* <Route exact path={`${path}/minitasks/:minitasksId/edit`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <MinitaskEdit location={this.props.location} />\r\n              </Paper>\r\n            </Route> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { logoutUser })(ProfilePage)\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, registerUser, setCurrentUser } from \"../../js/actions/authActions\";\r\n\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport '../../App.css';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport axios from \"axios\";\r\n\r\n// import setAuthToken from \"../../js/utils/setAuthToken\";\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\n// import {\r\n//   FacebookShareCount,\r\n//   FacebookIcon,\r\n//   FacebookShareButton\r\n// } from \"react-share\";\r\n\r\nimport \"./LoginPage.css\";\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"5px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      remember: true,\r\n      isLoading: false,\r\n      errors: {},\r\n      // userDataRegister: {\r\n      //   email: \"\",\r\n      //   password: \"\",\r\n      //   firstName: \"\",\r\n      //   lastName: \"\",\r\n      //   avatar: \"\"\r\n      // }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleChange = name => event => {\r\n    this.setState({ ...this.state, [name]: event.target.checked });\r\n  };\r\n\r\n  onSubmitTest = e => {\r\n    this.setState({\r\n      email: \"thiennd@gmail.com\",\r\n      password: \"Thien123\"\r\n    });\r\n  };\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      remember: this.state.remember\r\n    };\r\n\r\n    var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n    loginF.then(val => {\r\n      this.setState({ isLoading: false });\r\n    });\r\n\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response);\r\n\r\n    const userData = {\r\n      email: response.email,\r\n      password: response.email + response.id,\r\n      firstName: response.name,\r\n      lastName: \"\",\r\n      avt: response.picture.data.url,\r\n      socialAccount: \"facebook\",\r\n      remember: true\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/isNewAccount\", userData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data === \"new\") {\r\n          axios\r\n            .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n            .then(res => {\r\n\r\n              console.log(userData);\r\n\r\n              var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n              loginF.then(val => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n            })\r\n        }\r\n        else {\r\n\r\n          var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n          loginF.then(val => {\r\n            this.setState({ isLoading: false });\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  responseGoogle = (response) => {\r\n    // console.log(response.Qt.jL);\r\n    console.log(response.profileObj.email);\r\n    console.log(response.accessToken);\r\n\r\n    const userData = {\r\n      email: response.profileObj.email,\r\n      avt: response.profileObj.imageUrl,\r\n      password: response.profileObj.email +\r\n        response.profileObj.googleId,\r\n      firstName: response.profileObj.givenName,\r\n      lastName: response.profileObj.familyName,\r\n      socialAccount: \"google\",\r\n      remember: true\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8081/api/v1/isNewAccount\", userData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data === \"new\") {\r\n          axios\r\n            .post(\"http://localhost:8081/api/v1/signup\", userData)\r\n            .then(res => {\r\n              console.log(res);\r\n\r\n              var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n              loginF.then(val => {\r\n                this.setState({ isLoading: false });\r\n              });\r\n\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n        }\r\n        else {\r\n          var loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\n          loginF.then(val => {\r\n            this.setState({ isLoading: false });\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log(userData);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n    // const primary = red[500]; // #F44336\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n            <div className=\"logo\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"80px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n            />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      value=\"remember\"\r\n                      color=\"primary\"\r\n                      onChange={this.handleChange(\"remember\")}\r\n                      checked={this.state.remember}\r\n                    />\r\n                  }\r\n                  label=\"Lưu tài khoản\"\r\n                />\r\n              </Grid>\r\n              {/* <Button variant=\"contained\" onClick={this.onSubmitTest}>\r\n                Tài khoản admin test\r\n              </Button> */}\r\n              {/* <Button variant=\"contained\" onClick={this.onSubmitTest}>\r\n                Tài khoản mod test\r\n              </Button> */}\r\n            </Grid>\r\n\r\n            {/* <Button fullWidth variant=\"contained\" onClick={this.onSubmitTest}>\r\n              Tài khoản admin test\r\n            </Button> */}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {this.state.isLoading ? (\r\n                <CircularProgress\r\n                  size={22}\r\n                  color=\"#fff\"\r\n                  style={{ margin: 2 }}\r\n                />\r\n              ) : (\r\n                  \"Đăng nhập\"\r\n                )}\r\n            </Button>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6} sm={3} ></Grid>\r\n              <Grid item xs={6} sm={3} ></Grid>\r\n              <Grid item xs={6} sm={3} >\r\n                <FacebookLogin\r\n                  isDisabled={false}\r\n                  appId=\"652851902151426\" //APP ID NOT CREATED YET\r\n                  fields=\"name,email,picture\"\r\n                  textButton=\"\"\r\n                  scope=\"public_profile, email, user_birthday\"\r\n                  returnScopes={true}\r\n                  size=\"small\"\r\n                  icon={<i className=\"fab fa-facebook-f icon ml-3 mt-1\"></i>}\r\n                  version=\"2.3\"\r\n                  cssClass=\"btnFacebook\"\r\n                  // icon=\"fa-facebook\"\r\n                  callback={this.responseFacebook}\r\n                // autoLoad={true}\r\n                />\r\n                {/* <FacebookLogin\r\n                  appId=\"652851902151426\" //APP ID NOT CREATED YET\r\n                  fields=\"name,email,picture\"\r\n                  textButton=\"Facebook\"\r\n                  size=\"small\"\r\n                  icon={<i className=\"fab fa-facebook-f icon ml-3 mt-1\"></i>}\r\n                  version=\"2.3\"\r\n                  cssClass=\"btnFacebook\"\r\n                  callback={this.responseFacebook}\r\n                // autoLoad={true}\r\n                /> */}\r\n                {/* <div class=\"fb-login-button\" style={{ 'float': 'left' }} data-width=\"\" data-size=\"large\" data-button-type=\"continue_with\" data-auto-logout-link=\"false\" data-use-continue-as=\"false\"></div> */}\r\n              </Grid>\r\n              <Grid item xs={6} sm={3}>\r\n                {/* <div class=\"ui-content align-icon-right\">\r\n              <span class=\"ui-text\">\r\n                <img class=\"social-btn-icon\" alt=\"Login with Facebook\" src=\"https://hrcdn.net/fcore/assets/facebook-colored-af4249157d.svg\" />\r\n              </span>\r\n            </div> */}\r\n                <GoogleLogin\r\n                  clientId=\"191659603798-o1h3pffa90vi6dkmufi1btf3t05vk8r7.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                  // scope=\"profile,email\"\r\n                  className=\"btnGoogle\"\r\n                  // buttonText=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Google\"\r\n                  buttonText=\"\"\r\n                  icon={false}\r\n                  onSuccess={this.responseGoogle}\r\n                  onFailure={this.responseGoogle}\r\n                // autoLoad={true}\r\n                />\r\n                {/* <div class=\"fb-login-button\" style={{ 'float': 'left' }} data-width=\"\" data-size=\"large\" data-button-type=\"continue_with\" data-auto-logout-link=\"false\" data-use-continue-as=\"false\"></div> */}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  {/* Quên tài khoản */}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body1\">\r\n                  {\"Nếu bạn chưa có tài khoản, Hãy đăng ký ngay\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\"></Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">\r\n                  <a\r\n                    href=\"https://docs.google.com/forms/d/e/1FAIpQLScGsL9g_Hot55sUbVHb0O7uBsWtkBrDE65fmETvflcxvuCdvw/viewform?usp=sf_link\"\r\n                    // variant=\"subtitle1\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    // ref={element => {\r\n                    //   if (element)\r\n                    //     element.style.setProperty(\r\n                    //       \"color\",\r\n                    //       \"#ff5722\",\r\n                    //       \"important\"\r\n                    //     );\r\n                    // }}\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                      color: \"#ff5722!important\"\r\n                    }}\r\n                  >\r\n                    Đăng ký trở thành giáo viên\r\n                  </a>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(mapStateToProps, { loginUser, registerUser, setCurrentUser })(LoginPage)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? ( // xet cho chô nay quyen voi username == giang moi dc cho vao router nay\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return ({\r\n    auth: state.rootReducer.auth,\r\n  })\r\n};\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass User extends Component {\r\n    render() {\r\n        let { user, rank } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Divider light />\r\n                <Box p={1}>\r\n                    <Box display=\"flex\" >\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {rank}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Avatar alt=\"Cindy Baker\" src={user.socialAccount === \"facebook\" || user.socialAccount === \"google\" ? user.avt : user.avatar} />\r\n                        <Box p={1} style={{ width: '34%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {user.firstname + \" \" + user.lastname}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={1} style={{ width: '33%' }}>\r\n                            <Typography gutterBottom variant=\"overline\" component=\"h2\">\r\n                                {user.codepoint}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                <Divider light />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport User from './User';\r\nimport TopUser from './TopUser';\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\nclass leaderboardPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            generalLeaderBoard: [],\r\n            isLoadingData: true,\r\n            topUser: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8081/api/v1/getGeneralLeaderBoard\").then(res => {\r\n            const generalLeaderBoard = res.data;\r\n            const topUser = this.state.topUser;\r\n            for (var i = 0; i < 3; i++) {\r\n                topUser.push(generalLeaderBoard[i]);\r\n            }\r\n            this.setState({ generalLeaderBoard, topUser, isLoadingData: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let leaderBoard = this.state.generalLeaderBoard.map((user, rank) => (<User rank={rank + 1} user={user} />));\r\n        let { isLoadingData, topUser } = this.state;\r\n        return (\r\n            <div style={{ width: \"100%\", height: \"100%\" }}>\r\n                {isLoadingData ?\r\n                    <div style={{ display: 'flex', alignItems: \"center\", justifyContent: 'center', width: '100%', height: \"100%\" }}>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <Box>\r\n                                <HashLoader\r\n                                    sizeUnit={\"px\"}\r\n                                    size={50}\r\n                                    color={\"#AEA8A8\"}\r\n                                    loading={isLoadingData}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </div>\r\n                    :\r\n                    <Grid\r\n                        className=\"containerMain\"\r\n                        style={{\r\n                            height: \"inherit\",\r\n                            width: \"100%\",\r\n                            backgroundPosition: \"center\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"cover\"\r\n                        }}\r\n                    >\r\n                        <Grid\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                width: \"100%\",\r\n                                paddingTop: 0,\r\n                                height: \"inherit\",\r\n                                backgroundColor: \"whitesmoke\"\r\n                            }}\r\n                        >\r\n                            <Grid container className=\"header-homepage\" style={{ backgroundColor: \"white\" }}>\r\n                                <Grid\r\n                                    className=\"HeaderLeftHome\"\r\n                                    item\r\n                                    xs={12}\r\n                                    md={4}\r\n                                    sm={4}\r\n                                    style={{ marginBottom: 0 }}\r\n                                >\r\n                                    <Box p={2}>\r\n                                        <Link to=\"/profile\">\r\n                                            <img\r\n                                                src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                                                alt=\"\"\r\n                                                style={{ height: \"80px\" }}\r\n                                            ></img>\r\n                                        </Link>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid\r\n                                    className=\"HeaderRightHome\"\r\n                                    item\r\n                                    xs={12}\r\n                                    md={8}\r\n                                    sm={8}\r\n                                    container\r\n                                >\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/searchcert\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#2b2b2b\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    paddingLeft: \"20px\",\r\n                                                    paddingRight: \"20px\",\r\n\r\n                                                    // width: \"155px\",\r\n                                                }}\r\n                                                startIcon={<SearchIcon />}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Tra Chứng Chỉ\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/leaderboard\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#6589F9\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    paddingLeft: \"20px\",\r\n                                                    paddingRight: \"20px\",\r\n\r\n                                                    // width: \"155px\",\r\n                                                }}\r\n                                                startIcon={<ShowChartIcon />}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Xếp hạng\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <a\r\n                                            href=\"/login\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#2196f3\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    fontSize: \"16px\",\r\n                                                    boxShadow: \"none\",\r\n                                                    width: \"125px\"\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Đăng nhập\r\n                                    </Button>\r\n                                        </a>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link\r\n                                            to=\"/signup\"\r\n                                            style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                                        >\r\n                                            <Button\r\n                                                style={{\r\n                                                    background: \"#7bccd5\",\r\n                                                    color: \"white\",\r\n                                                    fontWeight: 600,\r\n                                                    boxShadow: \"none\",\r\n                                                    fontSize: \"16px\",\r\n                                                    width: \"125px\"\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                Đăng ký\r\n                                    </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box display=\"flex\" mt={2} justifyContent=\"flex-start\" >\r\n                                <Container fixed>\r\n                                    <Typography gutterBottom variant=\"h4\">\r\n                                        Bảng xếp hạng\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                </Container>\r\n                            </Box>\r\n                            <Box p={3}>\r\n                                <Container fixed>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container justify=\"center\" spacing={1}>\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[1]} rank={2 + \"nd\"} />\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[0]} rank={1 + \"st\"} />\r\n                                            <TopUser leader_board_type=\"general\" user={topUser[2]} rank={3 + \"rd\"} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Container>\r\n                            </Box>\r\n                            <Container fixed>\r\n                                <Box bgcolor=\"white\" boxShadow={2} p={1} mb={3}>\r\n                                    <Box display=\"flex\" fontStyle=\"italic\">\r\n                                        <Box p={1} style={{ width: '33%' }} >\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                #\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '35%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Tên\r\n                                        </Typography>\r\n                                        </Box>\r\n                                        <Box p={1} style={{ width: '30%' }}>\r\n                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                Điểm\r\n                                        </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Divider light />\r\n                                    {leaderBoard}\r\n                                </Box>\r\n                            </Container>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default leaderboardPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport CoursePage from \"./components/coursePage/CoursePage\";\r\nimport TaskPage from \"./components/taskPage/TaskPage\";\r\nimport MiniTaskPage from \"./components/minitaskPage/MinitaskPageResponsive\";\r\nimport HomePage from \"./components/homePage/HomePage\";\r\nimport SignUpPage from \"./components/signUpPage1/SignUpPage\";\r\nimport SearchCertPage from \"./components/searchCertPage/SearchCertPage\";\r\nimport ReactMde from \"./components/minitaskPage/ReactMde\";\r\nimport CreateMiniTask from \"./components/createMinitaskPage/CreateMiniTaskPage\";\r\nimport ReactAdmin from \"./components/adminPage/hocode/ReactAdmin\";\r\nimport ProfilePage from \"./components/profilePage/ProfilePage\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/store.js\";\r\nimport LoginPage from \"./components/loginPage1/LoginPage\";\r\nimport { setCurrentUser, logoutUser } from \"./js/actions/authActions\";\r\nimport setAuthToken from \"./js/utils/setAuthToken\";\r\nimport PrivateRoute from \"./private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport LeaderBoard from \"./components/leaderboard/LeaderboardPage\";\r\nimport PracticePage from \"./components/practicePage/PracticePage\";\r\n// import RoomPracticePage from \"./components/roomPractice/RoomPracticePage\";\r\n\r\n// Check for token to keep user logged in/ xet khi load lai trang\r\nif (localStorage.AuthToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.AuthToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  //console.log(decoded);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Provider\r\n        // store={store}\r\n        store={store}\r\n      >\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={HomePage} />\r\n              <Route path=\"/home\" exact component={HomePage} />\r\n              <Route path=\"/leaderboard\" exact component={LeaderBoard} />\r\n              <Route path=\"/login\" exact component={LoginPage} />\r\n              <Route path=\"/signup\" exact component={SignUpPage} />\r\n              <Route path=\"/reactmde\" exact component={ReactMde} />\r\n              <Route path=\"/searchcert\" component={SearchCertPage} />\r\n\r\n              <PrivateRoute path=\"/courses\" exact component={CoursePage} />\r\n              <PrivateRoute path=\"/practice\" exact component={PracticePage} />\r\n              {/* <PrivateRoute path=\"/practice-with-friend\" component={RoomPracticePage} /> */}\r\n              <PrivateRoute\r\n                path=\"/courses/:courseId/tasks\"\r\n                component={TaskPage}\r\n              />\r\n              <PrivateRoute\r\n                path=\"/tasks/:minitaskId/:courseId/:taskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              <PrivateRoute\r\n                path=\"/minitask/:minitaskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              {/* Private route for fight page */}\r\n              <PrivateRoute\r\n                path=\"/fight/:fightId/minitask/:minitaskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              <Route path=\"/createminitask\" exact component={CreateMiniTask} />\r\n              <PrivateRoute path=\"/admin\" component={ReactAdmin} />\r\n              <PrivateRoute path=\"/profile\" component={ProfilePage} />\r\n              <Route render={() => <div>404 Page Not Found</div>} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    // dev code\r\n    console.log(process.env.NODE_ENV);\r\n} else {    \r\n    // production code\r\n    console.log(process.env.NODE_ENV)\r\n    Sentry.init({dsn: \"https://cd5ce2da28be4dcfaea42bfa2f637fba@sentry.io/1827293\"});\r\n}\r\n\r\nReactDOM.render(<SnackbarProvider><App /></SnackbarProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/giphy.eb842a55.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";"],"sourceRoot":""}